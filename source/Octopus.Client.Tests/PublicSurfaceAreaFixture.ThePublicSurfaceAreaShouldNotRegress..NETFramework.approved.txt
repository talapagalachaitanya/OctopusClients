Octopus.Client
{
  class DefaultLinkResolver
    Octopus.Client.ILinkResolver
  {
    .ctor(Uri, String)
    Uri Resolve(String)
    String ToString()
  }
  interface IHttpOctopusClient
    Octopus.Client.IOctopusClient
    IDisposable
  {
    event Action<WebResponse> AfterReceivingHttpResponse
    event Action<WebRequest> BeforeSendingHttpRequest
  }
  interface ILinkResolver
  {
    Uri Resolve(String)
  }
  interface IOctopusAsyncClient
    IDisposable
  {
    event Action<HttpResponseMessage> AfterReceivedHttpResponse
    event Action<HttpRequestMessage> BeforeSendingHttpRequest
    event Action<OctopusResponse> ReceivedOctopusResponse
    event Action<OctopusRequest> SendingOctopusRequest
    Octopus.Client.IOctopusAsyncRepository Repository { get; }
    Octopus.Client.Model.RootResource RootDocument { get; }
    Task<TResource> Create(String, Octopus.Client.TResource, Object)
    Task Delete(String, Object)
    Task<TResource> Get(String, Object)
    Task<Stream> GetContent(String, Object)
    Task<ResourceCollection<TResource>> List(String, Object)
    Task<IReadOnlyList<TResource>> ListAll(String, Object)
    Task Paginate(String, Func<ResourceCollection<TResource>, Boolean>)
    Task Paginate(String, Object, Func<ResourceCollection<TResource>, Boolean>)
    Task Post(String, Octopus.Client.TResource, Object)
    Task<TResponse> Post(String, Octopus.Client.TResource, Object)
    Task Post(String)
    Task Put(String, Octopus.Client.TResource)
    Task Put(String)
    Task PutContent(String, Stream)
    Uri QualifyUri(String, Object)
    Task<RootResource> RefreshRootDocument()
    Task<TResource> Update(String, Octopus.Client.TResource, Object)
  }
  interface IOctopusAsyncRepository
  {
    Octopus.Client.Repositories.Async.IAccountRepository Accounts { get; }
    Octopus.Client.Repositories.Async.IActionTemplateRepository ActionTemplates { get; }
    Octopus.Client.Repositories.Async.IArtifactRepository Artifacts { get; }
    Octopus.Client.Repositories.Async.IBackupRepository Backups { get; }
    Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository BuiltInPackageRepository { get; }
    Octopus.Client.Repositories.Async.ICertificateConfigurationRepository CertificateConfiguration { get; }
    Octopus.Client.Repositories.Async.ICertificateRepository Certificates { get; }
    Octopus.Client.Repositories.Async.IChannelRepository Channels { get; }
    Octopus.Client.IOctopusAsyncClient Client { get; }
    Octopus.Client.Repositories.Async.ICommunityActionTemplateRepository CommunityActionTemplates { get; }
    Octopus.Client.Repositories.Async.IConfigurationRepository Configuration { get; }
    Octopus.Client.Repositories.Async.IDashboardConfigurationRepository DashboardConfigurations { get; }
    Octopus.Client.Repositories.Async.IDashboardRepository Dashboards { get; }
    Octopus.Client.Repositories.Async.IDefectsRepository Defects { get; }
    Octopus.Client.Repositories.Async.IDeploymentProcessRepository DeploymentProcesses { get; }
    Octopus.Client.Repositories.Async.IDeploymentRepository Deployments { get; }
    Octopus.Client.Repositories.Async.IEnvironmentRepository Environments { get; }
    Octopus.Client.Repositories.Async.IEventRepository Events { get; }
    Octopus.Client.Repositories.Async.IFeaturesConfigurationRepository FeaturesConfiguration { get; }
    Octopus.Client.Repositories.Async.IFeedRepository Feeds { get; }
    Octopus.Client.Repositories.Async.IInterruptionRepository Interruptions { get; }
    Octopus.Client.Repositories.Async.ILibraryVariableSetRepository LibraryVariableSets { get; }
    Octopus.Client.Repositories.Async.ILifecyclesRepository Lifecycles { get; }
    Octopus.Client.Repositories.Async.IMachinePolicyRepository MachinePolicies { get; }
    Octopus.Client.Repositories.Async.IMachineRoleRepository MachineRoles { get; }
    Octopus.Client.Repositories.Async.IMachineRepository Machines { get; }
    Octopus.Client.Repositories.Async.IMigrationRepository Migrations { get; }
    Octopus.Client.Repositories.Async.IOctopusServerNodeRepository OctopusServerNodes { get; }
    Octopus.Client.Repositories.Async.IProjectGroupRepository ProjectGroups { get; }
    Octopus.Client.Repositories.Async.IProjectRepository Projects { get; }
    Octopus.Client.Repositories.Async.IProjectTriggerRepository ProjectTriggers { get; }
    Octopus.Client.Repositories.Async.IProxyRepository Proxies { get; }
    Octopus.Client.Repositories.Async.IReleaseRepository Releases { get; }
    Octopus.Client.Repositories.Async.IRetentionPolicyRepository RetentionPolicies { get; }
    Octopus.Client.Repositories.Async.ISchedulerRepository Schedulers { get; }
    Octopus.Client.Repositories.Async.IServerStatusRepository ServerStatus { get; }
    Octopus.Client.Repositories.Async.ISubscriptionRepository Subscriptions { get; }
    Octopus.Client.Repositories.Async.ITagSetRepository TagSets { get; }
    Octopus.Client.Repositories.Async.ITaskRepository Tasks { get; }
    Octopus.Client.Repositories.Async.ITeamsRepository Teams { get; }
    Octopus.Client.Repositories.Async.ITeamsV2Repository TeamsV2 { get; }
    Octopus.Client.Repositories.Async.ITenantRepository Tenants { get; }
    Octopus.Client.Repositories.Async.IUserRolesRepository UserRoles { get; }
    Octopus.Client.Repositories.Async.IUserRepository Users { get; }
    Octopus.Client.Repositories.Async.IVariableSetRepository VariableSets { get; }
  }
  interface IOctopusClient
    IDisposable
  {
    event Action<OctopusResponse> ReceivedOctopusResponse
    event Action<OctopusRequest> SendingOctopusRequest
    Octopus.Client.Model.RootResource RootDocument { get; }
    Octopus.Client.TResource Create(String, Octopus.Client.TResource, Object)
    void Delete(String, Object)
    Octopus.Client.TResource Get(String, Object)
    Stream GetContent(String, Object)
    Octopus.Client.Model.ResourceCollection<TResource> List(String, Object)
    IReadOnlyList<TResource> ListAll(String, Object)
    void Paginate(String, Func<ResourceCollection<TResource>, Boolean>)
    void Paginate(String, Object, Func<ResourceCollection<TResource>, Boolean>)
    void Post(String, Octopus.Client.TResource, Object)
    Octopus.Client.TResponse Post(String, Octopus.Client.TResource, Object)
    void Post(String)
    void Put(String, Octopus.Client.TResource)
    void Put(String)
    void PutContent(String, Stream)
    Uri QualifyUri(String, Object)
    Octopus.Client.Model.RootResource RefreshRootDocument()
    Octopus.Client.TResource Update(String, Octopus.Client.TResource, Object)
  }
  interface IOctopusClientFactory
  {
    Task<IOctopusAsyncClient> CreateAsyncClient(Octopus.Client.OctopusServerEndpoint, Octopus.Client.OctopusClientOptions)
    Octopus.Client.IOctopusClient CreateClient(Octopus.Client.OctopusServerEndpoint)
  }
  interface IOctopusRepository
  {
    Octopus.Client.Repositories.IAccountRepository Accounts { get; }
    Octopus.Client.Repositories.IActionTemplateRepository ActionTemplates { get; }
    Octopus.Client.Repositories.IArtifactRepository Artifacts { get; }
    Octopus.Client.Repositories.IBackupRepository Backups { get; }
    Octopus.Client.Repositories.IBuiltInPackageRepositoryRepository BuiltInPackageRepository { get; }
    Octopus.Client.Repositories.ICertificateConfigurationRepository CertificateConfiguration { get; }
    Octopus.Client.Repositories.ICertificateRepository Certificates { get; }
    Octopus.Client.Repositories.IChannelRepository Channels { get; }
    Octopus.Client.IOctopusClient Client { get; }
    Octopus.Client.Repositories.ICommunityActionTemplateRepository CommunityActionTemplates { get; }
    Octopus.Client.Repositories.IConfigurationRepository Configuration { get; }
    Octopus.Client.Repositories.IDashboardConfigurationRepository DashboardConfigurations { get; }
    Octopus.Client.Repositories.IDashboardRepository Dashboards { get; }
    Octopus.Client.Repositories.IDefectsRepository Defects { get; }
    Octopus.Client.Repositories.IDeploymentProcessRepository DeploymentProcesses { get; }
    Octopus.Client.Repositories.IDeploymentRepository Deployments { get; }
    Octopus.Client.Repositories.IEnvironmentRepository Environments { get; }
    Octopus.Client.Repositories.IEventRepository Events { get; }
    Octopus.Client.Repositories.IFeaturesConfigurationRepository FeaturesConfiguration { get; }
    Octopus.Client.Repositories.IFeedRepository Feeds { get; }
    Octopus.Client.Repositories.IInterruptionRepository Interruptions { get; }
    Octopus.Client.Repositories.ILibraryVariableSetRepository LibraryVariableSets { get; }
    Octopus.Client.Repositories.ILifecyclesRepository Lifecycles { get; }
    Octopus.Client.Repositories.IMachinePolicyRepository MachinePolicies { get; }
    Octopus.Client.Repositories.IMachineRoleRepository MachineRoles { get; }
    Octopus.Client.Repositories.IMachineRepository Machines { get; }
    Octopus.Client.Repositories.IMigrationRepository Migrations { get; }
    Octopus.Client.Repositories.IOctopusServerNodeRepository OctopusServerNodes { get; }
    Octopus.Client.Repositories.IProjectGroupRepository ProjectGroups { get; }
    Octopus.Client.Repositories.IProjectRepository Projects { get; }
    Octopus.Client.Repositories.IProjectTriggerRepository ProjectTriggers { get; }
    Octopus.Client.Repositories.IProxyRepository Proxies { get; }
    Octopus.Client.Repositories.IReleaseRepository Releases { get; }
    Octopus.Client.Repositories.IRetentionPolicyRepository RetentionPolicies { get; }
    Octopus.Client.Repositories.ISchedulerRepository Schedulers { get; }
    Octopus.Client.Repositories.IServerStatusRepository ServerStatus { get; }
    Octopus.Client.Repositories.ISubscriptionRepository Subscriptions { get; }
    Octopus.Client.Repositories.ITagSetRepository TagSets { get; }
    Octopus.Client.Repositories.ITaskRepository Tasks { get; }
    Octopus.Client.Repositories.ITeamsRepository Teams { get; }
    Octopus.Client.Repositories.ITeamsV2Repository TeamsV2 { get; }
    Octopus.Client.Repositories.ITenantRepository Tenants { get; }
    Octopus.Client.Repositories.IUserRolesRepository UserRoles { get; }
    Octopus.Client.Repositories.IUserRepository Users { get; }
    Octopus.Client.Repositories.IVariableSetRepository VariableSets { get; }
  }
  class OctopusAsyncClient
    Octopus.Client.IOctopusAsyncClient
    IDisposable
  {
    event Action<HttpResponseMessage> AfterReceivedHttpResponse
    event Action<HttpRequestMessage> BeforeSendingHttpRequest
    event Action<OctopusResponse> ReceivedOctopusResponse
    event Action<OctopusRequest> SendingOctopusRequest
    Octopus.Client.IOctopusAsyncRepository Repository { get; }
    Octopus.Client.Model.RootResource RootDocument { get; }
    static Task<IOctopusAsyncClient> Create(Octopus.Client.OctopusServerEndpoint, Octopus.Client.OctopusClientOptions)
    Task<TResource> Create(String, Octopus.Client.TResource, Object)
    Task Delete(String, Object)
    void Dispose()
    Task<TResource> Get(String, Object)
    Task<Stream> GetContent(String, Object)
    Task<ResourceCollection<TResource>> List(String, Object)
    Task<IReadOnlyList<TResource>> ListAll(String, Object)
    Task Paginate(String, Object, Func<ResourceCollection<TResource>, Boolean>)
    Task Paginate(String, Func<ResourceCollection<TResource>, Boolean>)
    Task Post(String, Octopus.Client.TResource, Object)
    Task<TResponse> Post(String, Octopus.Client.TResource, Object)
    Task Post(String)
    Task Put(String, Octopus.Client.TResource)
    Task Put(String)
    Task PutContent(String, Stream)
    Uri QualifyUri(String, Object)
    Task<RootResource> RefreshRootDocument()
    Task<TResource> Update(String, Octopus.Client.TResource, Object)
  }
  class OctopusAsyncRepository
    Octopus.Client.IOctopusAsyncRepository
  {
    .ctor(Octopus.Client.IOctopusAsyncClient)
    Octopus.Client.Repositories.Async.IAccountRepository Accounts { get; }
    Octopus.Client.Repositories.Async.IActionTemplateRepository ActionTemplates { get; }
    Octopus.Client.Repositories.Async.IArtifactRepository Artifacts { get; }
    Octopus.Client.Repositories.Async.IBackupRepository Backups { get; }
    Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository BuiltInPackageRepository { get; }
    Octopus.Client.Repositories.Async.ICertificateConfigurationRepository CertificateConfiguration { get; }
    Octopus.Client.Repositories.Async.ICertificateRepository Certificates { get; }
    Octopus.Client.Repositories.Async.IChannelRepository Channels { get; }
    Octopus.Client.IOctopusAsyncClient Client { get; }
    Octopus.Client.Repositories.Async.ICommunityActionTemplateRepository CommunityActionTemplates { get; }
    Octopus.Client.Repositories.Async.IConfigurationRepository Configuration { get; }
    Octopus.Client.Repositories.Async.IDashboardConfigurationRepository DashboardConfigurations { get; }
    Octopus.Client.Repositories.Async.IDashboardRepository Dashboards { get; }
    Octopus.Client.Repositories.Async.IDefectsRepository Defects { get; }
    Octopus.Client.Repositories.Async.IDeploymentProcessRepository DeploymentProcesses { get; }
    Octopus.Client.Repositories.Async.IDeploymentRepository Deployments { get; }
    Octopus.Client.Repositories.Async.IEnvironmentRepository Environments { get; }
    Octopus.Client.Repositories.Async.IEventRepository Events { get; }
    Octopus.Client.Repositories.Async.IFeaturesConfigurationRepository FeaturesConfiguration { get; }
    Octopus.Client.Repositories.Async.IFeedRepository Feeds { get; }
    Octopus.Client.Repositories.Async.IInterruptionRepository Interruptions { get; }
    Octopus.Client.Repositories.Async.ILibraryVariableSetRepository LibraryVariableSets { get; }
    Octopus.Client.Repositories.Async.ILifecyclesRepository Lifecycles { get; }
    Octopus.Client.Repositories.Async.IMachinePolicyRepository MachinePolicies { get; }
    Octopus.Client.Repositories.Async.IMachineRoleRepository MachineRoles { get; }
    Octopus.Client.Repositories.Async.IMachineRepository Machines { get; }
    Octopus.Client.Repositories.Async.IMigrationRepository Migrations { get; }
    Octopus.Client.Repositories.Async.IOctopusServerNodeRepository OctopusServerNodes { get; }
    Octopus.Client.Repositories.Async.IProjectGroupRepository ProjectGroups { get; }
    Octopus.Client.Repositories.Async.IProjectRepository Projects { get; }
    Octopus.Client.Repositories.Async.IProjectTriggerRepository ProjectTriggers { get; }
    Octopus.Client.Repositories.Async.IProxyRepository Proxies { get; }
    Octopus.Client.Repositories.Async.IReleaseRepository Releases { get; }
    Octopus.Client.Repositories.Async.IRetentionPolicyRepository RetentionPolicies { get; }
    Octopus.Client.Repositories.Async.ISchedulerRepository Schedulers { get; }
    Octopus.Client.Repositories.Async.IServerStatusRepository ServerStatus { get; }
    Octopus.Client.Repositories.Async.ISubscriptionRepository Subscriptions { get; }
    Octopus.Client.Repositories.Async.ITagSetRepository TagSets { get; }
    Octopus.Client.Repositories.Async.ITaskRepository Tasks { get; }
    Octopus.Client.Repositories.Async.ITeamsRepository Teams { get; }
    Octopus.Client.Repositories.Async.ITeamsV2Repository TeamsV2 { get; }
    Octopus.Client.Repositories.Async.ITenantRepository Tenants { get; }
    Octopus.Client.Repositories.Async.IUserRolesRepository UserRoles { get; }
    Octopus.Client.Repositories.Async.IUserRepository Users { get; }
    Octopus.Client.Repositories.Async.IVariableSetRepository VariableSets { get; }
  }
  class OctopusClient
    Octopus.Client.IHttpOctopusClient
    Octopus.Client.IOctopusClient
    IDisposable
  {
    event Action<WebResponse> AfterReceivingHttpResponse
    event Action<WebRequest> BeforeSendingHttpRequest
    event Action<OctopusResponse> ReceivedOctopusResponse
    event Action<OctopusRequest> SendingOctopusRequest
    .ctor(Octopus.Client.OctopusServerEndpoint)
    Octopus.Client.Model.RootResource RootDocument { get; }
    Octopus.Client.TResource Create(String, Octopus.Client.TResource, Object)
    void Delete(String, Object)
    void Dispose()
    Octopus.Client.TResource Get(String, Object)
    Stream GetContent(String, Object)
    void Initialize()
    Octopus.Client.Model.ResourceCollection<TResource> List(String, Object)
    IReadOnlyList<TResource> ListAll(String, Object)
    void Paginate(String, Object, Func<ResourceCollection<TResource>, Boolean>)
    void Paginate(String, Func<ResourceCollection<TResource>, Boolean>)
    void Post(String, Octopus.Client.TResource, Object)
    Octopus.Client.TResponse Post(String, Octopus.Client.TResource, Object)
    void Post(String)
    void Put(String, Octopus.Client.TResource)
    void Put(String)
    void PutContent(String, Stream)
    Uri QualifyUri(String, Object)
    Octopus.Client.Model.RootResource RefreshRootDocument()
    Octopus.Client.TResource Update(String, Octopus.Client.TResource, Object)
  }
  class OctopusClientFactory
    Octopus.Client.IOctopusClientFactory
  {
    .ctor()
    Task<IOctopusAsyncClient> CreateAsyncClient(Octopus.Client.OctopusServerEndpoint, Octopus.Client.OctopusClientOptions)
    Octopus.Client.IOctopusClient CreateClient(Octopus.Client.OctopusServerEndpoint)
  }
  class OctopusClientOptions
  {
    .ctor()
    String Proxy { get; set; }
    String ProxyPassword { get; set; }
    String ProxyUsername { get; set; }
    TimeSpan Timeout { get; set; }
  }
  class OctopusRepository
    Octopus.Client.IOctopusRepository
  {
    .ctor(Octopus.Client.OctopusServerEndpoint)
    .ctor(Octopus.Client.IOctopusClient)
    Octopus.Client.Repositories.IAccountRepository Accounts { get; }
    Octopus.Client.Repositories.IActionTemplateRepository ActionTemplates { get; }
    Octopus.Client.Repositories.IArtifactRepository Artifacts { get; }
    Octopus.Client.Repositories.IBackupRepository Backups { get; }
    Octopus.Client.Repositories.IBuiltInPackageRepositoryRepository BuiltInPackageRepository { get; }
    Octopus.Client.Repositories.ICertificateConfigurationRepository CertificateConfiguration { get; }
    Octopus.Client.Repositories.ICertificateRepository Certificates { get; }
    Octopus.Client.Repositories.IChannelRepository Channels { get; }
    Octopus.Client.IOctopusClient Client { get; }
    Octopus.Client.Repositories.ICommunityActionTemplateRepository CommunityActionTemplates { get; }
    Octopus.Client.Repositories.IConfigurationRepository Configuration { get; }
    Octopus.Client.Repositories.IDashboardConfigurationRepository DashboardConfigurations { get; }
    Octopus.Client.Repositories.IDashboardRepository Dashboards { get; }
    Octopus.Client.Repositories.IDefectsRepository Defects { get; }
    Octopus.Client.Repositories.IDeploymentProcessRepository DeploymentProcesses { get; }
    Octopus.Client.Repositories.IDeploymentRepository Deployments { get; }
    Octopus.Client.Repositories.IEnvironmentRepository Environments { get; }
    Octopus.Client.Repositories.IEventRepository Events { get; }
    Octopus.Client.Repositories.IFeaturesConfigurationRepository FeaturesConfiguration { get; }
    Octopus.Client.Repositories.IFeedRepository Feeds { get; }
    Octopus.Client.Repositories.IInterruptionRepository Interruptions { get; }
    Octopus.Client.Repositories.ILibraryVariableSetRepository LibraryVariableSets { get; }
    Octopus.Client.Repositories.ILifecyclesRepository Lifecycles { get; }
    Octopus.Client.Repositories.IMachinePolicyRepository MachinePolicies { get; }
    Octopus.Client.Repositories.IMachineRoleRepository MachineRoles { get; }
    Octopus.Client.Repositories.IMachineRepository Machines { get; }
    Octopus.Client.Repositories.IMigrationRepository Migrations { get; }
    Octopus.Client.Repositories.IOctopusServerNodeRepository OctopusServerNodes { get; }
    Octopus.Client.Repositories.IProjectGroupRepository ProjectGroups { get; }
    Octopus.Client.Repositories.IProjectRepository Projects { get; }
    Octopus.Client.Repositories.IProjectTriggerRepository ProjectTriggers { get; }
    Octopus.Client.Repositories.IProxyRepository Proxies { get; }
    Octopus.Client.Repositories.IReleaseRepository Releases { get; }
    Octopus.Client.Repositories.IRetentionPolicyRepository RetentionPolicies { get; }
    Octopus.Client.Repositories.ISchedulerRepository Schedulers { get; }
    Octopus.Client.Repositories.IServerStatusRepository ServerStatus { get; }
    Octopus.Client.Repositories.ISubscriptionRepository Subscriptions { get; }
    Octopus.Client.Repositories.ITagSetRepository TagSets { get; }
    Octopus.Client.Repositories.ITaskRepository Tasks { get; }
    Octopus.Client.Repositories.ITeamsRepository Teams { get; }
    Octopus.Client.Repositories.ITeamsV2Repository TeamsV2 { get; }
    Octopus.Client.Repositories.ITenantRepository Tenants { get; }
    Octopus.Client.Repositories.IUserRolesRepository UserRoles { get; }
    Octopus.Client.Repositories.IUserRepository Users { get; }
    Octopus.Client.Repositories.IVariableSetRepository VariableSets { get; }
  }
  abstract class OctopusRepositoryExtensions
  {
    static Octopus.Client.IOctopusAsyncRepository CreateRepository(Octopus.Client.IOctopusAsyncClient)
  }
  class OctopusRequest
  {
    .ctor(String, Uri, Object)
    String Method { get; }
    Object RequestResource { get; }
    Uri Uri { get; }
  }
  class OctopusResponse
  {
    .ctor(Octopus.Client.OctopusRequest, HttpStatusCode, String, Object)
    String Location { get; }
    Octopus.Client.OctopusRequest Request { get; }
    Object ResponseResource { get; }
    HttpStatusCode StatusCode { get; }
  }
  class OctopusResponse`1
    Octopus.Client.OctopusResponse
  {
    .ctor(Octopus.Client.OctopusRequest, HttpStatusCode, String, Octopus.Client.TResponseResource)
    Octopus.Client.TResponseResource ResponseResource { get; }
  }
  class OctopusServerEndpoint
  {
    .ctor(String)
    .ctor(String, String)
    .ctor(String, String, ICredentials)
    .ctor(Octopus.Client.ILinkResolver, String, ICredentials)
    String ApiKey { get; }
    ICredentials Credentials { get; }
    Octopus.Client.ILinkResolver OctopusServer { get; }
    IWebProxy Proxy { get; set; }
    Octopus.Client.OctopusServerEndpoint AsUser(String)
  }
  class UrlTemplate
  {
    .ctor(String)
    IEnumerable<String> GetParameterNames()
    String Resolve()
    static String Resolve(String, Object)
    static String Resolve(String, IDictionary<String, Object>)
    void SetParameter(String, Object)
    void SetParameter(String, String)
    void SetParameter(String, IEnumerable<String>)
    void SetParameter(String, IDictionary<String, String>)
  }
}
Octopus.Client.Editors
{
  class ChannelEditor
    Octopus.Client.Editors.IResourceEditor<ChannelResource, ChannelEditor>
    Octopus.Client.Editors.IResourceBuilder
  {
    .ctor(Octopus.Client.Repositories.IChannelRepository)
    Octopus.Client.Model.ChannelResource Instance { get; }
    Octopus.Client.Editors.ChannelEditor AddCommonRuleForAllActions(String, String, Octopus.Client.Model.DeploymentProcessResource)
    Octopus.Client.Editors.ChannelEditor AddOrUpdateTenantTags(Octopus.Client.Model.TagResource[])
    Octopus.Client.Editors.ChannelEditor AddRule(Octopus.Client.Model.ChannelVersionRuleResource)
    Octopus.Client.Editors.ChannelEditor AddRule(String, String, Octopus.Client.Model.DeploymentActionResource[])
    Octopus.Client.Editors.ChannelEditor ClearRules()
    Octopus.Client.Editors.ChannelEditor ClearTenantTags()
    Octopus.Client.Editors.ChannelEditor CreateOrModify(Octopus.Client.Model.ProjectResource, String)
    Octopus.Client.Editors.ChannelEditor CreateOrModify(Octopus.Client.Model.ProjectResource, String, String)
    Octopus.Client.Editors.ChannelEditor Customize(Action<ChannelResource>)
    Octopus.Client.Editors.ChannelEditor Save()
    Octopus.Client.Editors.ChannelEditor SetAsDefaultChannel()
    Octopus.Client.Editors.ChannelEditor UsingLifecycle(Octopus.Client.Model.LifecycleResource)
  }
  class DeploymentProcessEditor
    Octopus.Client.Editors.IResourceEditor<DeploymentProcessResource, DeploymentProcessEditor>
    Octopus.Client.Editors.IResourceBuilder
  {
    .ctor(Octopus.Client.Repositories.IDeploymentProcessRepository)
    Octopus.Client.Model.DeploymentProcessResource Instance { get; }
    Octopus.Client.Model.DeploymentStepResource AddOrUpdateStep(String)
    Octopus.Client.Editors.DeploymentProcessEditor ClearSteps()
    Octopus.Client.Editors.DeploymentProcessEditor Customize(Action<DeploymentProcessResource>)
    Octopus.Client.Model.DeploymentStepResource FindStep(String)
    Octopus.Client.Editors.DeploymentProcessEditor Load(String)
    Octopus.Client.Editors.DeploymentProcessEditor RemoveStep(String)
    Octopus.Client.Editors.DeploymentProcessEditor Save()
  }
  class EnvironmentEditor
    Octopus.Client.Editors.IResourceEditor<EnvironmentResource, EnvironmentEditor>
    Octopus.Client.Editors.IResourceBuilder
  {
    .ctor(Octopus.Client.Repositories.IEnvironmentRepository)
    Octopus.Client.Model.EnvironmentResource Instance { get; }
    Octopus.Client.Editors.EnvironmentEditor CreateOrModify(String)
    Octopus.Client.Editors.EnvironmentEditor CreateOrModify(String, String)
    Octopus.Client.Editors.EnvironmentEditor Customize(Action<EnvironmentResource>)
    Octopus.Client.Editors.EnvironmentEditor Save()
  }
  interface IResourceBuilder
  {
  }
  interface IResourceEditor`2
    Octopus.Client.Editors.IResourceBuilder
  {
    Octopus.Client.Editors.TResource Instance { get; }
    Octopus.Client.Editors.TResourceBuilder Customize(Action<TResource>)
    Octopus.Client.Editors.TResourceBuilder Save()
  }
  class LibraryVariableSetEditor
    Octopus.Client.Editors.IResourceEditor<LibraryVariableSetResource, LibraryVariableSetEditor>
    Octopus.Client.Editors.IResourceBuilder
  {
    .ctor(Octopus.Client.Repositories.ILibraryVariableSetRepository, Octopus.Client.Repositories.IVariableSetRepository)
    Octopus.Client.Model.LibraryVariableSetResource Instance { get; }
    Octopus.Client.Editors.VariableSetEditor Variables { get; }
    Octopus.Client.Model.IVariableTemplateContainerEditor<LibraryVariableSetResource> VariableTemplates { get; }
    Octopus.Client.Editors.LibraryVariableSetEditor CreateOrModify(String)
    Octopus.Client.Editors.LibraryVariableSetEditor CreateOrModify(String, String)
    Octopus.Client.Editors.LibraryVariableSetEditor Customize(Action<LibraryVariableSetResource>)
    Octopus.Client.Editors.LibraryVariableSetEditor Save()
  }
  class LifecycleEditor
    Octopus.Client.Editors.IResourceEditor<LifecycleResource, LifecycleEditor>
    Octopus.Client.Editors.IResourceBuilder
  {
    .ctor(Octopus.Client.Repositories.ILifecyclesRepository)
    Octopus.Client.Model.LifecycleResource Instance { get; }
    Octopus.Client.Model.PhaseResource AddOrUpdatePhase(String)
    Octopus.Client.Editors.LifecycleEditor AsSimplePromotionLifecycle(IEnumerable<EnvironmentResource>)
    Octopus.Client.Editors.LifecycleEditor Clear()
    Octopus.Client.Editors.LifecycleEditor CreateOrModify(String)
    Octopus.Client.Editors.LifecycleEditor CreateOrModify(String, String)
    Octopus.Client.Editors.LifecycleEditor Customize(Action<LifecycleResource>)
    Octopus.Client.Editors.LifecycleEditor Save()
  }
  class MachineEditor
    Octopus.Client.Editors.IResourceEditor<MachineResource, MachineEditor>
    Octopus.Client.Editors.IResourceBuilder
  {
    .ctor(Octopus.Client.Repositories.IMachineRepository)
    Octopus.Client.Model.MachineResource Instance { get; }
    Octopus.Client.Editors.MachineEditor CreateOrModify(String, Octopus.Client.Model.Endpoints.EndpointResource, Octopus.Client.Model.EnvironmentResource[], String[])
    Octopus.Client.Editors.MachineEditor CreateOrModify(String, Octopus.Client.Model.Endpoints.EndpointResource, Octopus.Client.Model.EnvironmentResource[], String[], Octopus.Client.Model.TenantResource[], Octopus.Client.Model.TagResource[], Nullable<TenantedDeploymentMode>)
    Octopus.Client.Editors.MachineEditor Customize(Action<MachineResource>)
    Octopus.Client.Editors.MachineEditor Save()
  }
  class ProjectChannelsEditor
  {
    .ctor(Octopus.Client.Repositories.IChannelRepository, Octopus.Client.Model.ProjectResource)
    Octopus.Client.Editors.ChannelEditor CreateOrModify(String)
    Octopus.Client.Editors.ChannelEditor CreateOrModify(String, String)
    Octopus.Client.Editors.ProjectChannelsEditor Delete(String)
    Octopus.Client.Editors.ProjectChannelsEditor SaveAll()
  }
  class ProjectEditor
    Octopus.Client.Editors.IResourceEditor<ProjectResource, ProjectEditor>
    Octopus.Client.Editors.IResourceBuilder
  {
    .ctor(Octopus.Client.Repositories.IProjectRepository, Octopus.Client.Repositories.IChannelRepository, Octopus.Client.Repositories.IDeploymentProcessRepository, Octopus.Client.Repositories.IProjectTriggerRepository, Octopus.Client.Repositories.IVariableSetRepository)
    Octopus.Client.Editors.ProjectChannelsEditor Channels { get; }
    Octopus.Client.Editors.DeploymentProcessEditor DeploymentProcess { get; }
    Octopus.Client.Model.ProjectResource Instance { get; }
    Octopus.Client.Editors.ProjectTriggersEditor Triggers { get; }
    Octopus.Client.Editors.VariableSetEditor Variables { get; }
    Octopus.Client.Model.IVariableTemplateContainerEditor<ProjectResource> VariableTemplates { get; }
    Octopus.Client.Editors.ProjectEditor CreateOrModify(String, Octopus.Client.Model.ProjectGroupResource, Octopus.Client.Model.LifecycleResource)
    Octopus.Client.Editors.ProjectEditor CreateOrModify(String, Octopus.Client.Model.ProjectGroupResource, Octopus.Client.Model.LifecycleResource, String)
    Octopus.Client.Editors.ProjectEditor Customize(Action<ProjectResource>)
    Octopus.Client.Editors.ProjectEditor IncludingLibraryVariableSets(Octopus.Client.Model.LibraryVariableSetResource[])
    Octopus.Client.Editors.ProjectEditor Save()
    Octopus.Client.Editors.ProjectEditor SetLogo(String)
  }
  class ProjectGroupEditor
    Octopus.Client.Editors.IResourceEditor<ProjectGroupResource, ProjectGroupEditor>
    Octopus.Client.Editors.IResourceBuilder
  {
    .ctor(Octopus.Client.Repositories.IProjectGroupRepository)
    Octopus.Client.Model.ProjectGroupResource Instance { get; }
    Octopus.Client.Editors.ProjectGroupEditor CreateOrModify(String)
    Octopus.Client.Editors.ProjectGroupEditor CreateOrModify(String, String)
    Octopus.Client.Editors.ProjectGroupEditor Customize(Action<ProjectGroupResource>)
    Octopus.Client.Editors.ProjectGroupEditor Save()
  }
  class ProjectTriggerEditor
    Octopus.Client.Editors.IResourceEditor<ProjectTriggerResource, ProjectTriggerEditor>
    Octopus.Client.Editors.IResourceBuilder
  {
    .ctor(Octopus.Client.Repositories.IProjectTriggerRepository)
    Octopus.Client.Model.ProjectTriggerResource Instance { get; }
    Octopus.Client.Editors.ProjectTriggerEditor CreateOrModify(Octopus.Client.Model.ProjectResource, String, Octopus.Client.Model.Triggers.TriggerFilterResource, Octopus.Client.Model.Triggers.TriggerActionResource)
    Octopus.Client.Editors.ProjectTriggerEditor Customize(Action<ProjectTriggerResource>)
    Octopus.Client.Editors.ProjectTriggerEditor Save()
  }
  class ProjectTriggersEditor
  {
    .ctor(Octopus.Client.Repositories.IProjectTriggerRepository, Octopus.Client.Model.ProjectResource)
    Octopus.Client.Editors.ProjectTriggerEditor CreateOrModify(String, Octopus.Client.Model.Triggers.TriggerFilterResource, Octopus.Client.Model.Triggers.TriggerActionResource)
    Octopus.Client.Editors.ProjectTriggersEditor Delete(String)
    Octopus.Client.Editors.ProjectTriggersEditor SaveAll()
  }
  class SubscriptionEditor
    Octopus.Client.Editors.IResourceEditor<SubscriptionResource, SubscriptionEditor>
    Octopus.Client.Editors.IResourceBuilder
  {
    .ctor(Octopus.Client.Repositories.ISubscriptionRepository)
    Octopus.Client.Model.SubscriptionResource Instance { get; }
    Octopus.Client.Editors.SubscriptionEditor CreateOrModify(String, Octopus.Client.Model.EventNotificationSubscription, Boolean)
    Octopus.Client.Editors.SubscriptionEditor Customize(Action<SubscriptionResource>)
    Octopus.Client.Editors.SubscriptionEditor Save()
  }
  class TagSetEditor
    Octopus.Client.Editors.IResourceEditor<TagSetResource, TagSetEditor>
    Octopus.Client.Editors.IResourceBuilder
  {
    .ctor(Octopus.Client.Repositories.ITagSetRepository)
    Octopus.Client.Model.TagSetResource Instance { get; }
    Octopus.Client.Editors.TagSetEditor AddOrUpdateTag(String, String, String)
    Octopus.Client.Editors.TagSetEditor ClearTags()
    Octopus.Client.Editors.TagSetEditor CreateOrModify(String)
    Octopus.Client.Editors.TagSetEditor CreateOrModify(String, String)
    Octopus.Client.Editors.TagSetEditor Customize(Action<TagSetResource>)
    Octopus.Client.Editors.TagSetEditor RemoveTag(String)
    Octopus.Client.Editors.TagSetEditor Save()
  }
  class TenantEditor
    Octopus.Client.Editors.IResourceEditor<TenantResource, TenantEditor>
    Octopus.Client.Editors.IResourceBuilder
  {
    .ctor(Octopus.Client.Repositories.ITenantRepository)
    Octopus.Client.Model.TenantResource Instance { get; }
    Octopus.Client.Editors.TenantVariablesEditor Variables { get; }
    Octopus.Client.Editors.TenantEditor ClearProjects()
    Octopus.Client.Editors.TenantEditor ClearTags()
    Octopus.Client.Editors.TenantEditor ConnectToProjectAndEnvironments(Octopus.Client.Model.ProjectResource, Octopus.Client.Model.EnvironmentResource[])
    Octopus.Client.Editors.TenantEditor CreateOrModify(String)
    Octopus.Client.Editors.TenantEditor Customize(Action<TenantResource>)
    Octopus.Client.Editors.TenantEditor Save()
    Octopus.Client.Editors.TenantEditor SetLogo(String)
    Octopus.Client.Editors.TenantEditor WithTag(Octopus.Client.Model.TagResource)
  }
  class TenantVariablesEditor
    Octopus.Client.Editors.IResourceEditor<TenantVariableResource, TenantVariablesEditor>
    Octopus.Client.Editors.IResourceBuilder
  {
    .ctor(Octopus.Client.Repositories.ITenantRepository, Octopus.Client.Model.TenantResource)
    Octopus.Client.Model.TenantVariableResource Instance { get; }
    Octopus.Client.Editors.TenantVariablesEditor Customize(Action<TenantVariableResource>)
    Octopus.Client.Editors.TenantVariablesEditor Load()
    Octopus.Client.Editors.TenantVariablesEditor Save()
  }
  class VariableSetEditor
    Octopus.Client.Editors.IResourceEditor<VariableSetResource, VariableSetEditor>
    Octopus.Client.Editors.IResourceBuilder
  {
    .ctor(Octopus.Client.Repositories.IVariableSetRepository)
    Octopus.Client.Model.VariableSetResource Instance { get; }
    Octopus.Client.Editors.VariableSetEditor AddOrUpdateVariableValue(String, String, Octopus.Client.Model.ScopeSpecification, Boolean)
    Octopus.Client.Editors.VariableSetEditor AddOrUpdateVariableValue(String, String, Octopus.Client.Model.ScopeSpecification, Boolean, String)
    Octopus.Client.Editors.VariableSetEditor AddOrUpdateVariableValue(String, String, Octopus.Client.Model.ScopeSpecification)
    Octopus.Client.Editors.VariableSetEditor AddOrUpdateVariableValue(String, String)
    Octopus.Client.Editors.VariableSetEditor AddOrUpdateVariableValue(String, String, String)
    Octopus.Client.Editors.VariableSetEditor Customize(Action<VariableSetResource>)
    Octopus.Client.Editors.VariableSetEditor Load(String)
    Octopus.Client.Editors.VariableSetEditor Save()
  }
  class VariableTemplateContainerEditor`1
  {
    .ctor(Octopus.Client.Model.IVariableTemplateContainerEditor<TContainer>)
    Octopus.Client.Editors.VariableTemplateContainerEditor<TContainer> AddOrUpdateMultiLineTextTemplate(String, String)
    Octopus.Client.Editors.VariableTemplateContainerEditor<TContainer> AddOrUpdateMultiLineTextTemplate(String, String, String, String)
    Octopus.Client.Editors.VariableTemplateContainerEditor<TContainer> AddOrUpdateSelectTemplate(String, String, IDictionary<String, String>)
    Octopus.Client.Editors.VariableTemplateContainerEditor<TContainer> AddOrUpdateSelectTemplate(String, String, IDictionary<String, String>, String, String)
    Octopus.Client.Editors.VariableTemplateContainerEditor<TContainer> AddOrUpdateSensitiveTemplate(String, String)
    Octopus.Client.Editors.VariableTemplateContainerEditor<TContainer> AddOrUpdateSensitiveTemplate(String, String, String, String)
    Octopus.Client.Editors.VariableTemplateContainerEditor<TContainer> AddOrUpdateSingleLineTextTemplate(String, String)
    Octopus.Client.Editors.VariableTemplateContainerEditor<TContainer> AddOrUpdateSingleLineTextTemplate(String, String, String, String)
    Octopus.Client.Editors.VariableTemplateContainerEditor<TContainer> AddOrUpdateVariableTemplate(String, String, IDictionary<String, String>)
    Octopus.Client.Editors.VariableTemplateContainerEditor<TContainer> AddOrUpdateVariableTemplate(String, String, IDictionary<String, String>, String, String)
  }
}
Octopus.Client.Editors.Async
{
  class ChannelEditor
    Octopus.Client.Editors.Async.IResourceEditor<ChannelResource, ChannelEditor>
    Octopus.Client.Editors.Async.IResourceBuilder
  {
    .ctor(Octopus.Client.Repositories.Async.IChannelRepository)
    Octopus.Client.Model.ChannelResource Instance { get; }
    Octopus.Client.Editors.Async.ChannelEditor AddCommonRuleForAllActions(String, String, Octopus.Client.Model.DeploymentProcessResource)
    Octopus.Client.Editors.Async.ChannelEditor AddOrUpdateTenantTags(Octopus.Client.Model.TagResource[])
    Octopus.Client.Editors.Async.ChannelEditor AddRule(Octopus.Client.Model.ChannelVersionRuleResource)
    Octopus.Client.Editors.Async.ChannelEditor AddRule(String, String, Octopus.Client.Model.DeploymentActionResource[])
    Octopus.Client.Editors.Async.ChannelEditor ClearRules()
    Octopus.Client.Editors.Async.ChannelEditor ClearTenantTags()
    Task<ChannelEditor> CreateOrModify(Octopus.Client.Model.ProjectResource, String)
    Task<ChannelEditor> CreateOrModify(Octopus.Client.Model.ProjectResource, String, String)
    Octopus.Client.Editors.Async.ChannelEditor Customize(Action<ChannelResource>)
    Task<ChannelEditor> Save()
    Octopus.Client.Editors.Async.ChannelEditor SetAsDefaultChannel()
    Octopus.Client.Editors.Async.ChannelEditor UsingLifecycle(Octopus.Client.Model.LifecycleResource)
  }
  class DeploymentProcessEditor
    Octopus.Client.Editors.Async.IResourceEditor<DeploymentProcessResource, DeploymentProcessEditor>
    Octopus.Client.Editors.Async.IResourceBuilder
  {
    .ctor(Octopus.Client.Repositories.Async.IDeploymentProcessRepository)
    Octopus.Client.Model.DeploymentProcessResource Instance { get; }
    Octopus.Client.Model.DeploymentStepResource AddOrUpdateStep(String)
    Octopus.Client.Editors.Async.DeploymentProcessEditor ClearSteps()
    Octopus.Client.Editors.Async.DeploymentProcessEditor Customize(Action<DeploymentProcessResource>)
    Octopus.Client.Model.DeploymentStepResource FindStep(String)
    Task<DeploymentProcessEditor> Load(String)
    Octopus.Client.Editors.Async.DeploymentProcessEditor RemoveStep(String)
    Task<DeploymentProcessEditor> Save()
  }
  class EnvironmentEditor
    Octopus.Client.Editors.Async.IResourceEditor<EnvironmentResource, EnvironmentEditor>
    Octopus.Client.Editors.Async.IResourceBuilder
  {
    .ctor(Octopus.Client.Repositories.Async.IEnvironmentRepository)
    Octopus.Client.Model.EnvironmentResource Instance { get; }
    Task<EnvironmentEditor> CreateOrModify(String)
    Task<EnvironmentEditor> CreateOrModify(String, String)
    Octopus.Client.Editors.Async.EnvironmentEditor Customize(Action<EnvironmentResource>)
    Task<EnvironmentEditor> Save()
  }
  interface IResourceBuilder
  {
  }
  interface IResourceEditor`2
    Octopus.Client.Editors.Async.IResourceBuilder
  {
    Octopus.Client.Editors.Async.TResource Instance { get; }
    Octopus.Client.Editors.Async.TResourceBuilder Customize(Action<TResource>)
    Task<TResourceBuilder> Save()
  }
  class LibraryVariableSetEditor
    Octopus.Client.Editors.Async.IResourceEditor<LibraryVariableSetResource, LibraryVariableSetEditor>
    Octopus.Client.Editors.Async.IResourceBuilder
  {
    .ctor(Octopus.Client.Repositories.Async.ILibraryVariableSetRepository, Octopus.Client.Repositories.Async.IVariableSetRepository)
    Octopus.Client.Model.LibraryVariableSetResource Instance { get; }
    Task<VariableSetEditor> Variables { get; }
    Octopus.Client.Model.IVariableTemplateContainerEditor<LibraryVariableSetResource> VariableTemplates { get; }
    Task<LibraryVariableSetEditor> CreateOrModify(String)
    Task<LibraryVariableSetEditor> CreateOrModify(String, String)
    Octopus.Client.Editors.Async.LibraryVariableSetEditor Customize(Action<LibraryVariableSetResource>)
    Task<LibraryVariableSetEditor> Save()
  }
  class LifecycleEditor
    Octopus.Client.Editors.Async.IResourceEditor<LifecycleResource, LifecycleEditor>
    Octopus.Client.Editors.Async.IResourceBuilder
  {
    .ctor(Octopus.Client.Repositories.Async.ILifecyclesRepository)
    Octopus.Client.Model.LifecycleResource Instance { get; }
    Octopus.Client.Model.PhaseResource AddOrUpdatePhase(String)
    Octopus.Client.Editors.Async.LifecycleEditor AsSimplePromotionLifecycle(IEnumerable<EnvironmentResource>)
    Octopus.Client.Editors.Async.LifecycleEditor Clear()
    Task<LifecycleEditor> CreateOrModify(String)
    Task<LifecycleEditor> CreateOrModify(String, String)
    Octopus.Client.Editors.Async.LifecycleEditor Customize(Action<LifecycleResource>)
    Task<LifecycleEditor> Save()
  }
  class MachineEditor
    Octopus.Client.Editors.Async.IResourceEditor<MachineResource, MachineEditor>
    Octopus.Client.Editors.Async.IResourceBuilder
  {
    .ctor(Octopus.Client.Repositories.Async.IMachineRepository)
    Octopus.Client.Model.MachineResource Instance { get; }
    Task<MachineEditor> CreateOrModify(String, Octopus.Client.Model.Endpoints.EndpointResource, Octopus.Client.Model.EnvironmentResource[], String[])
    Task<MachineEditor> CreateOrModify(String, Octopus.Client.Model.Endpoints.EndpointResource, Octopus.Client.Model.EnvironmentResource[], String[], Octopus.Client.Model.TenantResource[], Octopus.Client.Model.TagResource[], Nullable<TenantedDeploymentMode>)
    Octopus.Client.Editors.Async.MachineEditor Customize(Action<MachineResource>)
    Task<MachineEditor> Save()
  }
  class ProjectChannelsEditor
  {
    .ctor(Octopus.Client.Repositories.Async.IChannelRepository, Octopus.Client.Model.ProjectResource)
    Task<ChannelEditor> CreateOrModify(String)
    Task<ChannelEditor> CreateOrModify(String, String)
    Task<ProjectChannelsEditor> Delete(String)
    Task<ProjectChannelsEditor> SaveAll()
  }
  class ProjectEditor
    Octopus.Client.Editors.Async.IResourceEditor<ProjectResource, ProjectEditor>
    Octopus.Client.Editors.Async.IResourceBuilder
  {
    .ctor(Octopus.Client.Repositories.Async.IProjectRepository, Octopus.Client.Repositories.Async.IChannelRepository, Octopus.Client.Repositories.Async.IDeploymentProcessRepository, Octopus.Client.Repositories.Async.IProjectTriggerRepository, Octopus.Client.Repositories.Async.IVariableSetRepository)
    Octopus.Client.Editors.Async.ProjectChannelsEditor Channels { get; }
    Task<DeploymentProcessEditor> DeploymentProcess { get; }
    Octopus.Client.Model.ProjectResource Instance { get; }
    Octopus.Client.Editors.Async.ProjectTriggersEditor Triggers { get; }
    Task<VariableSetEditor> Variables { get; }
    Octopus.Client.Model.IVariableTemplateContainerEditor<ProjectResource> VariableTemplates { get; }
    Task<ProjectEditor> CreateOrModify(String, Octopus.Client.Model.ProjectGroupResource, Octopus.Client.Model.LifecycleResource)
    Task<ProjectEditor> CreateOrModify(String, Octopus.Client.Model.ProjectGroupResource, Octopus.Client.Model.LifecycleResource, String)
    Octopus.Client.Editors.Async.ProjectEditor Customize(Action<ProjectResource>)
    Octopus.Client.Editors.Async.ProjectEditor IncludingLibraryVariableSets(Octopus.Client.Model.LibraryVariableSetResource[])
    Task<ProjectEditor> Save()
    Task<ProjectEditor> SetLogo(String)
  }
  class ProjectGroupEditor
    Octopus.Client.Editors.Async.IResourceEditor<ProjectGroupResource, ProjectGroupEditor>
    Octopus.Client.Editors.Async.IResourceBuilder
  {
    .ctor(Octopus.Client.Repositories.Async.IProjectGroupRepository)
    Octopus.Client.Model.ProjectGroupResource Instance { get; }
    Task<ProjectGroupEditor> CreateOrModify(String)
    Task<ProjectGroupEditor> CreateOrModify(String, String)
    Octopus.Client.Editors.Async.ProjectGroupEditor Customize(Action<ProjectGroupResource>)
    Task<ProjectGroupEditor> Save()
  }
  class ProjectTriggerEditor
    Octopus.Client.Editors.Async.IResourceEditor<ProjectTriggerResource, ProjectTriggerEditor>
    Octopus.Client.Editors.Async.IResourceBuilder
  {
    .ctor(Octopus.Client.Repositories.Async.IProjectTriggerRepository)
    Octopus.Client.Model.ProjectTriggerResource Instance { get; }
    Task<ProjectTriggerEditor> CreateOrModify(Octopus.Client.Model.ProjectResource, String, Octopus.Client.Model.Triggers.TriggerFilterResource, Octopus.Client.Model.Triggers.TriggerActionResource)
    Octopus.Client.Editors.Async.ProjectTriggerEditor Customize(Action<ProjectTriggerResource>)
    Task<ProjectTriggerEditor> Save()
  }
  class ProjectTriggersEditor
  {
    .ctor(Octopus.Client.Repositories.Async.IProjectTriggerRepository, Octopus.Client.Model.ProjectResource)
    Task<ProjectTriggerEditor> CreateOrModify(String, Octopus.Client.Model.Triggers.TriggerFilterResource, Octopus.Client.Model.Triggers.TriggerActionResource)
    Task<ProjectTriggersEditor> Delete(String)
    Task<ProjectTriggersEditor> SaveAll()
  }
  class SubscriptionEditor
    Octopus.Client.Editors.Async.IResourceEditor<SubscriptionResource, SubscriptionEditor>
    Octopus.Client.Editors.Async.IResourceBuilder
  {
    .ctor(Octopus.Client.Repositories.Async.ISubscriptionRepository)
    Octopus.Client.Model.SubscriptionResource Instance { get; }
    Task<SubscriptionEditor> CreateOrModify(String, Octopus.Client.Model.EventNotificationSubscription, Boolean)
    Octopus.Client.Editors.Async.SubscriptionEditor Customize(Action<SubscriptionResource>)
    Task<SubscriptionEditor> Save()
  }
  class TagSetEditor
    Octopus.Client.Editors.Async.IResourceEditor<TagSetResource, TagSetEditor>
    Octopus.Client.Editors.Async.IResourceBuilder
  {
    .ctor(Octopus.Client.Repositories.Async.ITagSetRepository)
    Octopus.Client.Model.TagSetResource Instance { get; }
    Octopus.Client.Editors.Async.TagSetEditor AddOrUpdateTag(String, String, String)
    Octopus.Client.Editors.Async.TagSetEditor ClearTags()
    Task<TagSetEditor> CreateOrModify(String)
    Task<TagSetEditor> CreateOrModify(String, String)
    Octopus.Client.Editors.Async.TagSetEditor Customize(Action<TagSetResource>)
    Octopus.Client.Editors.Async.TagSetEditor RemoveTag(String)
    Task<TagSetEditor> Save()
  }
  class TenantEditor
    Octopus.Client.Editors.Async.IResourceEditor<TenantResource, TenantEditor>
    Octopus.Client.Editors.Async.IResourceBuilder
  {
    .ctor(Octopus.Client.Repositories.Async.ITenantRepository)
    Octopus.Client.Model.TenantResource Instance { get; }
    Task<TenantVariablesEditor> Variables { get; }
    Octopus.Client.Editors.Async.TenantEditor ClearProjects()
    Octopus.Client.Editors.Async.TenantEditor ClearTags()
    Octopus.Client.Editors.Async.TenantEditor ConnectToProjectAndEnvironments(Octopus.Client.Model.ProjectResource, Octopus.Client.Model.EnvironmentResource[])
    Task<TenantEditor> CreateOrModify(String)
    Octopus.Client.Editors.Async.TenantEditor Customize(Action<TenantResource>)
    Task<TenantEditor> Save()
    Task<TenantEditor> SetLogo(String)
    Octopus.Client.Editors.Async.TenantEditor WithTag(Octopus.Client.Model.TagResource)
  }
  class TenantVariablesEditor
    Octopus.Client.Editors.Async.IResourceEditor<TenantVariableResource, TenantVariablesEditor>
    Octopus.Client.Editors.Async.IResourceBuilder
  {
    .ctor(Octopus.Client.Repositories.Async.ITenantRepository, Octopus.Client.Model.TenantResource)
    Octopus.Client.Model.TenantVariableResource Instance { get; }
    Octopus.Client.Editors.Async.TenantVariablesEditor Customize(Action<TenantVariableResource>)
    Task<TenantVariablesEditor> Load()
    Task<TenantVariablesEditor> Save()
  }
  class VariableSetEditor
    Octopus.Client.Editors.Async.IResourceEditor<VariableSetResource, VariableSetEditor>
    Octopus.Client.Editors.Async.IResourceBuilder
  {
    .ctor(Octopus.Client.Repositories.Async.IVariableSetRepository)
    Octopus.Client.Model.VariableSetResource Instance { get; }
    Octopus.Client.Editors.Async.VariableSetEditor AddOrUpdateVariableValue(String, String, Octopus.Client.Model.ScopeSpecification, Boolean)
    Octopus.Client.Editors.Async.VariableSetEditor AddOrUpdateVariableValue(String, String, Octopus.Client.Model.ScopeSpecification, Boolean, String)
    Octopus.Client.Editors.Async.VariableSetEditor AddOrUpdateVariableValue(String, String, Octopus.Client.Model.ScopeSpecification)
    Octopus.Client.Editors.Async.VariableSetEditor AddOrUpdateVariableValue(String, String)
    Octopus.Client.Editors.Async.VariableSetEditor AddOrUpdateVariableValue(String, String, String)
    Octopus.Client.Editors.Async.VariableSetEditor Customize(Action<VariableSetResource>)
    Task<VariableSetEditor> Load(String)
    Task<VariableSetEditor> Save()
  }
  class VariableTemplateContainerEditor`1
  {
    .ctor(Octopus.Client.Model.IVariableTemplateContainerEditor<TContainer>)
    Octopus.Client.Editors.Async.VariableTemplateContainerEditor<TContainer> AddOrUpdateMultiLineTextTemplate(String, String)
    Octopus.Client.Editors.Async.VariableTemplateContainerEditor<TContainer> AddOrUpdateMultiLineTextTemplate(String, String, String, String)
    Octopus.Client.Editors.Async.VariableTemplateContainerEditor<TContainer> AddOrUpdateSelectTemplate(String, String, IDictionary<String, String>)
    Octopus.Client.Editors.Async.VariableTemplateContainerEditor<TContainer> AddOrUpdateSelectTemplate(String, String, IDictionary<String, String>, String, String)
    Octopus.Client.Editors.Async.VariableTemplateContainerEditor<TContainer> AddOrUpdateSensitiveTemplate(String, String)
    Octopus.Client.Editors.Async.VariableTemplateContainerEditor<TContainer> AddOrUpdateSensitiveTemplate(String, String, String, String)
    Octopus.Client.Editors.Async.VariableTemplateContainerEditor<TContainer> AddOrUpdateSingleLineTextTemplate(String, String)
    Octopus.Client.Editors.Async.VariableTemplateContainerEditor<TContainer> AddOrUpdateSingleLineTextTemplate(String, String, String, String)
    Octopus.Client.Editors.Async.VariableTemplateContainerEditor<TContainer> AddOrUpdateVariableTemplate(String, String, IDictionary<String, String>)
    Octopus.Client.Editors.Async.VariableTemplateContainerEditor<TContainer> AddOrUpdateVariableTemplate(String, String, IDictionary<String, String>, String, String)
  }
}
Octopus.Client.Exceptions
{
  class OctopusDeserializationException
    ISerializable
    _Exception
    Octopus.Client.Exceptions.OctopusException
  {
    .ctor(Int32, String)
    .ctor(Int32, String, Exception)
  }
  class OctopusErrorsContract
  {
    .ctor()
    Object Details { get; set; }
    String ErrorMessage { get; set; }
    String[] Errors { get; set; }
    String FullException { get; set; }
    String HelpText { get; set; }
  }
  abstract class OctopusException
    ISerializable
    _Exception
    Exception
  {
    String HelpText { get; }
    Int32 HttpStatusCode { get; }
  }
  abstract class OctopusExceptionFactory
  {
    static Octopus.Client.Exceptions.OctopusException CreateException(WebException, HttpWebResponse)
    static Task<OctopusException> CreateException(HttpResponseMessage)
    static Octopus.Client.Exceptions.OctopusException CreateException(Int32, String)
    class OctopusErrorsContract
    {
      .ctor()
      Object Details { get; set; }
      String ErrorMessage { get; set; }
      String[] Errors { get; set; }
      String FullException { get; set; }
      String HelpText { get; set; }
    }
  }
  class OctopusMethodNotAllowedFoundException
    ISerializable
    _Exception
    Octopus.Client.Exceptions.OctopusException
  {
    .ctor(String)
  }
  class OctopusResourceNotFoundException
    ISerializable
    _Exception
    Octopus.Client.Exceptions.OctopusException
  {
    .ctor(String)
  }
  class OctopusSecurityException
    ISerializable
    _Exception
    Octopus.Client.Exceptions.OctopusException
  {
    .ctor(Int32, String)
  }
  class OctopusServerException
    ISerializable
    _Exception
    Octopus.Client.Exceptions.OctopusException
  {
    .ctor(Int32, String)
  }
  class OctopusValidationException
    ISerializable
    _Exception
    Octopus.Client.Exceptions.OctopusException
  {
    .ctor(String, ICollection<String>)
    .ctor(Int32, String, ICollection<String>)
    .ctor(Int32, String, ICollection<String>, Object)
    Object Details { get; }
    String ErrorMessage { get; }
    ReadOnlyCollection<String> Errors { get; }
    Octopus.Client.Exceptions.TDetails DetailsAs()
  }
  class UnsupportedApiVersionException
    ISerializable
    _Exception
    Octopus.Client.Exceptions.OctopusException
  {
    .ctor(String)
  }
}
Octopus.Client.Extensibility
{
  class Href
    IEquatable<Href>
  {
    .ctor(String)
    String AsString()
    Boolean Equals(Octopus.Client.Extensibility.Href)
    Boolean Equals(Object)
    Int32 GetHashCode()
    String ToString()
  }
  interface INamedResource
  {
    String Name { get; }
  }
  interface IResource
  {
    String Id { get; }
    Octopus.Client.Extensibility.LinkCollection Links { get; set; }
  }
  class LinkCollection
    IDictionary<String, Href>
    ICollection<KeyValuePair<String, Href>>
    IEnumerable<KeyValuePair<String, Href>>
    IEnumerable
    IDictionary
    ICollection
    IReadOnlyDictionary<String, Href>
    IReadOnlyCollection<KeyValuePair<String, Href>>
    ISerializable
    IDeserializationCallback
    Dictionary<String, Href>
  {
    .ctor()
    Octopus.Client.Extensibility.LinkCollection Add(String, Octopus.Client.Extensibility.Href)
    static Octopus.Client.Extensibility.LinkCollection Self(Octopus.Client.Extensibility.Href)
  }
}
Octopus.Client.Extensibility.Attributes
{
  abstract class ApiPropertyAttribute
    _Attribute
    Attribute
  {
  }
  class WriteableAttribute
    _Attribute
    Octopus.Client.Extensibility.Attributes.ApiPropertyAttribute
  {
    .ctor()
  }
  class WriteableOnCreateAttribute
    _Attribute
    Octopus.Client.Extensibility.Attributes.ApiPropertyAttribute
  {
    .ctor()
  }
}
Octopus.Client.Extensibility.Extensions.Infrastructure.Configuration
{
  abstract class ExtensionConfigurationResource
    Octopus.Client.Extensibility.IResource
  {
    String Id { get; set; }
    Boolean IsEnabled { get; set; }
    Octopus.Client.Extensibility.LinkCollection Links { get; set; }
  }
}
Octopus.Client.Extensions
{
  abstract class StringExtensions
  {
    static String CommaSeperate(IEnumerable<Object>)
    static String NewLineSeperate(IEnumerable<Object>)
  }
  abstract class TaskStateExtensions
  {
    static Boolean IsCompleted(Octopus.Client.Model.TaskState)
  }
  abstract class TypeExtensions
  {
    static Object GetDefault(Type)
  }
  abstract class UriExtensions
  {
    static String HexEscape(Char)
  }
}
Octopus.Client.Logging
{
  interface ILogProvider
  {
    Octopus.Client.Logging.Logger GetLogger(String)
    IDisposable OpenMappedContext(String, String)
    IDisposable OpenNestedContext(String)
  }
  class Logger
    ICloneable
    ISerializable
    MulticastDelegate
  {
    .ctor(Object, IntPtr)
    IAsyncResult BeginInvoke(Octopus.Client.Logging.LogLevel, Func<String>, Exception, Object[], AsyncCallback, Object)
    Boolean EndInvoke(IAsyncResult)
    Boolean Invoke(Octopus.Client.Logging.LogLevel, Func<String>, Exception, Object[])
  }
  LogLevel
  {
      Trace = 0
      Debug = 1
      Info = 2
      Warn = 3
      Error = 4
      Fatal = 5
  }
  abstract class LogProvider
  {
    static System.String DisableLoggingEnvironmentVariable
    static Boolean IsDisabled { get; set; }
    static void SetCurrentLogProvider(Octopus.Client.Logging.ILogProvider)
  }
}
Octopus.Client.Model
{
  class ActionsUpdateResource
    Octopus.Client.Extensibility.IResource
  {
    .ctor()
    IDictionary<String, String[]> ActionIdsByProcessId { get; set; }
    IDictionary<String, PropertyValueResource> DefaultPropertyValues { get; set; }
    String Id { get; set; }
    Octopus.Client.Extensibility.LinkCollection Links { get; set; }
    IDictionary<String, PropertyValueResource> Overrides { get; set; }
    Int32 Version { get; set; }
  }
  class ActionTemplateParameterResource
  {
    .ctor()
    Octopus.Client.Model.PropertyValueResource DefaultValue { get; set; }
    IDictionary<String, String> DisplaySettings { get; set; }
    String HelpText { get; set; }
    String Id { get; set; }
    String Label { get; set; }
    String Name { get; set; }
    String GetControlType()
    Boolean IsCertificate()
    Boolean IsControlType(String)
    Boolean IsSensitive()
  }
  class ActionTemplateResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.INamedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    String ActionType { get; set; }
    String CommunityActionTemplateId { get; set; }
    String Description { get; set; }
    String Name { get; set; }
    IList<ActionTemplateParameterResource> Parameters { get; }
    IDictionary<String, PropertyValueResource> Properties { get; }
    Int32 Version { get; set; }
  }
  class ActionTemplateSearchResource
    Octopus.Client.Extensibility.IResource
  {
    .ctor()
    String Author { get; set; }
    String CommunityActionTemplateId { get; set; }
    String Description { get; set; }
    Boolean HasUpdate { get; set; }
    String Id { get; set; }
    Boolean IsBuiltIn { get; set; }
    Boolean IsInstalled { get; set; }
    Octopus.Client.Extensibility.LinkCollection Links { get; set; }
    String Name { get; set; }
    String Type { get; set; }
    String Website { get; set; }
  }
  class ActionTemplateUsageResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    String ActionId { get; set; }
    String ActionName { get; set; }
    String ActionTemplateId { get; set; }
    String DeploymentProcessId { get; set; }
    String ProjectId { get; set; }
    String ProjectName { get; set; }
    String ProjectSlug { get; set; }
    String StepId { get; set; }
    String StepName { get; set; }
    String Version { get; set; }
  }
  ActionUpdateOutcome
  {
      Success = 0
      ManualMergeRequired = 1
      DefaultParamterValueMissing = 2
  }
  class ActionUpdateResultResource
    Octopus.Client.Extensibility.IResource
  {
    .ctor()
    String Id { get; set; }
    Octopus.Client.Extensibility.LinkCollection Links { get; set; }
    IDictionary<String, String[]> ManualMergeRequiredReasonsByPropertyName { get; set; }
    String[] NamesOfNewParametersMissingDefaultValue { get; set; }
    Octopus.Client.Model.ActionUpdateOutcome Outcome { get; set; }
  }
  class ActivityElement
  {
    .ctor()
    Octopus.Client.Model.ActivityElement[] Children { get; set; }
    Nullable<DateTimeOffset> Ended { get; set; }
    String Id { get; set; }
    Octopus.Client.Model.ActivityLogElement[] LogElements { get; set; }
    String Name { get; set; }
    String ProgressMessage { get; set; }
    Int32 ProgressPercentage { get; set; }
    Boolean ShowAtSummaryLevel { get; set; }
    Nullable<DateTimeOffset> Started { get; set; }
    Octopus.Client.Model.ActivityStatus Status { get; set; }
  }
  class ActivityLogElement
  {
    .ctor()
    String Category { get; set; }
    String Detail { get; set; }
    String MessageText { get; set; }
    Nullable<DateTimeOffset> OccurredAt { get; set; }
  }
  ActivityStatus
  {
      Pending = 0
      Running = 1
      Success = 2
      Failed = 3
      Skipped = 4
      SuccessWithWarning = 5
      Canceled = 6
  }
  abstract class AdHocScript
  {
    static System.String Name
    abstract class Arguments
    {
      static System.String ActionTemplateId
      static System.String EnvironmentIds
      static System.String MachineIds
      static System.String Properties
      static System.String ScriptBody
      static System.String Syntax
      static System.String TargetRoles
    }
  }
  class AlertResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    String Message { get; set; }
    Octopus.Client.Model.AlertSeverity Severity { get; set; }
  }
  AlertSeverity
  {
      Info = 0
      Warning = 1
      Danger = 2
  }
  class AllowCsvAttribute
    _Attribute
    Attribute
  {
    .ctor()
  }
  class ApiConstants
  {
    static System.String AntiforgeryTokenCookiePrefix
    static System.String AntiforgeryTokenHttpHeaderName
    static System.String ApiKeyHttpHeaderName
    static System.String AuthenticationCookiePrefix
    static System.Int32 DefaultClientRequestTimeout
    static System.String OctopusUserAgentProductName
    static System.String SupportedApiSchemaVersionMax
    static System.String SupportedApiSchemaVersionMin
    .ctor()
  }
  class ApiKeyResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    String ApiKey { get; set; }
    DateTimeOffset Created { get; set; }
    String Purpose { get; set; }
    String UserId { get; set; }
  }
  abstract class Arguments
  {
    static System.String MachineIds
  }
  abstract class Arguments
  {
    static System.String DocumentId
  }
  abstract class Arguments
  {
    static System.String EnvironmentId
    static System.String MachineIds
    static System.String MachineTimeout
    static System.String Timeout
  }
  abstract class Arguments
  {
    static System.String ActionTemplateId
    static System.String EnvironmentIds
    static System.String MachineIds
    static System.String Properties
    static System.String ScriptBody
    static System.String Syntax
    static System.String TargetRoles
  }
  abstract class Arguments
  {
    static System.String EnvironmentId
    static System.String MachineIds
  }
  abstract class Arguments
  {
    static System.String MachineIds
  }
  abstract class Arguments
  {
    static System.String DeploymentId
  }
  abstract class Arguments
  {
    static System.String EmailAddress
  }
  abstract class Arguments
  {
    static System.String AccountId
  }
  class ArtifactResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    DateTimeOffset Created { get; set; }
    String Filename { get; set; }
    Octopus.Client.Model.ReferenceCollection RelatedDocumentIds { get; set; }
    String Source { get; set; }
  }
  class AuthenticationConfigResource
    Octopus.Client.Extensibility.IResource
  {
    .ctor()
    Boolean AutoLoginEnabled { get; set; }
    String Id { get; set; }
    Octopus.Client.Extensibility.LinkCollection Links { get; set; }
    String[] TrustedRedirectUrls { get; set; }
  }
  AuthenticationMode
  {
      UsernamePassword = 0
      Domain = 1
  }
  abstract class AutoDeploy
  {
    static System.String Name
    abstract class Arguments
    {
      static System.String MachineIds
    }
  }
  class AutoDeployReleaseOverrideResource
  {
    .ctor(String, String)
    .ctor(String, String, String)
    String EnvironmentId { get; }
    static IEqualityComparer<AutoDeployReleaseOverrideResource> EnvironmentIdTenantIdComparer { get; }
    String ReleaseId { get; }
    String TenantId { get; }
  }
  class AzureRootResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
  }
  abstract class Backup
  {
    static System.String Name
  }
  class BackupConfigurationResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    Boolean BackupAutomatically { get; set; }
    Nullable<TimeSpan> BackupEvery { get; set; }
    String BackupToDirectory { get; set; }
    Boolean IsMasterKeyBackedUp { get; set; }
    Nullable<DateTimeOffset> NextDue { get; set; }
    Octopus.Client.Model.RetentionPeriod Retention { get; set; }
    Nullable<TimeSpan> StartingFrom { get; set; }
  }
  class BuiltInFeedStatsResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    String IndexingStatus { get; set; }
    String SynchronizationStatus { get; set; }
    Int32 TotalPackages { get; set; }
  }
  class BuiltInRepositoryConfigurationResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    Nullable<Int32> DeleteUnreleasedPackagesAfterDays { get; set; }
  }
  abstract class BuiltInTasks
  {
    static String[] TasksThatCanBeQueuedByUsers()
    abstract class AdHocScript
    {
      static System.String Name
      abstract class Arguments
      {
        static System.String ActionTemplateId
        static System.String EnvironmentIds
        static System.String MachineIds
        static System.String Properties
        static System.String ScriptBody
        static System.String Syntax
        static System.String TargetRoles
      }
    }
    abstract class AutoDeploy
    {
      static System.String Name
      abstract class Arguments
      {
        static System.String MachineIds
      }
    }
    abstract class Backup
    {
      static System.String Name
    }
    abstract class Delete
    {
      static System.String Name
      abstract class Arguments
      {
        static System.String DocumentId
      }
    }
    abstract class Deploy
    {
      static System.String Name
      abstract class Arguments
      {
        static System.String DeploymentId
      }
    }
    abstract class Health
    {
      static System.String Name
      abstract class Arguments
      {
        static System.String EnvironmentId
        static System.String MachineIds
        static System.String MachineTimeout
        static System.String Timeout
      }
    }
    abstract class Migration
    {
      static System.String Name
    }
    abstract class MigrationImport
    {
      static System.String Name
    }
    abstract class MigrationPartialExport
    {
      static System.String Name
    }
    abstract class Retention
    {
      static System.String Name
    }
    abstract class SyncCommunityActionTemplates
    {
      static System.String Name
    }
    abstract class SystemIntegrityCheck
    {
      static System.String Name
    }
    abstract class TestAzureAccount
    {
      static System.String Name
      abstract class Arguments
      {
        static System.String AccountId
      }
    }
    abstract class TestEmail
    {
      static System.String Name
      abstract class Arguments
      {
        static System.String EmailAddress
      }
    }
    abstract class UpdateCalamari
    {
      static System.String Name
      abstract class Arguments
      {
        static System.String MachineIds
      }
    }
    abstract class Upgrade
    {
      static System.String Name
      abstract class Arguments
      {
        static System.String EnvironmentId
        static System.String MachineIds
      }
    }
  }
  CalamariUpdateBehavior
  {
      UpdateOnDeployment = 0
      UpdateOnNewMachine = 1
      UpdateAlways = 2
  }
  class CertificateConfigurationResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.INamedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    String Name { get; set; }
    String Thumbprint { get; set; }
  }
  CertificateFormat
  {
      Pkcs12 = 0
      Der = 1
      Pem = 2
  }
  class CertificateResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.INamedResource
    Octopus.Client.Model.Resource
  {
    .ctor(String, String)
    .ctor(String, String, String)
    Nullable<DateTimeOffset> Archived { get; }
    Octopus.Client.Model.SensitiveValue CertificateData { get; set; }
    Octopus.Client.Model.CertificateFormat CertificateDataFormat { get; }
    Octopus.Client.Model.ReferenceCollection EnvironmentIds { get; set; }
    Boolean HasPrivateKey { get; }
    Boolean IsExpired { get; }
    String IssuerCommonName { get; }
    String IssuerDistinguishedName { get; }
    String IssuerOrganization { get; }
    String Name { get; set; }
    DateTimeOffset NotAfter { get; }
    DateTimeOffset NotBefore { get; }
    String Notes { get; set; }
    Octopus.Client.Model.SensitiveValue Password { get; set; }
    String ReplacedBy { get; }
    Boolean SelfSigned { get; }
    String SerialNumber { get; }
    String SignatureAlgorithmName { get; }
    String SubjectCommonName { get; }
    String SubjectDistinguishedName { get; }
    String SubjectOrganization { get; }
    Octopus.Client.Model.TenantedDeploymentMode TenantedDeploymentParticipation { get; set; }
    Octopus.Client.Model.ReferenceCollection TenantIds { get; set; }
    Octopus.Client.Model.ReferenceCollection TenantTags { get; set; }
    String Thumbprint { get; }
    Int32 Version { get; }
  }
  class ChannelResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.INamedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    String Description { get; set; }
    Boolean IsDefault { get; set; }
    String LifecycleId { get; set; }
    String Name { get; set; }
    String ProjectId { get; set; }
    List<ChannelVersionRuleResource> Rules { get; set; }
    Octopus.Client.Model.ReferenceCollection TenantTags { get; set; }
    Octopus.Client.Model.ChannelResource AddCommonRuleForAllActions(String, String, Octopus.Client.Model.DeploymentProcessResource)
    Octopus.Client.Model.ChannelResource AddOrUpdateTenantTags(Octopus.Client.Model.TagResource[])
    Octopus.Client.Model.ChannelResource AddRule(Octopus.Client.Model.ChannelVersionRuleResource)
    Octopus.Client.Model.ChannelResource AddRule(String, String, Octopus.Client.Model.DeploymentActionResource[])
    Octopus.Client.Model.ChannelResource ClearRules()
    Octopus.Client.Model.ChannelResource ClearTenantTags()
    Octopus.Client.Model.ChannelResource SetAsDefaultChannel()
    Octopus.Client.Model.ChannelResource UsingLifecycle(Octopus.Client.Model.LifecycleResource)
  }
  class ChannelVersionRuleResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    Octopus.Client.Model.ReferenceCollection Actions { get; set; }
    String Tag { get; set; }
    String VersionRange { get; set; }
  }
  CommunicationStyle
  {
      None = 0
      TentaclePassive = 1
      TentacleActive = 2
      Ssh = 3
      OfflineDrop = 4
      AzureWebApp = 5
      Ftp = 6
      AzureCloudService = 7
  }
  class CommunityActionTemplateResource
    Octopus.Client.Extensibility.IResource
  {
    .ctor()
    String Author { get; set; }
    String Description { get; set; }
    String HistoryUrl { get; set; }
    String Id { get; set; }
    Octopus.Client.Extensibility.LinkCollection Links { get; set; }
    String Name { get; set; }
    IList<ActionTemplateParameterResource> Parameters { get; }
    IDictionary<String, PropertyValueResource> Properties { get; }
    String Type { get; set; }
    Int32 Version { get; set; }
    String Website { get; set; }
  }
  class Comparer
    IEqualityComparer<UserPermissionRestriction>
  {
    .ctor()
    Boolean Equals(Octopus.Client.Model.UserPermissionRestriction, Octopus.Client.Model.UserPermissionRestriction)
    Int32 GetHashCode(Octopus.Client.Model.UserPermissionRestriction)
  }
  class ConfigurationItemResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    String Description { get; set; }
    String Name { get; set; }
  }
  abstract class ControlType
  {
    static System.String AzureAccount
    static System.String Certificate
    static System.String Checkbox
    static System.String ControlTypeKey
    static System.String MultiLineText
    static System.String Select
    static System.String Sensitive
    static System.String SingleLineText
    static System.String StepName
    static Dictionary<String, String> AsDisplaySettings(String)
  }
  class DashboardConfigurationResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    Octopus.Client.Model.ReferenceCollection IncludedEnvironmentIds { get; set; }
    Octopus.Client.Model.ReferenceCollection IncludedProjectIds { get; set; }
    Octopus.Client.Model.ReferenceCollection IncludedTenantIds { get; set; }
    Octopus.Client.Model.ReferenceCollection IncludedTenantTags { get; set; }
    Nullable<Int32> ProjectLimit { get; set; }
  }
  class DashboardEnvironmentResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    String Name { get; set; }
  }
  class DashboardItemResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    String ChannelId { get; set; }
    Nullable<DateTimeOffset> CompletedTime { get; set; }
    DateTimeOffset Created { get; set; }
    String DeploymentId { get; set; }
    String Duration { get; set; }
    String EnvironmentId { get; set; }
    String ErrorMessage { get; set; }
    Boolean HasPendingInterruptions { get; set; }
    Boolean HasWarningsOrErrors { get; set; }
    Boolean IsCompleted { get; set; }
    Boolean IsCurrent { get; set; }
    Boolean IsPrevious { get; set; }
    String ProjectId { get; set; }
    DateTimeOffset QueueTime { get; set; }
    String ReleaseId { get; set; }
    String ReleaseVersion { get; set; }
    Octopus.Client.Model.TaskState State { get; set; }
    String TaskId { get; set; }
    String TenantId { get; set; }
  }
  class DashboardProjectGroupResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    Octopus.Client.Model.ReferenceCollection EnvironmentIds { get; set; }
    String Name { get; set; }
    Octopus.Client.Model.DashboardProjectGroupResource Copy()
  }
  class DashboardProjectResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    Boolean CanPerformUntenantedDeployment { get; set; }
    Octopus.Client.Model.ReferenceCollection EnvironmentIds { get; set; }
    String Name { get; set; }
    String ProjectGroupId { get; set; }
    String Slug { get; set; }
    Octopus.Client.Model.TenantedDeploymentMode TenantDeploymentMode { get; set; }
    Octopus.Client.Model.DashboardProjectResource Copy()
  }
  class DashboardResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    List<DashboardEnvironmentResource> Environments { get; set; }
    Boolean IsFiltered { get; set; }
    List<DashboardItemResource> Items { get; set; }
    List<DashboardItemResource> PreviousItems { get; set; }
    List<DashboardProjectGroupResource> ProjectGroups { get; set; }
    Nullable<Int32> ProjectLimit { get; set; }
    List<DashboardProjectResource> Projects { get; set; }
    List<DashboardTenantResource> Tenants { get; set; }
  }
  class DashboardTenantResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    String Name { get; set; }
    IDictionary<String, ReferenceCollection> ProjectEnvironments { get; set; }
    Octopus.Client.Model.ReferenceCollection TenantTags { get; set; }
  }
  class Defect
  {
    .ctor()
    String Description { get; set; }
    Octopus.Client.Model.DefectStatus Status { get; set; }
  }
  class DefectResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    .ctor(String)
    .ctor(String, Octopus.Client.Model.DefectStatus)
    String Description { get; set; }
    Nullable<DefectStatus> Status { get; set; }
  }
  DefectStatus
  {
      Unresolved = 0
      Resolved = 1
  }
  abstract class Delete
  {
    static System.String Name
    abstract class Arguments
    {
      static System.String DocumentId
    }
  }
  DeleteMachinesBehavior
  {
      DoNotDelete = 0
      DeleteUnavailableMachines = 1
  }
  abstract class Deploy
  {
    static System.String Name
    abstract class Arguments
    {
      static System.String DeploymentId
    }
  }
  class DeploymentActionResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    String ActionType { get; set; }
    Octopus.Client.Model.ReferenceCollection Channels { get; }
    Octopus.Client.Model.ReferenceCollection Environments { get; }
    Octopus.Client.Model.ReferenceCollection ExcludedEnvironments { get; }
    Boolean IsDisabled { get; set; }
    String Name { get; set; }
    IDictionary<String, PropertyValueResource> Properties { get; }
    Octopus.Client.Model.ReferenceCollection TenantTags { get; }
    Octopus.Client.Model.DeploymentActionResource ClearAllConditions()
    Octopus.Client.Model.DeploymentActionResource ForChannels(Octopus.Client.Model.ChannelResource[])
    Octopus.Client.Model.DeploymentActionResource ForEnvironments(Octopus.Client.Model.EnvironmentResource[])
    Octopus.Client.Model.DeploymentActionResource ForTenantTags(Octopus.Client.Model.TagResource[])
  }
  DeploymentApprovalStatus
  {
      Approved = 0
      Rejected = 1
  }
  class DeploymentPreviewResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    Octopus.Client.Model.Forms.Form Form { get; set; }
    List<DeploymentTemplateStep> StepsToExecute { get; set; }
    Boolean UseGuidedFailureModeByDefault { get; set; }
  }
  class DeploymentProcessResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    String LastSnapshotId { get; set; }
    String ProjectId { get; set; }
    IList<DeploymentStepResource> Steps { get; }
    Int32 Version { get; set; }
    Octopus.Client.Model.DeploymentStepResource AddOrUpdateStep(String)
    Octopus.Client.Model.DeploymentProcessResource ClearSteps()
    Octopus.Client.Model.DeploymentStepResource FindStep(String)
    Octopus.Client.Model.DeploymentProcessResource RemoveStep(String)
  }
  class DeploymentPromomotionTenant
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    String Name { get; set; }
    List<DeploymentPromotionTarget> PromoteTo { get; set; }
  }
  class DeploymentPromotionTarget
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    String Name { get; set; }
  }
  class DeploymentResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    String ChannelId { get; set; }
    String Comments { get; set; }
    DateTimeOffset Created { get; set; }
    String DeploymentProcessId { get; set; }
    String EnvironmentId { get; set; }
    Octopus.Client.Model.ReferenceCollection ExcludedMachineIds { get; set; }
    Boolean ForcePackageDownload { get; set; }
    Boolean ForcePackageRedeployment { get; set; }
    Dictionary<String, String> FormValues { get; set; }
    Boolean IsFirst { get; set; }
    String ManifestVariableSetId { get; set; }
    String Name { get; set; }
    String ProjectId { get; set; }
    Nullable<DateTimeOffset> QueueTime { get; set; }
    Nullable<DateTimeOffset> QueueTimeExpiry { get; set; }
    String ReleaseId { get; set; }
    Octopus.Client.Model.ReferenceCollection SkipActions { get; set; }
    Octopus.Client.Model.ReferenceCollection SpecificMachineIds { get; set; }
    String TaskId { get; set; }
    String TenantId { get; set; }
    Boolean UseGuidedFailure { get; set; }
  }
  DeploymentStepCondition
  {
      Success = 0
      Failure = 1
      Always = 2
      Variable = 3
  }
  DeploymentStepPackageRequirement
  {
      LetOctopusDecide = 0
      BeforePackageAcquisition = 1
      AfterPackageAcquisition = 2
  }
  class DeploymentStepProperties
  {
    .ctor()
    HealthCheckErrorHandling
    {
        TreatExceptionsAsErrors = 0
        TreatExceptionsAsWarnings = 1
    }
    HealthCheckIncludeMachinesInDeployment
    {
        DoNotAlterMachines = 0
        IncludeCheckedMachines = 1
    }
    HealthCheckType
    {
        FullHealthCheck = 0
        ConnectionTest = 1
    }
  }
  class DeploymentStepResource
  {
    .ctor()
    List<DeploymentActionResource> Actions { get; }
    Octopus.Client.Model.DeploymentStepCondition Condition { get; set; }
    String Id { get; set; }
    String Name { get; set; }
    Octopus.Client.Model.DeploymentStepPackageRequirement PackageRequirement { get; set; }
    IDictionary<String, PropertyValueResource> Properties { get; }
    Boolean RequiresPackagesToBeAcquired { get; set; }
    Octopus.Client.Model.DeploymentStepStartTrigger StartTrigger { get; set; }
    Octopus.Client.Model.DeploymentActionResource AddOrUpdateAction(String)
    Octopus.Client.Model.DeploymentActionResource AddOrUpdateManualInterventionAction(String, String)
    Octopus.Client.Model.DeploymentActionResource AddOrUpdatePackageAction(String, Octopus.Client.Model.PackageResource)
    Octopus.Client.Model.DeploymentActionResource AddOrUpdateScriptAction(String, Octopus.Client.Model.DeploymentProcess.ScriptAction, Octopus.Client.Model.DeploymentProcess.ScriptTarget)
    Octopus.Client.Model.DeploymentStepResource ClearActions()
    Octopus.Client.Model.DeploymentActionResource FindAction(String)
    Octopus.Client.Model.DeploymentStepResource RemoveAction(String)
    Octopus.Client.Model.DeploymentStepResource RequirePackagesToBeAcquired(Boolean)
    Octopus.Client.Model.DeploymentStepResource TargetingRoles(String[])
    Octopus.Client.Model.DeploymentStepResource WithCondition(Octopus.Client.Model.DeploymentStepCondition)
    Octopus.Client.Model.DeploymentStepResource WithPackageRequirement(Octopus.Client.Model.DeploymentStepPackageRequirement)
    Octopus.Client.Model.DeploymentStepResource WithStartTrigger(Octopus.Client.Model.DeploymentStepStartTrigger)
  }
  DeploymentStepStartTrigger
  {
      StartAfterPrevious = 0
      StartWithPrevious = 1
  }
  class DeploymentTemplateResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    String DeploymentNotes { get; set; }
    Boolean IsDeploymentProcessModified { get; set; }
    Boolean IsLibraryVariableSetModified { get; set; }
    Boolean IsVariableSetModified { get; set; }
    List<DeploymentPromotionTarget> PromoteTo { get; set; }
    List<DeploymentPromomotionTenant> TenantPromotions { get; set; }
  }
  class DeploymentTemplateStep
  {
    .ctor()
    String ActionId { get; set; }
    String ActionName { get; set; }
    String ActionNumber { get; set; }
    Boolean CanBeSkipped { get; set; }
    Octopus.Client.Model.ReferenceDataItem[] ExcludedMachines { get; set; }
    Boolean HasNoApplicableMachines { get; set; }
    String[] MachineNames { get; set; }
    Octopus.Client.Model.MachineDeploymentPreview[] Machines { get; set; }
    String[] Roles { get; set; }
    Octopus.Client.Model.ReferenceDataItem[] UnavailableMachines { get; set; }
  }
  DiscoverableEndpointType
  {
      TentaclePassive = 0
      TentacleActive = 1
      Ssh = 2
  }
  class DockerFeedResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.INamedResource
    Octopus.Client.Model.FeedResource
  {
    .ctor()
    String ApiVersion { get; set; }
    Octopus.Client.Model.FeedType FeedType { get; }
    String RegistryPath { get; set; }
  }
  class EncryptedBytes
  {
    .ctor(Byte[], Byte[])
    Byte[] Ciphertext { get; }
    Byte[] Salt { get; }
    static Octopus.Client.Model.EncryptedBytes FromBase64(String)
    String ToBase64()
  }
  class EnvironmentResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.INamedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    String Description { get; set; }
    String Name { get; set; }
    Int32 SortOrder { get; set; }
    Boolean UseGuidedFailure { get; set; }
  }
  class EnvironmentsSummaryResource
  {
    .ctor()
    List<EnvironmentSummaryResource> EnvironmentSummaries { get; set; }
    Dictionary<String, Int32> MachineEndpointSummaries { get; set; }
    Dictionary<String, Int32> MachineHealthStatusSummaries { get; set; }
    String[] MachineIdsForCalamariUpgrade { get; set; }
    Dictionary<String, Int32> MachineTenantSummaries { get; set; }
    Dictionary<String, Int32> MachineTenantTagSummaries { get; set; }
    Boolean TentacleUpgradesRequired { get; set; }
    Int32 TotalDisabledMachines { get; set; }
    Int32 TotalMachines { get; set; }
  }
  class EnvironmentSummaryResource
  {
    .ctor()
    Octopus.Client.Model.EnvironmentResource Environment { get; set; }
    Dictionary<String, Int32> MachineEndpointSummaries { get; set; }
    Dictionary<String, Int32> MachineHealthStatusSummaries { get; set; }
    String[] MachineIdsForCalamariUpgrade { get; set; }
    Dictionary<String, Int32> MachineTenantSummaries { get; set; }
    Dictionary<String, Int32> MachineTenantTagSummaries { get; set; }
    Boolean TentacleUpgradesRequired { get; set; }
    Int32 TotalDisabledMachines { get; set; }
    Int32 TotalMachines { get; set; }
  }
  class EventNotificationSubscription
  {
    .ctor()
    Nullable<DateTimeOffset> EmailDigestLastProcessed { get; set; }
    Nullable<Int64> EmailDigestLastProcessedEventAutoId { get; set; }
    TimeSpan EmailFrequencyPeriod { get; set; }
    String EmailShowDatesInTimeZoneId { get; set; }
    Octopus.Client.Model.ReferenceCollection EmailTeams { get; set; }
    Octopus.Client.Model.EventNotificationSubscriptionFilter Filter { get; set; }
    Nullable<DateTimeOffset> WebhookLastProcessed { get; set; }
    Nullable<Int64> WebhookLastProcessedEventAutoId { get; set; }
    Octopus.Client.Model.ReferenceCollection WebhookTeams { get; set; }
    TimeSpan WebhookTimeout { get; set; }
    String WebhookURI { get; set; }
  }
  class EventNotificationSubscriptionFilter
  {
    .ctor()
    IList<String> DocumentTypes { get; set; }
    IList<String> Environments { get; set; }
    IList<String> EventCategories { get; set; }
    IList<String> EventGroups { get; set; }
    IList<String> Projects { get; set; }
    IList<String> Tags { get; set; }
    IList<String> Tenants { get; set; }
    IList<String> Users { get; set; }
  }
  class EventReference
  {
    .ctor(String, Int32, Int32)
    Int32 Length { get; }
    String ReferencedDocumentId { get; }
    Int32 StartIndex { get; }
  }
  class EventResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    String Category { get; set; }
    String Comments { get; set; }
    String Details { get; set; }
    String IdentityEstablishedWith { get; set; }
    String Message { get; set; }
    String MessageHtml { get; set; }
    List<EventReference> MessageReferences { get; set; }
    DateTimeOffset Occurred { get; set; }
    Octopus.Client.Model.ReferenceCollection RelatedDocumentIds { get; set; }
    String UserId { get; set; }
    String Username { get; set; }
  }
  EventScope
  {
      Application = 0
      Project = 1
      Release = 2
      Deployment = 3
  }
  class ExternalSecurityGroupResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    String DisplayName { get; set; }
  }
  class FeaturesConfigurationResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    Boolean IsBrowserCachingEnabled { get; set; }
    Boolean IsCommunityActionTemplatesEnabled { get; set; }
    Boolean IsDockerEnabled { get; set; }
    Boolean IsMultiTenancyEnabled { get; set; }
  }
  class FeedResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.INamedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    Octopus.Client.Model.FeedType FeedType { get; }
    String FeedUri { get; set; }
    String Name { get; set; }
    Octopus.Client.Model.SensitiveValue Password { get; set; }
    String Username { get; set; }
  }
  FeedType
  {
      None = 0
      NuGet = 1
      Docker = 2
      Maven = 3
      OctopusProject = 4
      GitHub = 5
  }
  class FileUpload
  {
    .ctor()
    Stream Contents { get; set; }
    String FileName { get; set; }
  }
  class GitHubFeedResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.INamedResource
    Octopus.Client.Model.FeedResource
  {
    .ctor()
    Int32 DownloadAttempts { get; set; }
    Int32 DownloadRetryBackoffSeconds { get; set; }
    Octopus.Client.Model.FeedType FeedType { get; }
  }
  abstract class Health
  {
    static System.String Name
    abstract class Arguments
    {
      static System.String EnvironmentId
      static System.String MachineIds
      static System.String MachineTimeout
      static System.String Timeout
    }
  }
  HealthCheckErrorHandling
  {
      TreatExceptionsAsErrors = 0
      TreatExceptionsAsWarnings = 1
  }
  HealthCheckIncludeMachinesInDeployment
  {
      DoNotAlterMachines = 0
      IncludeCheckedMachines = 1
  }
  HealthCheckType
  {
      FullHealthCheck = 0
      ConnectionTest = 1
  }
  interface IAuditedResource
  {
    String LastModifiedBy { get; set; }
    Nullable<DateTimeOffset> LastModifiedOn { get; set; }
  }
  class InterruptionResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    Boolean CanTakeResponsibility { get; set; }
    String CorrelationId { get; set; }
    DateTimeOffset Created { get; set; }
    Octopus.Client.Model.Forms.Form Form { get; set; }
    Boolean HasResponsibility { get; set; }
    Boolean IsPending { get; set; }
    Octopus.Client.Model.ReferenceCollection RelatedDocumentIds { get; set; }
    Octopus.Client.Model.ReferenceCollection ResponsibleTeamIds { get; set; }
    String ResponsibleUserId { get; set; }
    String TaskId { get; set; }
    String Title { get; set; }
  }
  class InvitationResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    Octopus.Client.Model.ReferenceCollection AddToTeamIds { get; set; }
    DateTimeOffset Expires { get; set; }
    String InvitationCode { get; set; }
  }
  interface IVariableTemplateContainer
  {
    List<ActionTemplateParameterResource> Templates { get; }
  }
  interface IVariableTemplateContainerEditor`1
  {
    Octopus.Client.Model.TContainer AddOrUpdateMultiLineTextTemplate(String, String)
    Octopus.Client.Model.TContainer AddOrUpdateMultiLineTextTemplate(String, String, String, String)
    Octopus.Client.Model.TContainer AddOrUpdateSelectTemplate(String, String, IDictionary<String, String>)
    Octopus.Client.Model.TContainer AddOrUpdateSelectTemplate(String, String, IDictionary<String, String>, String, String)
    Octopus.Client.Model.TContainer AddOrUpdateSensitiveTemplate(String, String)
    Octopus.Client.Model.TContainer AddOrUpdateSensitiveTemplate(String, String, String, String)
    Octopus.Client.Model.TContainer AddOrUpdateSingleLineTextTemplate(String, String)
    Octopus.Client.Model.TContainer AddOrUpdateSingleLineTextTemplate(String, String, String, String)
    Octopus.Client.Model.TContainer AddOrUpdateVariableTemplate(String, String, IDictionary<String, String>)
    Octopus.Client.Model.TContainer AddOrUpdateVariableTemplate(String, String, IDictionary<String, String>, String, String)
    Octopus.Client.Model.TContainer Clear()
  }
  class Library
  {
    .ctor(String)
    String LibraryVariableSetId { get; }
    String LibraryVariableSetName { get; set; }
    Octopus.Client.Extensibility.LinkCollection Links { get; set; }
    List<ActionTemplateParameterResource> Templates { get; set; }
    Dictionary<String, PropertyValueResource> Variables { get; set; }
  }
  class LibraryVariableSetResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.INamedResource
    Octopus.Client.Model.IVariableTemplateContainer
    Octopus.Client.Model.IVariableTemplateContainerEditor<LibraryVariableSetResource>
    Octopus.Client.Model.Resource
  {
    .ctor()
    Octopus.Client.Model.VariableSetContentType ContentType { get; set; }
    String Description { get; set; }
    String Name { get; set; }
    List<ActionTemplateParameterResource> Templates { get; set; }
    String VariableSetId { get; set; }
    Octopus.Client.Model.LibraryVariableSetResource AddOrUpdateMultiLineTextTemplate(String, String)
    Octopus.Client.Model.LibraryVariableSetResource AddOrUpdateMultiLineTextTemplate(String, String, String, String)
    Octopus.Client.Model.LibraryVariableSetResource AddOrUpdateSelectTemplate(String, String, IDictionary<String, String>)
    Octopus.Client.Model.LibraryVariableSetResource AddOrUpdateSelectTemplate(String, String, IDictionary<String, String>, String, String)
    Octopus.Client.Model.LibraryVariableSetResource AddOrUpdateSensitiveTemplate(String, String)
    Octopus.Client.Model.LibraryVariableSetResource AddOrUpdateSensitiveTemplate(String, String, String, String)
    Octopus.Client.Model.LibraryVariableSetResource AddOrUpdateSingleLineTextTemplate(String, String)
    Octopus.Client.Model.LibraryVariableSetResource AddOrUpdateSingleLineTextTemplate(String, String, String, String)
    Octopus.Client.Model.LibraryVariableSetResource AddOrUpdateVariableTemplate(String, String, IDictionary<String, String>)
    Octopus.Client.Model.LibraryVariableSetResource AddOrUpdateVariableTemplate(String, String, IDictionary<String, String>, String, String)
    Octopus.Client.Model.LibraryVariableSetResource Clear()
  }
  class LicenseResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    Boolean IsCompliant { get; set; }
    String LicenseText { get; set; }
    String NoncomplianceReason { get; set; }
    Boolean UseFreeVersion { get; set; }
  }
  class LifecycleProgressionResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    Octopus.Client.Model.ReferenceCollection NextDeployments { get; set; }
    Int32 NextDeploymentsMinimumRequired { get; set; }
    List<PhaseProgressionResource> Phases { get; set; }
  }
  class LifecycleResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.INamedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    String Description { get; set; }
    String Name { get; set; }
    IList<PhaseResource> Phases { get; }
    Octopus.Client.Model.RetentionPeriod ReleaseRetentionPolicy { get; set; }
    Octopus.Client.Model.RetentionPeriod TentacleRetentionPolicy { get; set; }
    Octopus.Client.Model.PhaseResource AddOrUpdatePhase(String)
    Octopus.Client.Model.LifecycleResource Clear()
    Octopus.Client.Model.PhaseResource FindPhase(String)
    Octopus.Client.Model.LifecycleResource RemovePhase(String)
    Octopus.Client.Model.LifecycleResource WithReleaseRetentionPolicy(Octopus.Client.Model.RetentionPeriod)
    Octopus.Client.Model.LifecycleResource WithTentacleRetentionPolicy(Octopus.Client.Model.RetentionPeriod)
  }
  class LoginCommand
  {
    .ctor()
    String Password { get; set; }
    Boolean RememberMe { get; set; }
    String Username { get; set; }
  }
  class MachineCleanupPolicy
  {
    .ctor()
    Octopus.Client.Model.DeleteMachinesBehavior DeleteMachinesBehavior { get; set; }
    TimeSpan DeleteMachinesElapsedTimeSpan { get; set; }
  }
  class MachineConnectionStatus
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    String CurrentTentacleVersion { get; set; }
    DateTimeOffset LastChecked { get; set; }
    List<ActivityLogElement> Logs { get; set; }
    String MachineId { get; set; }
    String Status { get; set; }
  }
  MachineConnectivityBehavior
  {
      ExpectedToBeOnline = 0
      MayBeOfflineAndCanBeSkipped = 1
  }
  class MachineConnectivityPolicy
  {
    .ctor()
    Octopus.Client.Model.MachineConnectivityBehavior MachineConnectivityBehavior { get; set; }
  }
  class MachineDeploymentPreview
  {
    .ctor()
    Boolean HasLatestCalamari { get; set; }
    String Id { get; set; }
    String Name { get; set; }
  }
  class MachineHealthCheckPolicy
  {
    .ctor()
    .ctor(Octopus.Client.Model.MachineScriptPolicy, Octopus.Client.Model.MachineScriptPolicy)
    TimeSpan HealthCheckInterval { get; set; }
    Octopus.Client.Model.MachineScriptPolicy SshEndpointHealthCheckPolicy { get; set; }
    Octopus.Client.Model.MachineScriptPolicy TentacleEndpointHealthCheckPolicy { get; set; }
  }
  MachineModelHealthStatus
  {
      Healthy = 0
      Unavailable = 1
      Unknown = 2
      HasWarnings = 3
      Unhealthy = 4
  }
  MachineModelStatus
  {
      Online = 0
      Offline = 1
      Unknown = 2
      NeedsUpgrade = 3
      CalamariNeedsUpgrade = 4
      Disabled = 5
  }
  class MachinePolicyResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.INamedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    String Description { get; set; }
    Boolean IsDefault { get; set; }
    Octopus.Client.Model.MachineCleanupPolicy MachineCleanupPolicy { get; set; }
    Octopus.Client.Model.MachineConnectivityPolicy MachineConnectivityPolicy { get; set; }
    Octopus.Client.Model.MachineHealthCheckPolicy MachineHealthCheckPolicy { get; set; }
    Octopus.Client.Model.MachineUpdatePolicy MachineUpdatePolicy { get; set; }
    String Name { get; set; }
  }
  class MachinePollingConversation
  {
    .ctor()
    String InitialMessageDescription { get; set; }
    Guid InitialMessageId { get; set; }
    DateTime StartedAtUtc { get; set; }
  }
  class MachineResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.INamedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    Octopus.Client.Model.Endpoints.EndpointResource Endpoint { get; set; }
    Octopus.Client.Model.ReferenceCollection EnvironmentIds { get; set; }
    Boolean HasLatestCalamari { get; set; }
    Octopus.Client.Model.MachineModelHealthStatus HealthStatus { get; set; }
    Boolean IsDisabled { get; set; }
    Boolean IsInProcess { get; set; }
    String MachinePolicyId { get; set; }
    String Name { get; set; }
    Octopus.Client.Model.ReferenceCollection Roles { get; set; }
    Octopus.Client.Model.MachineModelStatus Status { get; set; }
    String StatusSummary { get; set; }
    Octopus.Client.Model.TenantedDeploymentMode TenantedDeploymentParticipation { get; set; }
    Octopus.Client.Model.ReferenceCollection TenantIds { get; set; }
    Octopus.Client.Model.ReferenceCollection TenantTags { get; set; }
    String Thumbprint { get; set; }
    String Uri { get; set; }
    Octopus.Client.Model.MachineResource AddOrUpdateEnvironments(Octopus.Client.Model.EnvironmentResource[])
    Octopus.Client.Model.MachineResource AddOrUpdateRoles(String[])
    Octopus.Client.Model.MachineResource AddOrUpdateTenants(Octopus.Client.Model.TenantResource[])
    Octopus.Client.Model.MachineResource AddOrUpdateTenantTags(Octopus.Client.Model.TagResource[])
    Octopus.Client.Model.MachineResource ClearEnvironments()
    Octopus.Client.Model.MachineResource ClearRoles()
    Octopus.Client.Model.MachineResource ClearTenants()
    Octopus.Client.Model.MachineResource ClearTenantTags()
    Octopus.Client.Model.MachineResource RemoveEnvironment(Octopus.Client.Model.EnvironmentResource)
    Octopus.Client.Model.MachineResource RemoveRole(String)
    Octopus.Client.Model.MachineResource RemoveTenant(Octopus.Client.Model.TenantResource)
    Octopus.Client.Model.MachineResource RemoveTenantTag(Octopus.Client.Model.TagResource)
  }
  class MachineScriptPolicy
  {
    .ctor()
    Octopus.Client.Model.MachineScriptPolicyRunType RunType { get; set; }
    String ScriptBody { get; set; }
  }
  MachineScriptPolicyRunType
  {
      InheritFromDefault = 0
      Inline = 1
      OnlyConnectivity = 2
  }
  class MachineUpdatePolicy
  {
    .ctor()
    Octopus.Client.Model.CalamariUpdateBehavior CalamariUpdateBehavior { get; set; }
    String TentacleUpdateAccountId { get; set; }
    Octopus.Client.Model.TentacleUpdateBehavior TentacleUpdateBehavior { get; set; }
  }
  class MaintenanceConfigurationResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    Boolean IsInMaintenanceMode { get; set; }
  }
  class MavenFeedResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.INamedResource
    Octopus.Client.Model.FeedResource
  {
    .ctor()
    Int32 DownloadAttempts { get; set; }
    Int32 DownloadRetryBackoffSeconds { get; set; }
    Octopus.Client.Model.FeedType FeedType { get; }
  }
  abstract class Migration
  {
    static System.String Name
  }
  abstract class MigrationImport
  {
    static System.String Name
  }
  abstract class MigrationPartialExport
  {
    static System.String Name
  }
  class MissingVariableResource
  {
    .ctor()
    String EnvironmentId { get; set; }
    String LibraryVariableSetId { get; set; }
    Octopus.Client.Extensibility.LinkCollection Links { get; set; }
    String ProjectId { get; set; }
    String VariableTemplateId { get; set; }
    String VariableTemplateName { get; set; }
  }
  class NamedReferenceItem
  {
    .ctor()
    String DisplayName { get; set; }
    String Id { get; set; }
  }
  class NamedReferenceItemCollection
    IList<NamedReferenceItem>
    ICollection<NamedReferenceItem>
    IEnumerable<NamedReferenceItem>
    IEnumerable
    IList
    ICollection
    IReadOnlyList<NamedReferenceItem>
    IReadOnlyCollection<NamedReferenceItem>
    List<NamedReferenceItem>
  {
    .ctor()
  }
  class NormalizeAttribute
    _Attribute
    Attribute
  {
    .ctor()
  }
  class NotDocumentReferenceAttribute
    _Attribute
    Attribute
  {
    .ctor()
  }
  class NotReadableAttribute
    _Attribute
    Octopus.Client.Extensibility.Attributes.ApiPropertyAttribute
  {
    .ctor()
  }
  class NuGetFeedResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.INamedResource
    Octopus.Client.Model.FeedResource
  {
    .ctor()
    Boolean EnhancedMode { get; set; }
    Octopus.Client.Model.FeedType FeedType { get; }
  }
  class NumericReportData
  {
    .ctor()
    String[] Labels { get; set; }
    Octopus.Client.Model.NumericReportSeries[] Series { get; set; }
  }
  class NumericReportSeries
  {
    .ctor()
    Double[] Data { get; set; }
    String Label { get; set; }
  }
  class OctopusProjectFeedResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.INamedResource
    Octopus.Client.Model.FeedResource
  {
    .ctor()
    Octopus.Client.Model.FeedType FeedType { get; }
  }
  class OctopusServerNodeResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.INamedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    Boolean IsInMaintenanceMode { get; set; }
    Boolean IsOffline { get; set; }
    String LastSeen { get; set; }
    Int32 MaxConcurrentTasks { get; set; }
    String Name { get; set; }
    String Rank { get; set; }
  }
  class PackageFromBuiltInFeedResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.PackageResource
  {
    .ctor()
    String Hash { get; set; }
    Nullable<Int64> PackageSizeBytes { get; set; }
  }
  class PackageResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    String Description { get; set; }
    String FeedId { get; set; }
    String FileExtension { get; set; }
    String NuGetFeedId { get; set; }
    String NuGetPackageId { get; set; }
    String PackageId { get; set; }
    String Published { get; set; }
    String ReleaseNotes { get; set; }
    String Summary { get; set; }
    String Title { get; set; }
    String Version { get; set; }
  }
  Permission
  {
      None = 0
      AdministerSystem = 1
      ProjectEdit = 2
      ProjectView = 3
      ProjectCreate = 4
      ProjectDelete = 5
      ProcessView = 6
      ProcessEdit = 7
      VariableEdit = 8
      VariableEditUnscoped = 9
      VariableView = 10
      VariableViewUnscoped = 11
      ReleaseCreate = 12
      ReleaseView = 13
      ReleaseEdit = 14
      ReleaseDelete = 15
      DefectReport = 16
      DefectResolve = 17
      DeploymentCreate = 18
      DeploymentDelete = 19
      DeploymentView = 20
      EnvironmentView = 21
      EnvironmentCreate = 22
      EnvironmentEdit = 23
      EnvironmentDelete = 24
      MachineCreate = 25
      MachineEdit = 26
      MachineView = 27
      MachineDelete = 28
      ArtifactView = 29
      ArtifactCreate = 30
      ArtifactEdit = 31
      ArtifactDelete = 32
      FeedView = 33
      EventView = 34
      LibraryVariableSetView = 35
      LibraryVariableSetCreate = 36
      LibraryVariableSetEdit = 37
      LibraryVariableSetDelete = 38
      ProjectGroupView = 39
      ProjectGroupCreate = 40
      ProjectGroupEdit = 41
      ProjectGroupDelete = 42
      TeamCreate = 43
      TeamView = 44
      TeamEdit = 45
      TeamDelete = 46
      UserView = 47
      UserInvite = 48
      UserRoleView = 49
      UserRoleEdit = 50
      TaskView = 51
      TaskViewLog = 52
      TaskCreate = 53
      TaskCancel = 54
      TaskEdit = 55
      InterruptionView = 56
      InterruptionSubmit = 57
      InterruptionViewSubmitResponsible = 58
      BuiltInFeedPush = 59
      BuiltInFeedAdminister = 60
      BuiltInFeedDownload = 61
      ActionTemplateView = 62
      ActionTemplateCreate = 63
      ActionTemplateEdit = 64
      ActionTemplateDelete = 65
      LifecycleCreate = 66
      LifecycleView = 67
      LifecycleEdit = 68
      LifecycleDelete = 69
      AccountView = 70
      AccountEdit = 71
      AccountCreate = 72
      AccountDelete = 73
      AuditView = 74
      TenantCreate = 75
      TenantEdit = 76
      TenantView = 77
      TenantDelete = 78
      TagSetCreate = 79
      TagSetEdit = 80
      TagSetDelete = 81
      MachinePolicyCreate = 82
      MachinePolicyView = 83
      MachinePolicyEdit = 84
      MachinePolicyDelete = 85
      ProxyCreate = 86
      ProxyView = 87
      ProxyEdit = 88
      ProxyDelete = 89
      SubscriptionCreate = 90
      SubscriptionView = 91
      SubscriptionEdit = 92
      SubscriptionDelete = 93
      TriggerCreate = 94
      TriggerView = 95
      TriggerEdit = 96
      TriggerDelete = 97
      CertificateView = 98
      CertificateCreate = 99
      CertificateEdit = 100
      CertificateDelete = 101
      CertificateExportPrivateKey = 102
      UserEdit = 103
      ConfigureServer = 104
      FeedEdit = 105
  }
  class PermissionDescription
  {
    .ctor()
    String Description { get; set; }
    String[] SupportedRestrictions { get; set; }
  }
  abstract class PermissionScope
  {
    static System.String Environments
    static System.String ProjectGroups
    static System.String Projects
    static System.String Tenants
  }
  class PhaseDeploymentResource
  {
    .ctor()
    Octopus.Client.Model.DeploymentResource Deployment { get; set; }
    Octopus.Client.Model.TaskResource Task { get; set; }
  }
  PhaseProgress
  {
      Pending = 0
      Current = 1
      Complete = 2
  }
  class PhaseProgressionResource
  {
    .ctor()
    Octopus.Client.Model.ReferenceCollection AutomaticDeploymentTargets { get; set; }
    Boolean Blocked { get; set; }
    List<PhaseDeploymentResource> Deployments { get; set; }
    String Id { get; set; }
    Int32 MinimumEnvironmentsBeforePromotion { get; set; }
    String Name { get; set; }
    Octopus.Client.Model.ReferenceCollection OptionalDeploymentTargets { get; set; }
    Octopus.Client.Model.PhaseProgress Progress { get; set; }
  }
  class PhaseResource
  {
    .ctor()
    Octopus.Client.Model.ReferenceCollection AutomaticDeploymentTargets { get; set; }
    String Id { get; set; }
    Boolean IsOptionalPhase { get; set; }
    Int32 MinimumEnvironmentsBeforePromotion { get; set; }
    String Name { get; set; }
    Octopus.Client.Model.ReferenceCollection OptionalDeploymentTargets { get; set; }
    Octopus.Client.Model.RetentionPeriod ReleaseRetentionPolicy { get; set; }
    Octopus.Client.Model.RetentionPeriod TentacleRetentionPolicy { get; set; }
    Octopus.Client.Model.PhaseResource Clear()
    Octopus.Client.Model.PhaseResource WithAutomaticDeploymentTargets(Octopus.Client.Model.EnvironmentResource[])
    Octopus.Client.Model.PhaseResource WithMinimumEnvironmentsBeforePromotion(Int32)
    Octopus.Client.Model.PhaseResource WithOptionalDeploymentTargets(Octopus.Client.Model.EnvironmentResource[])
    Octopus.Client.Model.PhaseResource WithReleaseRetentionPolicy(Octopus.Client.Model.RetentionPeriod)
    Octopus.Client.Model.PhaseResource WithTentacleRetentionPolicy(Octopus.Client.Model.RetentionPeriod)
  }
  class ProgressionResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    Dictionary<String, IEnumerable<ReferenceDataItem>> ChannelEnvironments { get; set; }
    List<ReferenceDataItem> Environments { get; set; }
    List<ReleaseProgressionResource> Releases { get; set; }
  }
  class Project
  {
    .ctor(String)
    Octopus.Client.Extensibility.LinkCollection Links { get; set; }
    String ProjectId { get; }
    String ProjectName { get; set; }
    List<ActionTemplateParameterResource> Templates { get; set; }
    Dictionary<String, Dictionary<String, PropertyValueResource>> Variables { get; set; }
  }
  class ProjectConnectivityPolicy
  {
    .ctor()
    Boolean AllowDeploymentsToNoTargets { get; set; }
    Octopus.Client.Model.SkipMachineBehavior SkipMachineBehavior { get; set; }
    Octopus.Client.Model.ReferenceCollection TargetRoles { get; set; }
  }
  class ProjectedTeamReferenceDataItem
    Octopus.Client.Model.ReferenceDataItem
  {
    .ctor(String, String, Boolean, String[])
    String[] ExternalGroupNames { get; set; }
    Boolean IsDirectlyAssigned { get; set; }
  }
  class ProjectGroupResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.INamedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    String Description { get; set; }
    Octopus.Client.Model.ReferenceCollection EnvironmentIds { get; set; }
    String Name { get; set; }
    String RetentionPolicyId { get; set; }
  }
  class ProjectResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.INamedResource
    Octopus.Client.Model.IVariableTemplateContainer
    Octopus.Client.Model.IVariableTemplateContainerEditor<ProjectResource>
    Octopus.Client.Model.Resource
  {
    .ctor()
    .ctor(String, String, String)
    Boolean AutoCreateRelease { get; set; }
    ISet<AutoDeployReleaseOverrideResource> AutoDeployReleaseOverrides { get; }
    Boolean DefaultToSkipIfAlreadyInstalled { get; set; }
    String DeploymentProcessId { get; set; }
    String Description { get; set; }
    Boolean DiscreteChannelRelease { get; set; }
    List<String> IncludedLibraryVariableSetIds { get; set; }
    Boolean IsDisabled { get; set; }
    String LifecycleId { get; set; }
    String Name { get; set; }
    Octopus.Client.Model.ProjectConnectivityPolicy ProjectConnectivityPolicy { get; set; }
    String ProjectGroupId { get; set; }
    Octopus.Client.Model.ReleaseCreationStrategyResource ReleaseCreationStrategy { get; set; }
    String Slug { get; set; }
    List<ActionTemplateParameterResource> Templates { get; set; }
    Octopus.Client.Model.TenantedDeploymentMode TenantedDeploymentMode { get; set; }
    String VariableSetId { get; set; }
    Octopus.Client.Model.VersioningStrategyResource VersioningStrategy { get; set; }
    void AddAutoDeployReleaseOverride(Octopus.Client.Model.EnvironmentResource, Octopus.Client.Model.ReleaseResource)
    void AddAutoDeployReleaseOverride(Octopus.Client.Model.EnvironmentResource, Octopus.Client.Model.TenantResource, Octopus.Client.Model.ReleaseResource)
    Octopus.Client.Model.ProjectResource AddOrUpdateMultiLineTextTemplate(String, String)
    Octopus.Client.Model.ProjectResource AddOrUpdateMultiLineTextTemplate(String, String, String, String)
    Octopus.Client.Model.ProjectResource AddOrUpdateSelectTemplate(String, String, IDictionary<String, String>)
    Octopus.Client.Model.ProjectResource AddOrUpdateSelectTemplate(String, String, IDictionary<String, String>, String, String)
    Octopus.Client.Model.ProjectResource AddOrUpdateSensitiveTemplate(String, String)
    Octopus.Client.Model.ProjectResource AddOrUpdateSensitiveTemplate(String, String, String, String)
    Octopus.Client.Model.ProjectResource AddOrUpdateSingleLineTextTemplate(String, String)
    Octopus.Client.Model.ProjectResource AddOrUpdateSingleLineTextTemplate(String, String, String, String)
    Octopus.Client.Model.ProjectResource AddOrUpdateVariableTemplate(String, String, IDictionary<String, String>, String, String)
    Octopus.Client.Model.ProjectResource AddOrUpdateVariableTemplate(String, String, IDictionary<String, String>)
    Octopus.Client.Model.ProjectResource Clear()
    Octopus.Client.Model.ProjectResource IncludingLibraryVariableSets(Octopus.Client.Model.LibraryVariableSetResource[])
  }
  class ProjectTriggerResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.INamedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    Octopus.Client.Model.Triggers.TriggerActionResource Action { get; set; }
    Octopus.Client.Model.Triggers.TriggerFilterResource Filter { get; set; }
    String Name { get; set; }
    String ProjectId { get; set; }
  }
  class PropertyValueJsonConverter
    JsonConverter
  {
    .ctor()
    Boolean CanConvert(Type)
    Object ReadJson(JsonReader, Type, Object, JsonSerializer)
    void WriteJson(JsonWriter, Object, JsonSerializer)
  }
  class PropertyValueResource
  {
    .ctor(String)
    .ctor(String, Boolean)
    .ctor(Octopus.Client.Model.SensitiveValue)
    Boolean IsSensitive { get; }
    Octopus.Client.Model.SensitiveValue SensitiveValue { get; }
    String Value { get; }
    class PropertyValueJsonConverter
      JsonConverter
    {
      .ctor()
      Boolean CanConvert(Type)
      Object ReadJson(JsonReader, Type, Object, JsonSerializer)
      void WriteJson(JsonWriter, Object, JsonSerializer)
    }
  }
  class ProxyResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.INamedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    String Host { get; set; }
    String Name { get; set; }
    Octopus.Client.Model.SensitiveValue Password { get; set; }
    Int32 Port { get; set; }
    String ProxyType { get; set; }
    String Username { get; set; }
  }
  class ReferenceCollection
    ICollection<String>
    IEnumerable<String>
    IEnumerable
    ISerializable
    IDeserializationCallback
    ISet<String>
    IReadOnlyCollection<String>
    HashSet<String>
  {
    .ctor()
    .ctor(String)
    .ctor(IEnumerable<String>)
    Octopus.Client.Model.ReferenceCollection Clone()
    static Octopus.Client.Model.ReferenceCollection One(String)
    void ReplaceAll(IEnumerable<String>)
    String ToString()
  }
  class ReferenceDataItem
  {
    .ctor(String, String)
    String Id { get; set; }
    String Name { get; set; }
  }
  class RegisterCommand
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.UserResource
  {
    .ctor()
    String InvitationCode { get; set; }
  }
  class ReleaseCreationStrategyResource
  {
    .ctor()
    String ChannelId { get; set; }
    String ReleaseCreationPackageStepId { get; set; }
  }
  class ReleaseProgressionResource
  {
    .ctor()
    Octopus.Client.Model.ChannelResource Channel { get; set; }
    Dictionary<String, IList<DashboardItemResource>> Deployments { get; set; }
    Boolean HasUnresolvedDefect { get; set; }
    Octopus.Client.Model.ReferenceCollection NextDeployments { get; set; }
    Octopus.Client.Model.ReleaseResource Release { get; set; }
    Octopus.Client.Model.RetentionPeriod ReleaseRetentionPeriod { get; set; }
    Octopus.Client.Model.RetentionPeriod TentacleRetentionPeriod { get; set; }
  }
  class ReleaseResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.ReleaseSummaryResource
  {
    .ctor()
    .ctor(String, String, String)
    DateTimeOffset Assembled { get; set; }
    String ChannelId { get; set; }
    List<String> LibraryVariableSetSnapshotIds { get; set; }
    String ProjectDeploymentProcessSnapshotId { get; set; }
    String ProjectId { get; set; }
    String ProjectVariableSetSnapshotId { get; set; }
    String ReleaseNotes { get; set; }
    List<SelectedPackage> SelectedPackages { get; set; }
  }
  class ReleaseSummaryResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    .ctor(String, String)
    String Version { get; set; }
  }
  class ReleaseTemplatePackage
  {
    .ctor()
    String ActionName { get; set; }
    String FeedId { get; set; }
    String FeedName { get; set; }
    Boolean IsResolvable { get; set; }
    String NuGetFeedId { get; set; }
    String NuGetFeedName { get; set; }
    String NuGetPackageId { get; set; }
    String PackageId { get; set; }
    String StepName { get; set; }
    String VersionSelectedLastRelease { get; set; }
  }
  class ReleaseTemplateResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    String DeploymentProcessId { get; set; }
    String LastReleaseVersion { get; set; }
    String NextVersionIncrement { get; set; }
    IList<ReleaseTemplatePackage> Packages { get; set; }
    String VersioningPackageStepName { get; set; }
  }
  class ReportDeploymentCountOverTimeResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    String ProjectId { get; set; }
    Octopus.Client.Model.NumericReportData ReportData { get; set; }
  }
  abstract class Resource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
  {
    String Id { get; set; }
    String LastModifiedBy { get; set; }
    Nullable<DateTimeOffset> LastModifiedOn { get; set; }
    Octopus.Client.Extensibility.LinkCollection Links { get; set; }
    Boolean HasLink(String)
    String Link(String)
  }
  class ResourceCollection`1
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor(IEnumerable<TResource>, Octopus.Client.Extensibility.LinkCollection)
    Boolean IsStale { get; set; }
    IList<TResource> Items { get; set; }
    Int32 ItemsPerPage { get; set; }
    String ItemType { get; }
    Int32 TotalResults { get; set; }
  }
  abstract class Retention
  {
    static System.String Name
  }
  class RetentionPeriod
    IEquatable<RetentionPeriod>
  {
    .ctor(Int32, Octopus.Client.Model.RetentionUnit)
    Int32 QuantityToKeep { get; }
    Boolean ShouldKeepForever { get; }
    Octopus.Client.Model.RetentionUnit Unit { get; }
    Boolean Equals(Octopus.Client.Model.RetentionPeriod)
    Boolean Equals(Object)
    Int32 GetHashCode()
    static Octopus.Client.Model.RetentionPeriod KeepForever()
    String ToString()
  }
  class RetentionPolicyResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.INamedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    Octopus.Client.Model.RetentionPeriod DeployedReleases { get; set; }
    Boolean IsReadOnly { get; set; }
    String Name { get; set; }
    Octopus.Client.Model.RetentionPeriod TentacleDeployments { get; set; }
    Octopus.Client.Model.RetentionPeriod UndeployedReleases { get; set; }
  }
  RetentionUnit
  {
      Days = 0
      Items = 1
  }
  class RoleScope
  {
    .ctor()
    Octopus.Client.Model.ReferenceCollection EnvironmentIds { get; set; }
    Octopus.Client.Model.ReferenceCollection ProjectGroupIds { get; set; }
    Octopus.Client.Model.ReferenceCollection ProjectIds { get; set; }
    Octopus.Client.Model.ReferenceCollection TenantIds { get; set; }
    String UserRoleId { get; set; }
  }
  class RootResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    String ApiVersion { get; set; }
    String Application { get; set; }
    Boolean FormsLoginEnabled { get; set; }
    Boolean GuestLoginEnabled { get; set; }
    Guid InstallationId { get; set; }
    Boolean IsEarlyAccessProgram { get; set; }
    String Version { get; set; }
  }
  ScopeField
  {
      Project = 0
      Environment = 1
      Machine = 2
      Role = 3
      TargetRole = 4
      Action = 5
      User = 6
      Private = 7
      Channel = 8
      TenantTag = 9
      Tenant = 10
  }
  class ScopeSpecification
    IDictionary<ScopeField, ScopeValue>
    ICollection<KeyValuePair<ScopeField, ScopeValue>>
    IEnumerable<KeyValuePair<ScopeField, ScopeValue>>
    IEnumerable
    IDictionary
    ICollection
    IReadOnlyDictionary<ScopeField, ScopeValue>
    IReadOnlyCollection<KeyValuePair<ScopeField, ScopeValue>>
    ISerializable
    IDeserializationCallback
    IEquatable<ScopeSpecification>
    Dictionary<ScopeField, ScopeValue>
  {
    .ctor()
    Octopus.Client.Model.ScopeSpecification Clone()
    Boolean Equals(Octopus.Client.Model.ScopeSpecification)
    Int32 GetHashCode()
    Int32 Rank()
    String ToString()
  }
  class ScopeValue
    ICollection<String>
    IEnumerable<String>
    IEnumerable
    ISerializable
    IDeserializationCallback
    ISet<String>
    IReadOnlyCollection<String>
    Octopus.Client.Model.ReferenceCollection
  {
    .ctor()
    .ctor(String)
    .ctor(String, String[])
    .ctor(IEnumerable<String>)
  }
  class ScriptConsoleSupportedAttribute
    _Attribute
    Attribute
  {
    .ctor()
  }
  ScriptSyntax
  {
      PowerShell = 0
      Bash = 1
      CSharp = 2
      FSharp = 3
  }
  abstract class ScriptSyntaxExtension
  {
    static String GetExtension(Octopus.Client.Model.ScriptSyntax)
  }
  class ScriptSyntaxMeta
  {
    static Octopus.Client.Model.ScriptSyntaxMeta[] All
    static Octopus.Client.Model.ScriptSyntaxMeta Bash
    static Octopus.Client.Model.ScriptSyntaxMeta CSharp
    System.String Extension
    System.String Name
    static Octopus.Client.Model.ScriptSyntaxMeta PowerShell
    Octopus.Client.Model.ScriptSyntax ScriptSyntax
    static Octopus.Client.Model.ScriptSyntaxMeta FromExtension(String)
    static Octopus.Client.Model.ScriptSyntaxMeta FromName(String)
  }
  class SelectedPackage
  {
    .ctor()
    .ctor(String, String)
    String ActionName { get; set; }
    String StepName { get; set; }
    String Version { get; set; }
  }
  class SemanticVersion
    IFormattable
    IComparable
    IComparable<StrictSemanticVersion>
    IEquatable<StrictSemanticVersion>
    Octopus.Client.Model.Versioning.StrictSemanticVersion
  {
    .ctor(String)
    .ctor(Octopus.Client.Model.SemanticVersion)
    .ctor(Version, String, String)
    .ctor(Int32, Int32, Int32)
    .ctor(Int32, Int32, Int32, String)
    .ctor(Int32, Int32, Int32, String, String)
    .ctor(Int32, Int32, Int32, IEnumerable<String>, String)
    .ctor(Int32, Int32, Int32, Int32)
    .ctor(Int32, Int32, Int32, Int32, String, String)
    .ctor(Int32, Int32, Int32, Int32, IEnumerable<String>, String)
    .ctor(Version, IEnumerable<String>, String, String, Boolean)
    Boolean IsLegacyVersion { get; }
    Boolean IsSemVer2 { get; }
    String OriginalString { get; }
    Int32 Revision { get; }
    Version Version { get; }
    static String IncrementRelease(String)
    static Octopus.Client.Model.SemanticVersion Parse(String, Boolean)
    String ToString()
    static Boolean TryParse(String, Octopus.Client.Model.SemanticVersion&, Boolean)
    static Boolean TryParseStrict(String, Octopus.Client.Model.SemanticVersion&)
  }
  class SemanticVersionComparer
    IComparer<String>
  {
    .ctor()
    Int32 Compare(String, String)
  }
  abstract class SemanticVersionMask
  {
    static Octopus.Client.Model.SemanticVersion ApplyMask(String, Octopus.Client.Model.SemanticVersion)
    static Octopus.Client.Model.SemanticVersion GetLatestMaskedVersion(String, List<SemanticVersion>)
    static Boolean IsMask(String)
  }
  class SensitiveValue
    IEquatable<SensitiveValue>
  {
    .ctor()
    Boolean HasValue { get; set; }
    String NewValue { get; set; }
    Boolean Equals(Octopus.Client.Model.SensitiveValue)
  }
  class ServerActivitiesResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    Octopus.Client.Model.ServerActivityResource[] OrchestratedActivities { get; set; }
    Octopus.Client.Model.ServerActivityResource[] OrphanedActivities { get; set; }
    Octopus.Client.Model.ServerActivityResource[] SystemServices { get; set; }
  }
  class ServerActivityResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    String ActorName { get; set; }
    String CurrentlyReceiving { get; set; }
    Nullable<DateTime> CurrentlyReceivingSinceUtc { get; set; }
    String CurrentOperation { get; set; }
    String Description { get; set; }
    Int32 InputQueueCount { get; set; }
    String Location { get; set; }
    List<ServerActivityResource> SupervisedActivities { get; set; }
  }
  class ServerStatusResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    Octopus.Client.Model.AuthenticationMode AuthenticationMode { get; set; }
    Boolean IsDatabaseEncrypted { get; set; }
    Boolean IsInMaintenanceMode { get; set; }
    Boolean IsUpgradeAvailable { get; set; }
    String MaintenanceExpires { get; set; }
    String MaximumAvailableVersion { get; set; }
    String MaximumAvailableVersionCoveredByLicense { get; set; }
  }
  SkipMachineBehavior
  {
      None = 0
      SkipUnavailableMachines = 1
  }
  class SmtpConfigurationResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    Boolean EnableSsl { get; set; }
    String NewSmtpPassword { get; set; }
    String SendEmailFrom { get; set; }
    String SmtpHost { get; set; }
    String SmtpLogin { get; set; }
    Octopus.Client.Model.SensitiveValue SmtpPassword { get; set; }
    Nullable<Int32> SmtpPort { get; set; }
  }
  class SquidAttribute
    _Attribute
    Attribute
  {
    .ctor()
  }
  class StandardColor
  {
    static System.String DarkBlue
    static System.String DarkCyan
    static System.String DarkGreen
    static System.String DarkGrey
    static System.String DarkPurple
    static System.String DarkRed
    static System.String DarkYellow
    static System.String LightBlue
    static System.String LightCyan
    static System.String LightGreen
    static System.String LightGrey
    static System.String LightPurple
    static System.String LightRed
    static System.String LightYellow
    .ctor()
  }
  class SubscriptionResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.INamedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    Octopus.Client.Model.EventNotificationSubscription EventNotificationSubscription { get; set; }
    Boolean IsDisabled { get; set; }
    String Name { get; set; }
    Octopus.Client.Model.SubscriptionType Type { get; set; }
  }
  SubscriptionType
  {
      Event = 0
  }
  class SupportsRestrictionAttribute
    _Attribute
    Attribute
  {
    .ctor(String[])
    Boolean ExplicitTenantScopeRequired { get; set; }
    IList<String> Scopes { get; }
  }
  abstract class SyncCommunityActionTemplates
  {
    static System.String Name
  }
  class SystemInfoResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    String ClrVersion { get; set; }
    String OSVersion { get; set; }
    Int32 ThreadCount { get; set; }
    TimeSpan Uptime { get; set; }
    String Version { get; set; }
    Int64 WorkingSetBytes { get; set; }
  }
  abstract class SystemIntegrityCheck
  {
    static System.String Name
  }
  class TagResource
    Octopus.Client.Extensibility.INamedResource
  {
    .ctor()
    String CanonicalTagName { get; set; }
    String Color { get; set; }
    String Description { get; set; }
    String Id { get; set; }
    String Name { get; set; }
    Int32 SortOrder { get; set; }
    class StandardColor
    {
      static System.String DarkBlue
      static System.String DarkCyan
      static System.String DarkGreen
      static System.String DarkGrey
      static System.String DarkPurple
      static System.String DarkRed
      static System.String DarkYellow
      static System.String LightBlue
      static System.String LightCyan
      static System.String LightGreen
      static System.String LightGrey
      static System.String LightPurple
      static System.String LightRed
      static System.String LightYellow
      .ctor()
    }
  }
  class TagSetResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.INamedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    String Description { get; set; }
    String Name { get; set; }
    Int32 SortOrder { get; set; }
    IList<TagResource> Tags { get; set; }
    Octopus.Client.Model.TagSetResource AddOrUpdateTag(String, String, String)
    Octopus.Client.Model.TagSetResource RemoveTag(String)
  }
  class TaskDetailsResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    Octopus.Client.Model.ActivityElement ActivityLog { get; set; }
    IList<ActivityElement> ActivityLogs { get; set; }
    Nullable<Int32> PhysicalLogSize { get; set; }
    Octopus.Client.Model.TaskProgress Progress { get; set; }
    Octopus.Client.Model.TaskResource Task { get; set; }
  }
  class TaskProgress
  {
    .ctor()
    String EstimatedTimeRemaining { get; set; }
    Int32 ProgressPercentage { get; set; }
  }
  class TaskResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    Dictionary<String, Object> Arguments { get; set; }
    Boolean CanRerun { get; set; }
    String Completed { get; set; }
    Nullable<DateTimeOffset> CompletedTime { get; set; }
    String Description { get; set; }
    String Duration { get; set; }
    String ErrorMessage { get; set; }
    Boolean FinishedSuccessfully { get; }
    Boolean HasBeenPickedUpByProcessor { get; set; }
    Boolean HasPendingInterruptions { get; set; }
    Boolean HasWarningsOrErrors { get; set; }
    Boolean IsCompleted { get; }
    Nullable<DateTimeOffset> LastUpdatedTime { get; set; }
    String Name { get; set; }
    DateTimeOffset QueueTime { get; set; }
    Nullable<DateTimeOffset> QueueTimeExpiry { get; set; }
    String ServerNode { get; set; }
    Nullable<DateTimeOffset> StartTime { get; set; }
    Octopus.Client.Model.TaskState State { get; set; }
  }
  TaskState
  {
      Queued = 1
      Executing = 2
      Failed = 3
      Canceled = 4
      TimedOut = 5
      Success = 6
      Cancelling = 8
  }
  class TeamResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.INamedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    Boolean CanBeDeleted { get; set; }
    Boolean CanBeRenamed { get; set; }
    Boolean CanChangeMembers { get; set; }
    Boolean CanChangeRoles { get; set; }
    Octopus.Client.Model.ReferenceCollection EnvironmentIds { get; set; }
    Octopus.Client.Model.NamedReferenceItemCollection ExternalSecurityGroups { get; set; }
    Octopus.Client.Model.ReferenceCollection MemberUserIds { get; set; }
    String Name { get; set; }
    Octopus.Client.Model.ReferenceCollection ProjectGroupIds { get; set; }
    Octopus.Client.Model.ReferenceCollection ProjectIds { get; set; }
    Octopus.Client.Model.ReferenceCollection TenantIds { get; set; }
    Octopus.Client.Model.ReferenceCollection TenantTags { get; set; }
    Octopus.Client.Model.ReferenceCollection UserRoleIds { get; set; }
  }
  class TeamV2Resource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.INamedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    Boolean CanBeDeleted { get; set; }
    Boolean CanBeRenamed { get; set; }
    Boolean CanChangeMembers { get; set; }
    Boolean CanChangeRoles { get; set; }
    Octopus.Client.Model.NamedReferenceItemCollection ExternalSecurityGroups { get; set; }
    Octopus.Client.Model.ReferenceCollection MemberUserIds { get; set; }
    String Name { get; set; }
    List<RoleScope> RoleScopes { get; set; }
  }
  TenantedDeploymentMode
  {
      Untenanted = 0
      TenantedOrUntenanted = 1
      Tenanted = 2
  }
  class TenantProjectEnvironmentMappingResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    Octopus.Client.Model.ReferenceCollection Environments { get; set; }
    String ProjectId { get; set; }
  }
  class TenantResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.INamedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    String Name { get; set; }
    IDictionary<String, ReferenceCollection> ProjectEnvironments { get; set; }
    Octopus.Client.Model.ReferenceCollection TenantTags { get; set; }
    Octopus.Client.Model.TenantResource ClearProjects()
    Octopus.Client.Model.TenantResource ClearTags()
    Octopus.Client.Model.TenantResource ConnectToProjectAndEnvironments(Octopus.Client.Model.ProjectResource, Octopus.Client.Model.EnvironmentResource[])
    Octopus.Client.Model.TenantResource WithTag(Octopus.Client.Model.TagResource)
  }
  class TenantsMissingVariablesResource
  {
    .ctor(String)
    Octopus.Client.Extensibility.LinkCollection Links { get; }
    IEnumerable<MissingVariableResource> MissingVariables { get; set; }
    String TenantId { get; }
  }
  class TenantVariableResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    Dictionary<String, Library> LibraryVariables { get; set; }
    Dictionary<String, Project> ProjectVariables { get; set; }
    String TenantId { get; set; }
    String TenantName { get; set; }
    class Library
    {
      .ctor(String)
      String LibraryVariableSetId { get; }
      String LibraryVariableSetName { get; set; }
      Octopus.Client.Extensibility.LinkCollection Links { get; set; }
      List<ActionTemplateParameterResource> Templates { get; set; }
      Dictionary<String, PropertyValueResource> Variables { get; set; }
    }
    class Project
    {
      .ctor(String)
      Octopus.Client.Extensibility.LinkCollection Links { get; set; }
      String ProjectId { get; }
      String ProjectName { get; set; }
      List<ActionTemplateParameterResource> Templates { get; set; }
      Dictionary<String, Dictionary<String, PropertyValueResource>> Variables { get; set; }
    }
  }
  TentacleUpdateBehavior
  {
      NeverUpdate = 0
      Update = 1
  }
  class TentacleUpgradeSupportedAttribute
    _Attribute
    Attribute
  {
    .ctor()
  }
  abstract class TestAzureAccount
  {
    static System.String Name
    abstract class Arguments
    {
      static System.String AccountId
    }
  }
  abstract class TestEmail
  {
    static System.String Name
    abstract class Arguments
    {
      static System.String EmailAddress
    }
  }
  class TrimAttribute
    _Attribute
    Attribute
  {
    .ctor()
  }
  abstract class UpdateCalamari
  {
    static System.String Name
    abstract class Arguments
    {
      static System.String MachineIds
    }
  }
  abstract class Upgrade
  {
    static System.String Name
    abstract class Arguments
    {
      static System.String EnvironmentId
      static System.String MachineIds
    }
  }
  class UserPermissionRestriction
  {
    .ctor()
    Octopus.Client.Model.ReferenceCollection RestrictedToEnvironmentIds { get; set; }
    Octopus.Client.Model.ReferenceCollection RestrictedToProjectGroupIds { get; set; }
    Octopus.Client.Model.ReferenceCollection RestrictedToProjectIds { get; set; }
    Octopus.Client.Model.ReferenceCollection RestrictedToTenantIds { get; set; }
    static IEqualityComparer<UserPermissionRestriction> UserPermissionRestrictionComparer { get; }
    String ToString()
    class Comparer
      IEqualityComparer<UserPermissionRestriction>
    {
      .ctor()
      Boolean Equals(Octopus.Client.Model.UserPermissionRestriction, Octopus.Client.Model.UserPermissionRestriction)
      Int32 GetHashCode(Octopus.Client.Model.UserPermissionRestriction)
    }
  }
  class UserPermissionSetResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    Dictionary<Permission, List<UserPermissionRestriction>> Permissions { get; set; }
    List<ProjectedTeamReferenceDataItem> Teams { get; set; }
  }
  class UserResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    String DisplayName { get; set; }
    String EmailAddress { get; set; }
    Boolean IsActive { get; set; }
    Boolean IsRequestor { get; set; }
    Boolean IsService { get; set; }
    String Password { get; set; }
    String Username { get; set; }
  }
  class UserRoleResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.INamedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    Boolean CanBeDeleted { get; set; }
    String Description { get; set; }
    List<Permission> GrantedPermissions { get; set; }
    String Name { get; set; }
    List<String> PermissionDescriptions { get; set; }
    List<String> SupportedRestrictions { get; set; }
  }
  class VariablePromptOptions
  {
    .ctor()
    String Description { get; set; }
    String Label { get; set; }
    Boolean Required { get; set; }
    Octopus.Client.Model.VariablePromptOptions Clone()
  }
  class VariableResource
  {
    .ctor()
    String Description { get; set; }
    String Id { get; set; }
    Boolean IsEditable { get; set; }
    Boolean IsSensitive { get; set; }
    String Name { get; set; }
    Octopus.Client.Model.VariablePromptOptions Prompt { get; set; }
    Octopus.Client.Model.ScopeSpecification Scope { get; set; }
    Octopus.Client.Model.VariableType Type { get; set; }
    String Value { get; set; }
  }
  class VariableScopeValues
    Octopus.Client.Model.IVariableScopeValues
  {
    .ctor()
    List<ReferenceDataItem> Actions { get; set; }
    List<ReferenceDataItem> Channels { get; set; }
    List<ReferenceDataItem> Environments { get; set; }
    List<ReferenceDataItem> Machines { get; set; }
    List<ReferenceDataItem> Roles { get; set; }
    List<ReferenceDataItem> TenantTags { get; set; }
  }
  VariableSetContentType
  {
      Variables = 0
      ScriptModule = 1
  }
  class VariableSetResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    String OwnerId { get; set; }
    Octopus.Client.Model.VariableScopeValues ScopeValues { get; set; }
    IList<VariableResource> Variables { get; set; }
    Int32 Version { get; set; }
    Octopus.Client.Model.VariableSetResource AddOrUpdateVariableValue(String, String)
    Octopus.Client.Model.VariableSetResource AddOrUpdateVariableValue(String, String, String)
    Octopus.Client.Model.VariableSetResource AddOrUpdateVariableValue(String, String, Octopus.Client.Model.ScopeSpecification)
    Octopus.Client.Model.VariableSetResource AddOrUpdateVariableValue(String, String, Octopus.Client.Model.ScopeSpecification, Boolean)
    Octopus.Client.Model.VariableSetResource AddOrUpdateVariableValue(String, String, Octopus.Client.Model.ScopeSpecification, Boolean, String)
  }
  class VariableTemplateContainerEditor`1
    Octopus.Client.Model.IVariableTemplateContainerEditor<TContainer>
  {
    .ctor(Octopus.Client.Model.TContainer)
    Octopus.Client.Model.TContainer AddOrUpdateMultiLineTextTemplate(String, String)
    Octopus.Client.Model.TContainer AddOrUpdateMultiLineTextTemplate(String, String, String, String)
    Octopus.Client.Model.TContainer AddOrUpdateSelectTemplate(String, String, IDictionary<String, String>)
    Octopus.Client.Model.TContainer AddOrUpdateSelectTemplate(String, String, IDictionary<String, String>, String, String)
    Octopus.Client.Model.TContainer AddOrUpdateSensitiveTemplate(String, String)
    Octopus.Client.Model.TContainer AddOrUpdateSensitiveTemplate(String, String, String, String)
    Octopus.Client.Model.TContainer AddOrUpdateSingleLineTextTemplate(String, String)
    Octopus.Client.Model.TContainer AddOrUpdateSingleLineTextTemplate(String, String, String, String)
    Octopus.Client.Model.TContainer AddOrUpdateVariableTemplate(String, String, IDictionary<String, String>)
    Octopus.Client.Model.TContainer AddOrUpdateVariableTemplate(String, String, IDictionary<String, String>, String, String)
    Octopus.Client.Model.TContainer Clear()
  }
  VariableType
  {
      String = 0
      Sensitive = 1
      Certificate = 2
      AmazonWebServicesAccount = 3
  }
  class VersioningStrategyResource
  {
    .ctor()
    String DonorPackageStepId { get; set; }
    String Template { get; set; }
  }
  class WebPortalConfigResource
    Octopus.Client.Extensibility.IResource
  {
    .ctor()
    String Id { get; set; }
    Octopus.Client.Extensibility.LinkCollection Links { get; set; }
    Octopus.Client.Model.WebPortalSecurityResource Security { get; set; }
  }
  class WebPortalSecurityResource
  {
    .ctor()
    Boolean ContentSecurityPolicyEnabled { get; set; }
    String CorsWhitelist { get; set; }
    Boolean HttpStrictTransportSecurityEnabled { get; set; }
    Int64 HttpStrictTransportSecurityMaxAge { get; set; }
    String ReferrerPolicy { get; set; }
    Octopus.Client.Model.XOptionsResource XOptions { get; set; }
  }
  class XOptionsResource
  {
    static System.String XFrameAllowFromDescription
    .ctor()
    String XFrameOptionAllowFrom { get; set; }
  }
}
Octopus.Client.Model.Accounts
{
  abstract class AccountResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.INamedResource
    Octopus.Client.Model.Resource
  {
    Octopus.Client.Model.Accounts.AccountType AccountType { get; }
    String Description { get; set; }
    Octopus.Client.Model.ReferenceCollection EnvironmentIds { get; set; }
    String Name { get; set; }
    Octopus.Client.Model.TenantedDeploymentMode TenantedDeploymentParticipation { get; set; }
    Octopus.Client.Model.ReferenceCollection TenantIds { get; set; }
    Octopus.Client.Model.ReferenceCollection TenantTags { get; set; }
  }
  AccountType
  {
      None = 0
      UsernamePassword = 1
      SshKeyPair = 2
      AzureSubscription = 3
      AzureServicePrincipal = 4
      AmazonWebServicesAccount = 5
      AmazonWebServicesRoleAccount = 6
  }
  class AmazonWebServicesAccountResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.INamedResource
    Octopus.Client.Model.Accounts.AccountResource
  {
    .ctor()
    String AccessKey { get; set; }
    Octopus.Client.Model.Accounts.AccountType AccountType { get; }
    Octopus.Client.Model.SensitiveValue SecretKey { get; set; }
  }
  class AmazonWebServicesRoleAccountResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.INamedResource
    Octopus.Client.Model.Accounts.AccountResource
  {
    .ctor()
    Octopus.Client.Model.Accounts.AccountType AccountType { get; }
  }
  class AzureServicePrincipalAccountResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.INamedResource
    Octopus.Client.Model.Accounts.AccountResource
  {
    .ctor()
    Octopus.Client.Model.Accounts.AccountType AccountType { get; }
    String ActiveDirectoryEndpointBaseUri { get; set; }
    String AzureEnvironment { get; set; }
    String ClientId { get; set; }
    Octopus.Client.Model.SensitiveValue Password { get; set; }
    String ResourceManagementEndpointBaseUri { get; set; }
    String SubscriptionNumber { get; set; }
    String TenantId { get; set; }
  }
  class AzureSubscriptionAccountResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.INamedResource
    Octopus.Client.Model.Accounts.AccountResource
  {
    .ctor()
    Octopus.Client.Model.Accounts.AccountType AccountType { get; }
    String AzureEnvironment { get; set; }
    Octopus.Client.Model.SensitiveValue CertificateBytes { get; set; }
    String CertificateThumbprint { get; set; }
    String ServiceManagementEndpointBaseUri { get; set; }
    String SubscriptionNumber { get; set; }
  }
  class SshKeyPairAccountResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.INamedResource
    Octopus.Client.Model.Accounts.AccountResource
  {
    .ctor()
    Octopus.Client.Model.Accounts.AccountType AccountType { get; }
    Octopus.Client.Model.SensitiveValue PrivateKeyFile { get; set; }
    Octopus.Client.Model.SensitiveValue PrivateKeyPassphrase { get; set; }
    String Username { get; set; }
  }
  class SupportedAccountTypesAttribute
    _Attribute
    Attribute
  {
    .ctor(Octopus.Client.Model.Accounts.AccountType[])
    Octopus.Client.Model.Accounts.AccountType[] AccountTypes { get; }
  }
  class UsernamePasswordAccountResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.INamedResource
    Octopus.Client.Model.Accounts.AccountResource
  {
    .ctor()
    Octopus.Client.Model.Accounts.AccountType AccountType { get; }
    Octopus.Client.Model.SensitiveValue Password { get; set; }
    String Username { get; set; }
  }
}
Octopus.Client.Model.DeploymentProcess
{
  class InlineScriptAction
    Octopus.Client.Model.DeploymentProcess.ScriptAction
  {
    .ctor(Octopus.Client.Model.ScriptSyntax, String)
    Octopus.Client.Model.DeploymentProcess.ScriptSource Source { get; }
    Octopus.Client.Model.ScriptSyntax Syntax { get; }
    String GetScriptBody()
  }
  class InlineScriptActionFromFileInAssembly
    Octopus.Client.Model.DeploymentProcess.ScriptAction
  {
    .ctor(String, Assembly)
    Assembly ResourceAssembly { get; }
    String ResourceName { get; }
    Octopus.Client.Model.DeploymentProcess.ScriptSource Source { get; }
    Octopus.Client.Model.ScriptSyntax Syntax { get; }
    String GetScriptBody()
  }
  abstract class ScriptAction
  {
    Octopus.Client.Model.DeploymentProcess.ScriptSource Source { get; }
    Octopus.Client.Model.ScriptSyntax Syntax { get; }
    static Octopus.Client.Model.DeploymentProcess.InlineScriptAction InlineScript(Octopus.Client.Model.ScriptSyntax, String)
    static Octopus.Client.Model.DeploymentProcess.InlineScriptActionFromFileInAssembly InlineScriptFromFileInAssembly(String, Assembly)
  }
  class ScriptActionFromFileInPackage
    Octopus.Client.Model.DeploymentProcess.ScriptAction
  {
    .ctor(Octopus.Client.Model.PackageResource, String)
    String PackageFeedId { get; }
    String PackageId { get; }
    String ScriptFilePath { get; }
    Octopus.Client.Model.DeploymentProcess.ScriptSource Source { get; }
    Octopus.Client.Model.ScriptSyntax Syntax { get; }
  }
  ScriptSource
  {
      Inline = 0
      Package = 1
  }
  ScriptTarget
  {
      Server = 0
      Target = 1
  }
}
Octopus.Client.Model.Endpoints
{
  abstract class AgentlessEndpointResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Endpoints.EndpointResource
  {
  }
  class AzureWebAppEndpointResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Endpoints.AgentlessEndpointResource
  {
    .ctor()
    String AccountId { get; set; }
    Octopus.Client.Model.CommunicationStyle CommunicationStyle { get; }
    String WebAppName { get; set; }
    String WebSpaceName { get; set; }
  }
  abstract class CalamariDotNetCorePlatforms
  {
    static System.String Linux64
    static System.String Osx64
  }
  class CloudRegionEndpointResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Endpoints.AgentlessEndpointResource
  {
    .ctor()
    Octopus.Client.Model.CommunicationStyle CommunicationStyle { get; }
  }
  class CloudServiceEndpointResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Endpoints.AgentlessEndpointResource
  {
    .ctor()
    String AccountId { get; set; }
    String CloudServiceName { get; set; }
    Octopus.Client.Model.CommunicationStyle CommunicationStyle { get; }
    String Slot { get; set; }
    String StorageAccountName { get; set; }
    Boolean SwapIfPossible { get; set; }
    Boolean UseCurrentInstanceCount { get; set; }
  }
  abstract class EndpointResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    Octopus.Client.Model.CommunicationStyle CommunicationStyle { get; }
  }
  class ListeningTentacleEndpointResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Endpoints.TentacleEndpointResource
  {
    .ctor()
    Octopus.Client.Model.CommunicationStyle CommunicationStyle { get; }
    String ProxyId { get; set; }
    String Uri { get; set; }
  }
  class OfflineDropEndpointResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Endpoints.AgentlessEndpointResource
  {
    .ctor()
    String ApplicationsDirectory { get; set; }
    Octopus.Client.Model.CommunicationStyle CommunicationStyle { get; }
    String DropFolderPath { get; set; }
    String OctopusWorkingDirectory { get; set; }
    Octopus.Client.Model.SensitiveValue SensitiveVariablesEncryptionPassword { get; set; }
  }
  class PollingTentacleEndpointResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Endpoints.TentacleEndpointResource
  {
    .ctor()
    Octopus.Client.Model.CommunicationStyle CommunicationStyle { get; }
    String Uri { get; set; }
  }
  class SshEndpointResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Endpoints.AgentlessEndpointResource
  {
    .ctor()
    String AccountId { get; set; }
    Octopus.Client.Model.CommunicationStyle CommunicationStyle { get; }
    String DotNetCorePlatform { get; set; }
    String Fingerprint { get; set; }
    String Host { get; set; }
    Int32 Port { get; set; }
    String ProxyId { get; set; }
    String Uri { get; }
    abstract class CalamariDotNetCorePlatforms
    {
      static System.String Linux64
      static System.String Osx64
    }
  }
  class TentacleDetailsResource
  {
    .ctor()
    Boolean UpgradeLocked { get; set; }
    Boolean UpgradeRequired { get; set; }
    Boolean UpgradeSuggested { get; set; }
    String Version { get; set; }
  }
  abstract class TentacleEndpointResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Endpoints.EndpointResource
  {
    Octopus.Client.Model.Endpoints.TentacleDetailsResource TentacleVersionDetails { get; set; }
    String Thumbprint { get; set; }
  }
}
Octopus.Client.Model.Forms
{
  class Button
  {
    .ctor(String, String)
    String Text { get; }
    Object Value { get; }
  }
  class Checkbox
    Octopus.Client.Model.Forms.Control
  {
    .ctor(String)
    String Text { get; }
    Object CoerceValue(String)
    Type GetNativeValueType()
  }
  abstract class Control
  {
    Object CoerceValue(String)
    Type GetNativeValueType()
  }
  class Form
  {
    .ctor()
    .ctor(IEnumerable<FormElement>, IDictionary<String, String>)
    List<FormElement> Elements { get; }
    Dictionary<String, String> Values { get; }
  }
  class FormElement
  {
    .ctor(String, Octopus.Client.Model.Forms.Control, Boolean)
    Octopus.Client.Model.Forms.Control Control { get; }
    Boolean IsValueRequired { get; }
    String Name { get; }
  }
  abstract class FormExtensions
  {
    static void AddElement(Octopus.Client.Model.Forms.Form, String, Octopus.Client.Model.Forms.Control, String, Boolean)
    static Object GetCoercedValue(Octopus.Client.Model.Forms.Form, String)
    static void SetValue(Octopus.Client.Model.Forms.Form, String, String)
    static void UpdateValues(Octopus.Client.Model.Forms.Form, IDictionary<String, String>)
    static IList<String> Validate(Octopus.Client.Model.Forms.Form)
  }
  class Paragraph
    Octopus.Client.Model.Forms.Control
  {
    .ctor(String)
    String Text { get; }
  }
  class SubmitButtonGroup
    Octopus.Client.Model.Forms.Control
  {
    .ctor(List<Button>)
    List<Button> Buttons { get; }
    Object CoerceValue(String)
    Type GetNativeValueType()
  }
  class TextArea
    Octopus.Client.Model.Forms.Control
  {
    .ctor(String)
    String Label { get; }
    Object CoerceValue(String)
    Type GetNativeValueType()
  }
  class VariableValue
    Octopus.Client.Model.Forms.Control
  {
    .ctor(String, String, String, Boolean)
    String Description { get; }
    Boolean IsSecure { get; }
    String Label { get; }
    String Name { get; }
    Object CoerceValue(String)
    Type GetNativeValueType()
  }
}
Octopus.Client.Model.Migrations
{
  class MigrationImportResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    Boolean DeletePackageOnCompletion { get; set; }
    String FailureCallbackUri { get; set; }
    Boolean IsDryRun { get; set; }
    Boolean IsEncryptedPackage { get; set; }
    Boolean OverwriteExisting { get; set; }
    String PackageId { get; set; }
    String PackageVersion { get; set; }
    String Password { get; set; }
    String SuccessCallbackUri { get; set; }
    String TaskId { get; set; }
  }
  class MigrationPartialExportResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    String DestinationApiKey { get; set; }
    String DestinationPackageFeed { get; set; }
    Boolean EncryptPackage { get; set; }
    String FailureCallbackUri { get; set; }
    Boolean IgnoreCertificates { get; set; }
    Boolean IgnoreDeployments { get; set; }
    Boolean IgnoreMachines { get; set; }
    Boolean IgnoreTenants { get; set; }
    Boolean IncludeTaskLogs { get; set; }
    String PackageId { get; set; }
    String PackageVersion { get; set; }
    String Password { get; set; }
    List<String> Projects { get; set; }
    String SuccessCallbackUri { get; set; }
    String TaskId { get; set; }
  }
}
Octopus.Client.Model.Triggers
{
  class AutoDeployActionResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Triggers.TriggerActionResource
  {
    .ctor()
    Octopus.Client.Model.Triggers.TriggerActionType ActionType { get; }
    Boolean ShouldRedeployWhenMachineHasBeenDeployedTo { get; set; }
  }
  class MachineFilterResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Triggers.TriggerFilterResource
  {
    .ctor()
    Octopus.Client.Model.ReferenceCollection EnvironmentIds { get; set; }
    Octopus.Client.Model.ReferenceCollection EventCategories { get; set; }
    Octopus.Client.Model.ReferenceCollection EventGroups { get; set; }
    Octopus.Client.Model.Triggers.TriggerFilterType FilterType { get; }
    Octopus.Client.Model.ReferenceCollection Roles { get; set; }
  }
  abstract class TriggerActionResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    Octopus.Client.Model.Triggers.TriggerActionType ActionType { get; }
  }
  TriggerActionType
  {
      AutoDeploy = 0
  }
  abstract class TriggerFilterResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    Octopus.Client.Model.Triggers.TriggerFilterType FilterType { get; }
  }
  TriggerFilterType
  {
      MachineFilter = 0
  }
}
Octopus.Client.Model.Versioning
{
  interface IVersionComparer
    IEqualityComparer<StrictSemanticVersion>
    IComparer<StrictSemanticVersion>
  {
  }
  class StrictSemanticVersion
    IFormattable
    IComparable
    IComparable<StrictSemanticVersion>
    IEquatable<StrictSemanticVersion>
  {
    .ctor(Octopus.Client.Model.Versioning.StrictSemanticVersion)
    .ctor(Int32, Int32, Int32)
    .ctor(Int32, Int32, Int32, String)
    .ctor(Int32, Int32, Int32, String, String)
    .ctor(Int32, Int32, Int32, IEnumerable<String>, String)
    Boolean HasMetadata { get; }
    Boolean IsPrerelease { get; }
    Int32 Major { get; }
    String Metadata { get; }
    Int32 Minor { get; }
    Int32 Patch { get; }
    String Release { get; }
    IEnumerable<String> ReleaseLabels { get; }
    Int32 CompareTo(Object)
    Int32 CompareTo(Octopus.Client.Model.Versioning.StrictSemanticVersion)
    Int32 CompareTo(Octopus.Client.Model.Versioning.StrictSemanticVersion, Octopus.Client.Model.Versioning.VersionComparison)
    Boolean Equals(Object)
    Boolean Equals(Octopus.Client.Model.Versioning.StrictSemanticVersion)
    Boolean Equals(Octopus.Client.Model.Versioning.StrictSemanticVersion, Octopus.Client.Model.Versioning.VersionComparison)
    Int32 GetHashCode()
    static Octopus.Client.Model.Versioning.StrictSemanticVersion Parse(String)
    String ToNormalizedString()
    String ToString()
    String ToString(String, IFormatProvider)
    static Boolean TryParse(String, Octopus.Client.Model.Versioning.StrictSemanticVersion&)
  }
  class VersionComparer
    Octopus.Client.Model.Versioning.IVersionComparer
    IEqualityComparer<StrictSemanticVersion>
    IComparer<StrictSemanticVersion>
  {
    static Octopus.Client.Model.Versioning.IVersionComparer Default
    static Octopus.Client.Model.Versioning.IVersionComparer Version
    static Octopus.Client.Model.Versioning.IVersionComparer VersionRelease
    static Octopus.Client.Model.Versioning.IVersionComparer VersionReleaseMetadata
    .ctor()
    .ctor(Octopus.Client.Model.Versioning.VersionComparison)
    static Int32 Compare(Octopus.Client.Model.Versioning.StrictSemanticVersion, Octopus.Client.Model.Versioning.StrictSemanticVersion, Octopus.Client.Model.Versioning.VersionComparison)
    Int32 Compare(Octopus.Client.Model.Versioning.StrictSemanticVersion, Octopus.Client.Model.Versioning.StrictSemanticVersion)
    Boolean Equals(Octopus.Client.Model.Versioning.StrictSemanticVersion, Octopus.Client.Model.Versioning.StrictSemanticVersion)
    Int32 GetHashCode(Octopus.Client.Model.Versioning.StrictSemanticVersion)
  }
  VersionComparison
  {
      Default = 0
      Version = 1
      VersionRelease = 2
      VersionReleaseMetadata = 3
  }
  class VersionFormatter
    IFormatProvider
    ICustomFormatter
  {
    .ctor()
    String Format(String, Object, IFormatProvider)
    Object GetFormat(Type)
  }
}
Octopus.Client.Operations
{
  interface IRegisterMachineOperation
  {
    Boolean AllowOverwrite { get; set; }
    Octopus.Client.Model.CommunicationStyle CommunicationStyle { get; set; }
    String[] EnvironmentNames { get; set; }
    String MachineName { get; set; }
    String MachinePolicy { get; set; }
    String ProxyName { get; set; }
    String[] Roles { get; set; }
    Uri SubscriptionId { get; set; }
    Octopus.Client.Model.TenantedDeploymentMode TenantedDeploymentParticipation { get; set; }
    String[] Tenants { get; set; }
    String[] TenantTags { get; set; }
    String TentacleHostname { get; set; }
    Int32 TentaclePort { get; set; }
    String TentacleThumbprint { get; set; }
    void Execute(Octopus.Client.OctopusServerEndpoint)
    void Execute(Octopus.Client.OctopusRepository)
    void Execute(Octopus.Client.IOctopusRepository)
    Task ExecuteAsync(Octopus.Client.OctopusServerEndpoint)
    Task ExecuteAsync(Octopus.Client.OctopusAsyncRepository)
    Task ExecuteAsync(Octopus.Client.IOctopusAsyncRepository)
  }
  class RegisterMachineOperation
    Octopus.Client.Operations.IRegisterMachineOperation
  {
    .ctor()
    .ctor(Octopus.Client.IOctopusClientFactory)
    Boolean AllowOverwrite { get; set; }
    Octopus.Client.Model.CommunicationStyle CommunicationStyle { get; set; }
    String[] EnvironmentNames { get; set; }
    String MachineName { get; set; }
    String MachinePolicy { get; set; }
    String ProxyName { get; set; }
    String[] Roles { get; set; }
    Uri SubscriptionId { get; set; }
    Octopus.Client.Model.TenantedDeploymentMode TenantedDeploymentParticipation { get; set; }
    String[] Tenants { get; set; }
    String[] TenantTags { get; set; }
    String TentacleHostname { get; set; }
    Int32 TentaclePort { get; set; }
    String TentacleThumbprint { get; set; }
    void Execute(Octopus.Client.OctopusServerEndpoint)
    void Execute(Octopus.Client.OctopusRepository)
    void Execute(Octopus.Client.IOctopusRepository)
    Task ExecuteAsync(Octopus.Client.OctopusServerEndpoint)
    Task ExecuteAsync(Octopus.Client.OctopusAsyncRepository)
    Task ExecuteAsync(Octopus.Client.IOctopusAsyncRepository)
  }
}
Octopus.Client.Repositories
{
  interface IAccountRepository
    Octopus.Client.Repositories.ICreate<AccountResource>
    Octopus.Client.Repositories.IModify<AccountResource>
    Octopus.Client.Repositories.IDelete<AccountResource>
    Octopus.Client.Repositories.IGet<AccountResource>
    Octopus.Client.Repositories.IFindByName<AccountResource>
    Octopus.Client.Repositories.IPaginate<AccountResource>
  {
  }
  interface IActionTemplateRepository
    Octopus.Client.Repositories.ICreate<ActionTemplateResource>
    Octopus.Client.Repositories.IModify<ActionTemplateResource>
    Octopus.Client.Repositories.IDelete<ActionTemplateResource>
    Octopus.Client.Repositories.IGet<ActionTemplateResource>
    Octopus.Client.Repositories.IFindByName<ActionTemplateResource>
    Octopus.Client.Repositories.IPaginate<ActionTemplateResource>
    Octopus.Client.Repositories.IGetAll<ActionTemplateResource>
  {
    Octopus.Client.Model.ActionTemplateResource GetVersion(Octopus.Client.Model.ActionTemplateResource, Int32)
    List<ActionTemplateSearchResource> Search()
    void SetLogo(Octopus.Client.Model.ActionTemplateResource, String, Stream)
    Octopus.Client.Model.ActionUpdateResultResource[] UpdateActions(Octopus.Client.Model.ActionTemplateResource, Octopus.Client.Model.ActionsUpdateResource)
  }
  interface IArtifactRepository
    Octopus.Client.Repositories.IPaginate<ArtifactResource>
    Octopus.Client.Repositories.IGet<ArtifactResource>
    Octopus.Client.Repositories.ICreate<ArtifactResource>
    Octopus.Client.Repositories.IModify<ArtifactResource>
    Octopus.Client.Repositories.IDelete<ArtifactResource>
  {
    Octopus.Client.Model.ResourceCollection<ArtifactResource> FindRegarding(Octopus.Client.Extensibility.IResource)
    Stream GetContent(Octopus.Client.Model.ArtifactResource)
    void PutContent(Octopus.Client.Model.ArtifactResource, Stream)
  }
  interface IBackupRepository
  {
    Octopus.Client.Model.BackupConfigurationResource GetConfiguration()
    Octopus.Client.Model.BackupConfigurationResource ModifyConfiguration(Octopus.Client.Model.BackupConfigurationResource)
  }
  interface IBuiltInPackageRepositoryRepository
  {
    void DeletePackage(Octopus.Client.Model.PackageResource)
    void DeletePackages(IReadOnlyList<PackageResource>)
    Octopus.Client.Model.ResourceCollection<PackageFromBuiltInFeedResource> LatestPackages(Int32, Int32)
    Octopus.Client.Model.ResourceCollection<PackageFromBuiltInFeedResource> ListPackages(String, Int32, Int32)
    Octopus.Client.Model.PackageFromBuiltInFeedResource PushPackage(String, Stream, Boolean)
  }
  interface ICertificateConfigurationRepository
    Octopus.Client.Repositories.IGet<CertificateConfigurationResource>
    Octopus.Client.Repositories.IFindByName<CertificateConfigurationResource>
    Octopus.Client.Repositories.IPaginate<CertificateConfigurationResource>
  {
    Octopus.Client.Model.CertificateConfigurationResource GetOctopusCertificate()
  }
  interface ICertificateRepository
    Octopus.Client.Repositories.IGet<CertificateResource>
    Octopus.Client.Repositories.IFindByName<CertificateResource>
    Octopus.Client.Repositories.IPaginate<CertificateResource>
    Octopus.Client.Repositories.ICreate<CertificateResource>
    Octopus.Client.Repositories.IModify<CertificateResource>
    Octopus.Client.Repositories.IDelete<CertificateResource>
  {
    void Archive(Octopus.Client.Model.CertificateResource)
    Stream Export(Octopus.Client.Model.CertificateResource, Nullable<CertificateFormat>, String, Boolean)
    Octopus.Client.Model.CertificateConfigurationResource GetOctopusCertificate()
    Octopus.Client.Model.CertificateResource Replace(Octopus.Client.Model.CertificateResource, String, String)
    void UnArchive(Octopus.Client.Model.CertificateResource)
  }
  interface IChannelRepository
    Octopus.Client.Repositories.ICreate<ChannelResource>
    Octopus.Client.Repositories.IModify<ChannelResource>
    Octopus.Client.Repositories.IGet<ChannelResource>
    Octopus.Client.Repositories.IDelete<ChannelResource>
    Octopus.Client.Repositories.IPaginate<ChannelResource>
  {
    Octopus.Client.Editors.ChannelEditor CreateOrModify(Octopus.Client.Model.ProjectResource, String)
    Octopus.Client.Editors.ChannelEditor CreateOrModify(Octopus.Client.Model.ProjectResource, String, String)
    Octopus.Client.Model.ChannelResource FindByName(Octopus.Client.Model.ProjectResource, String)
  }
  interface ICommunityActionTemplateRepository
    Octopus.Client.Repositories.IGet<CommunityActionTemplateResource>
  {
    Octopus.Client.Model.ActionTemplateResource GetInstalledTemplate(Octopus.Client.Model.CommunityActionTemplateResource)
    void Install(Octopus.Client.Model.CommunityActionTemplateResource)
    void UpdateInstallation(Octopus.Client.Model.CommunityActionTemplateResource)
  }
  interface IConfigurationRepository
  {
    Octopus.Client.Repositories.T Get()
    Octopus.Client.Repositories.T Modify(Octopus.Client.Repositories.T)
  }
  interface ICreate`1
  {
    Octopus.Client.Repositories.TResource Create(Octopus.Client.Repositories.TResource, Object)
  }
  interface IDashboardConfigurationRepository
  {
    Octopus.Client.Model.DashboardConfigurationResource GetDashboardConfiguration()
    Octopus.Client.Model.DashboardConfigurationResource ModifyDashboardConfiguration(Octopus.Client.Model.DashboardConfigurationResource)
  }
  interface IDashboardRepository
  {
    Octopus.Client.Model.DashboardResource GetDashboard()
    Octopus.Client.Model.DashboardResource GetDynamicDashboard(String[], String[])
  }
  interface IDefectsRepository
  {
    Octopus.Client.Model.ResourceCollection<DefectResource> GetDefects(Octopus.Client.Model.ReleaseResource)
    void RaiseDefect(Octopus.Client.Model.ReleaseResource, String)
    void ResolveDefect(Octopus.Client.Model.ReleaseResource)
  }
  interface IDelete`1
  {
    void Delete(Octopus.Client.Repositories.TResource)
  }
  interface IDeploymentProcessRepository
    Octopus.Client.Repositories.IGet<DeploymentProcessResource>
    Octopus.Client.Repositories.IModify<DeploymentProcessResource>
  {
    Octopus.Client.Model.ReleaseTemplateResource GetTemplate(Octopus.Client.Model.DeploymentProcessResource, Octopus.Client.Model.ChannelResource)
  }
  interface IDeploymentRepository
    Octopus.Client.Repositories.IGet<DeploymentResource>
    Octopus.Client.Repositories.ICreate<DeploymentResource>
    Octopus.Client.Repositories.IPaginate<DeploymentResource>
  {
    Octopus.Client.Model.ResourceCollection<DeploymentResource> FindAll(String[], String[], Int32, Nullable<Int32>)
    Octopus.Client.Model.ResourceCollection<DeploymentResource> FindBy(String[], String[], Int32, Nullable<Int32>)
    Octopus.Client.Model.TaskResource GetTask(Octopus.Client.Model.DeploymentResource)
    void Paginate(String[], String[], Func<ResourceCollection<DeploymentResource>, Boolean>)
    void Paginate(String[], String[], String[], Func<ResourceCollection<DeploymentResource>, Boolean>)
  }
  interface IEnvironmentRepository
    Octopus.Client.Repositories.IFindByName<EnvironmentResource>
    Octopus.Client.Repositories.IPaginate<EnvironmentResource>
    Octopus.Client.Repositories.IGet<EnvironmentResource>
    Octopus.Client.Repositories.ICreate<EnvironmentResource>
    Octopus.Client.Repositories.IModify<EnvironmentResource>
    Octopus.Client.Repositories.IDelete<EnvironmentResource>
    Octopus.Client.Repositories.IGetAll<EnvironmentResource>
  {
    Octopus.Client.Editors.EnvironmentEditor CreateOrModify(String)
    Octopus.Client.Editors.EnvironmentEditor CreateOrModify(String, String)
    List<MachineResource> GetMachines(Octopus.Client.Model.EnvironmentResource, Nullable<Int32>, Nullable<Int32>, String, String, Nullable<Boolean>, String, String, String, String)
    void Sort(String[])
    Octopus.Client.Model.EnvironmentsSummaryResource Summary(String, String, String, String, Nullable<Boolean>, String, String, String, String, Nullable<Boolean>)
  }
  interface IEventRepository
    Octopus.Client.Repositories.IGet<EventResource>
  {
    Octopus.Client.Model.ResourceCollection<EventResource> List(Int32, String, String, Boolean)
    Octopus.Client.Model.ResourceCollection<EventResource> List(Int32, Nullable<Int32>, String, String, String, String, Boolean, String, String, String, String, String, String, String, String, Nullable<Int64>, Nullable<Int64>, String)
  }
  interface IFeaturesConfigurationRepository
  {
    Octopus.Client.Model.FeaturesConfigurationResource GetFeaturesConfiguration()
    Octopus.Client.Model.FeaturesConfigurationResource ModifyFeaturesConfiguration(Octopus.Client.Model.FeaturesConfigurationResource)
  }
  interface IFeedRepository
    Octopus.Client.Repositories.ICreate<FeedResource>
    Octopus.Client.Repositories.IModify<FeedResource>
    Octopus.Client.Repositories.IDelete<FeedResource>
    Octopus.Client.Repositories.IGet<FeedResource>
    Octopus.Client.Repositories.IFindByName<FeedResource>
    Octopus.Client.Repositories.IPaginate<FeedResource>
  {
    List<PackageResource> GetVersions(Octopus.Client.Model.FeedResource, String[])
  }
  interface IFindByName`1
    Octopus.Client.Repositories.IPaginate<TResource>
  {
    Octopus.Client.Repositories.TResource FindByName(String, String, Object)
    List<TResource> FindByNames(IEnumerable<String>, String, Object)
  }
  interface IGet`1
  {
    Octopus.Client.Repositories.TResource Get(String)
    List<TResource> Get(String[])
    Octopus.Client.Repositories.TResource Refresh(Octopus.Client.Repositories.TResource)
  }
  interface IGetAll`1
  {
    List<TResource> GetAll()
  }
  interface IInterruptionRepository
    Octopus.Client.Repositories.IGet<InterruptionResource>
  {
    Octopus.Client.Model.UserResource GetResponsibleUser(Octopus.Client.Model.InterruptionResource)
    Octopus.Client.Model.ResourceCollection<InterruptionResource> List(Int32, Nullable<Int32>, Boolean, String)
    void Submit(Octopus.Client.Model.InterruptionResource)
    void TakeResponsibility(Octopus.Client.Model.InterruptionResource)
  }
  interface ILibraryVariableSetRepository
    Octopus.Client.Repositories.ICreate<LibraryVariableSetResource>
    Octopus.Client.Repositories.IGet<LibraryVariableSetResource>
    Octopus.Client.Repositories.IModify<LibraryVariableSetResource>
    Octopus.Client.Repositories.IDelete<LibraryVariableSetResource>
    Octopus.Client.Repositories.IFindByName<LibraryVariableSetResource>
    Octopus.Client.Repositories.IPaginate<LibraryVariableSetResource>
  {
    Octopus.Client.Editors.LibraryVariableSetEditor CreateOrModify(String)
    Octopus.Client.Editors.LibraryVariableSetEditor CreateOrModify(String, String)
  }
  interface ILifecyclesRepository
    Octopus.Client.Repositories.IGet<LifecycleResource>
    Octopus.Client.Repositories.ICreate<LifecycleResource>
    Octopus.Client.Repositories.IModify<LifecycleResource>
    Octopus.Client.Repositories.IDelete<LifecycleResource>
    Octopus.Client.Repositories.IFindByName<LifecycleResource>
    Octopus.Client.Repositories.IPaginate<LifecycleResource>
  {
    Octopus.Client.Editors.LifecycleEditor CreateOrModify(String)
    Octopus.Client.Editors.LifecycleEditor CreateOrModify(String, String)
  }
  interface IMachinePolicyRepository
    Octopus.Client.Repositories.IFindByName<MachinePolicyResource>
    Octopus.Client.Repositories.IPaginate<MachinePolicyResource>
    Octopus.Client.Repositories.ICreate<MachinePolicyResource>
    Octopus.Client.Repositories.IModify<MachinePolicyResource>
    Octopus.Client.Repositories.IGet<MachinePolicyResource>
    Octopus.Client.Repositories.IDelete<MachinePolicyResource>
  {
  }
  interface IMachineRepository
    Octopus.Client.Repositories.IFindByName<MachineResource>
    Octopus.Client.Repositories.IPaginate<MachineResource>
    Octopus.Client.Repositories.IGet<MachineResource>
    Octopus.Client.Repositories.ICreate<MachineResource>
    Octopus.Client.Repositories.IModify<MachineResource>
    Octopus.Client.Repositories.IDelete<MachineResource>
  {
    Octopus.Client.Editors.MachineEditor CreateOrModify(String, Octopus.Client.Model.Endpoints.EndpointResource, Octopus.Client.Model.EnvironmentResource[], String[], Octopus.Client.Model.TenantResource[], Octopus.Client.Model.TagResource[], Nullable<TenantedDeploymentMode>)
    Octopus.Client.Editors.MachineEditor CreateOrModify(String, Octopus.Client.Model.Endpoints.EndpointResource, Octopus.Client.Model.EnvironmentResource[], String[])
    Octopus.Client.Model.MachineResource Discover(String, Int32, Nullable<DiscoverableEndpointType>)
    List<MachineResource> FindByThumbprint(String)
    Octopus.Client.Model.MachineConnectionStatus GetConnectionStatus(Octopus.Client.Model.MachineResource)
    IReadOnlyList<TaskResource> GetTasks(Octopus.Client.Model.MachineResource)
    IReadOnlyList<TaskResource> GetTasks(Octopus.Client.Model.MachineResource, Object)
    Octopus.Client.Model.ResourceCollection<MachineResource> List(Int32, Nullable<Int32>, String, String, String, String, Nullable<Boolean>, String, String, String, String, String)
  }
  interface IMachineRoleRepository
  {
    List<String> GetAllRoleNames()
  }
  interface IMigrationRepository
  {
    Octopus.Client.Model.Migrations.MigrationImportResource Import(Octopus.Client.Model.Migrations.MigrationImportResource)
    Octopus.Client.Model.Migrations.MigrationPartialExportResource PartialExport(Octopus.Client.Model.Migrations.MigrationPartialExportResource)
  }
  interface IModify`1
  {
    Octopus.Client.Repositories.TResource Modify(Octopus.Client.Repositories.TResource)
  }
  interface IOctopusServerNodeRepository
    Octopus.Client.Repositories.IModify<OctopusServerNodeResource>
    Octopus.Client.Repositories.IDelete<OctopusServerNodeResource>
    Octopus.Client.Repositories.IGet<OctopusServerNodeResource>
    Octopus.Client.Repositories.IFindByName<OctopusServerNodeResource>
    Octopus.Client.Repositories.IPaginate<OctopusServerNodeResource>
  {
  }
  interface IPaginate`1
  {
    List<TResource> FindAll(String, Object)
    List<TResource> FindMany(Func<TResource, Boolean>, String, Object)
    Octopus.Client.Repositories.TResource FindOne(Func<TResource, Boolean>, String, Object)
    void Paginate(Func<ResourceCollection<TResource>, Boolean>, String, Object)
  }
  interface IProjectGroupRepository
    Octopus.Client.Repositories.IFindByName<ProjectGroupResource>
    Octopus.Client.Repositories.IPaginate<ProjectGroupResource>
    Octopus.Client.Repositories.IGet<ProjectGroupResource>
    Octopus.Client.Repositories.ICreate<ProjectGroupResource>
    Octopus.Client.Repositories.IModify<ProjectGroupResource>
    Octopus.Client.Repositories.IDelete<ProjectGroupResource>
    Octopus.Client.Repositories.IGetAll<ProjectGroupResource>
  {
    Octopus.Client.Editors.ProjectGroupEditor CreateOrModify(String)
    Octopus.Client.Editors.ProjectGroupEditor CreateOrModify(String, String)
    List<ProjectResource> GetProjects(Octopus.Client.Model.ProjectGroupResource)
  }
  interface IProjectRepository
    Octopus.Client.Repositories.IFindByName<ProjectResource>
    Octopus.Client.Repositories.IPaginate<ProjectResource>
    Octopus.Client.Repositories.IGet<ProjectResource>
    Octopus.Client.Repositories.ICreate<ProjectResource>
    Octopus.Client.Repositories.IModify<ProjectResource>
    Octopus.Client.Repositories.IDelete<ProjectResource>
    Octopus.Client.Repositories.IGetAll<ProjectResource>
  {
    Octopus.Client.Editors.ProjectEditor CreateOrModify(String, Octopus.Client.Model.ProjectGroupResource, Octopus.Client.Model.LifecycleResource)
    Octopus.Client.Editors.ProjectEditor CreateOrModify(String, Octopus.Client.Model.ProjectGroupResource, Octopus.Client.Model.LifecycleResource, String)
    IReadOnlyList<ReleaseResource> GetAllReleases(Octopus.Client.Model.ProjectResource)
    Octopus.Client.Model.ResourceCollection<ChannelResource> GetChannels(Octopus.Client.Model.ProjectResource)
    Octopus.Client.Model.ProgressionResource GetProgression(Octopus.Client.Model.ProjectResource)
    Octopus.Client.Model.ReleaseResource GetReleaseByVersion(Octopus.Client.Model.ProjectResource, String)
    Octopus.Client.Model.ResourceCollection<ReleaseResource> GetReleases(Octopus.Client.Model.ProjectResource, Int32, Nullable<Int32>, String)
    Octopus.Client.Model.ResourceCollection<ProjectTriggerResource> GetTriggers(Octopus.Client.Model.ProjectResource)
    void SetLogo(Octopus.Client.Model.ProjectResource, String, Stream)
  }
  interface IProjectTriggerRepository
    Octopus.Client.Repositories.ICreate<ProjectTriggerResource>
    Octopus.Client.Repositories.IModify<ProjectTriggerResource>
    Octopus.Client.Repositories.IGet<ProjectTriggerResource>
    Octopus.Client.Repositories.IDelete<ProjectTriggerResource>
  {
    Octopus.Client.Editors.ProjectTriggerEditor CreateOrModify(Octopus.Client.Model.ProjectResource, String, Octopus.Client.Model.Triggers.TriggerFilterResource, Octopus.Client.Model.Triggers.TriggerActionResource)
    Octopus.Client.Model.ProjectTriggerResource FindByName(Octopus.Client.Model.ProjectResource, String)
  }
  interface IProxyRepository
    Octopus.Client.Repositories.IGet<ProxyResource>
    Octopus.Client.Repositories.ICreate<ProxyResource>
    Octopus.Client.Repositories.IModify<ProxyResource>
    Octopus.Client.Repositories.IDelete<ProxyResource>
    Octopus.Client.Repositories.IFindByName<ProxyResource>
    Octopus.Client.Repositories.IPaginate<ProxyResource>
  {
  }
  interface IReleaseRepository
    Octopus.Client.Repositories.IGet<ReleaseResource>
    Octopus.Client.Repositories.ICreate<ReleaseResource>
    Octopus.Client.Repositories.IPaginate<ReleaseResource>
    Octopus.Client.Repositories.IModify<ReleaseResource>
    Octopus.Client.Repositories.IDelete<ReleaseResource>
  {
    Octopus.Client.Model.ReleaseResource Create(Octopus.Client.Model.ReleaseResource, Boolean)
    Octopus.Client.Model.ResourceCollection<ArtifactResource> GetArtifacts(Octopus.Client.Model.ReleaseResource, Int32, Nullable<Int32>)
    Octopus.Client.Model.ResourceCollection<DeploymentResource> GetDeployments(Octopus.Client.Model.ReleaseResource, Int32, Nullable<Int32>)
    Octopus.Client.Model.DeploymentPreviewResource GetPreview(Octopus.Client.Model.DeploymentPromotionTarget)
    Octopus.Client.Model.DeploymentTemplateResource GetTemplate(Octopus.Client.Model.ReleaseResource)
    Octopus.Client.Model.ReleaseResource Modify(Octopus.Client.Model.ReleaseResource, Boolean)
    Octopus.Client.Model.ReleaseResource SnapshotVariables(Octopus.Client.Model.ReleaseResource)
  }
  interface IRetentionPolicyRepository
  {
    Octopus.Client.Model.TaskResource ApplyNow()
  }
  interface ISchedulerRepository
  {
    void Start()
    void Start(String)
    void Stop()
    void Stop(String)
    void Trigger(String)
  }
  interface IServerStatusRepository
  {
    Octopus.Client.Model.ServerStatusResource GetServerStatus()
    Octopus.Client.Model.SystemInfoResource GetSystemInfo(Octopus.Client.Model.ServerStatusResource)
  }
  interface ISubscriptionRepository
    Octopus.Client.Repositories.IFindByName<SubscriptionResource>
    Octopus.Client.Repositories.IPaginate<SubscriptionResource>
    Octopus.Client.Repositories.ICreate<SubscriptionResource>
    Octopus.Client.Repositories.IModify<SubscriptionResource>
    Octopus.Client.Repositories.IGet<SubscriptionResource>
    Octopus.Client.Repositories.IDelete<SubscriptionResource>
  {
    Octopus.Client.Editors.SubscriptionEditor CreateOrModify(String, Octopus.Client.Model.EventNotificationSubscription, Boolean)
  }
  interface ITagSetRepository
    Octopus.Client.Repositories.ICreate<TagSetResource>
    Octopus.Client.Repositories.IModify<TagSetResource>
    Octopus.Client.Repositories.IGet<TagSetResource>
    Octopus.Client.Repositories.IDelete<TagSetResource>
    Octopus.Client.Repositories.IFindByName<TagSetResource>
    Octopus.Client.Repositories.IPaginate<TagSetResource>
    Octopus.Client.Repositories.IGetAll<TagSetResource>
  {
    Octopus.Client.Editors.TagSetEditor CreateOrModify(String)
    Octopus.Client.Editors.TagSetEditor CreateOrModify(String, String)
    void Sort(String[])
  }
  interface ITaskRepository
    Octopus.Client.Repositories.IPaginate<TaskResource>
    Octopus.Client.Repositories.IGet<TaskResource>
    Octopus.Client.Repositories.ICreate<TaskResource>
  {
    void Cancel(Octopus.Client.Model.TaskResource)
    Octopus.Client.Model.TaskResource ExecuteActionTemplate(Octopus.Client.Model.ActionTemplateResource, Dictionary<String, PropertyValueResource>, String[], String[], String[], String)
    Octopus.Client.Model.TaskResource ExecuteAdHocScript(String, String[], String[], String[], String, String)
    Octopus.Client.Model.TaskResource ExecuteBackup(String)
    Octopus.Client.Model.TaskResource ExecuteCalamariUpdate(String, String[])
    Octopus.Client.Model.TaskResource ExecuteCommunityActionTemplatesSynchronisation(String)
    Octopus.Client.Model.TaskResource ExecuteHealthCheck(String, Int32, Int32, String, String[])
    Octopus.Client.Model.TaskResource ExecuteTentacleUpgrade(String, String, String[])
    List<TaskResource> GetAllActive(Int32)
    Octopus.Client.Model.TaskDetailsResource GetDetails(Octopus.Client.Model.TaskResource)
    IReadOnlyList<TaskResource> GetQueuedBehindTasks(Octopus.Client.Model.TaskResource)
    String GetRawOutputLog(Octopus.Client.Model.TaskResource)
    void ModifyState(Octopus.Client.Model.TaskResource, Octopus.Client.Model.TaskState, String)
    void Rerun(Octopus.Client.Model.TaskResource)
    void WaitForCompletion(Octopus.Client.Model.TaskResource, Int32, Int32, Action<TaskResource[]>)
    void WaitForCompletion(Octopus.Client.Model.TaskResource[], Int32, Int32, Action<TaskResource[]>)
    void WaitForCompletion(Octopus.Client.Model.TaskResource[], Int32, Nullable<TimeSpan>, Action<TaskResource[]>)
  }
  interface ITeamsRepository
    Octopus.Client.Repositories.ICreate<TeamResource>
    Octopus.Client.Repositories.IModify<TeamResource>
    Octopus.Client.Repositories.IDelete<TeamResource>
    Octopus.Client.Repositories.IFindByName<TeamResource>
    Octopus.Client.Repositories.IPaginate<TeamResource>
    Octopus.Client.Repositories.IGet<TeamResource>
  {
  }
  interface ITeamsV2Repository
    Octopus.Client.Repositories.ICreate<TeamV2Resource>
    Octopus.Client.Repositories.IModify<TeamV2Resource>
    Octopus.Client.Repositories.IDelete<TeamV2Resource>
    Octopus.Client.Repositories.IFindByName<TeamV2Resource>
    Octopus.Client.Repositories.IPaginate<TeamV2Resource>
    Octopus.Client.Repositories.IGet<TeamV2Resource>
  {
  }
  interface ITenantRepository
    Octopus.Client.Repositories.ICreate<TenantResource>
    Octopus.Client.Repositories.IModify<TenantResource>
    Octopus.Client.Repositories.IGet<TenantResource>
    Octopus.Client.Repositories.IDelete<TenantResource>
    Octopus.Client.Repositories.IFindByName<TenantResource>
    Octopus.Client.Repositories.IPaginate<TenantResource>
    Octopus.Client.Repositories.IGetAll<TenantResource>
  {
    Octopus.Client.Editors.TenantEditor CreateOrModify(String)
    List<TenantResource> FindAll(String, String[], Int32)
    List<TenantsMissingVariablesResource> GetMissingVariables(String, String, String)
    Octopus.Client.Model.TenantVariableResource GetVariables(Octopus.Client.Model.TenantResource)
    Octopus.Client.Model.TenantVariableResource ModifyVariables(Octopus.Client.Model.TenantResource, Octopus.Client.Model.TenantVariableResource)
    void SetLogo(Octopus.Client.Model.TenantResource, String, Stream)
  }
  interface IUserRepository
    Octopus.Client.Repositories.IPaginate<UserResource>
    Octopus.Client.Repositories.IGet<UserResource>
    Octopus.Client.Repositories.IModify<UserResource>
    Octopus.Client.Repositories.IDelete<UserResource>
    Octopus.Client.Repositories.ICreate<UserResource>
  {
    Octopus.Client.Model.UserResource Create(String, String, String, String)
    Octopus.Client.Model.ApiKeyResource CreateApiKey(Octopus.Client.Model.UserResource, String)
    Octopus.Client.Model.UserResource CreateServiceAccount(String, String)
    List<ApiKeyResource> GetApiKeys(Octopus.Client.Model.UserResource)
    Octopus.Client.Model.UserResource GetCurrent()
    Octopus.Client.Model.UserPermissionSetResource GetPermissions(Octopus.Client.Model.UserResource)
    Octopus.Client.Model.InvitationResource Invite(String)
    Octopus.Client.Model.InvitationResource Invite(Octopus.Client.Model.ReferenceCollection)
    Octopus.Client.Model.UserResource Register(Octopus.Client.Model.RegisterCommand)
    void RevokeApiKey(Octopus.Client.Model.ApiKeyResource)
    void SignIn(Octopus.Client.Model.LoginCommand)
    void SignIn(String, String, Boolean)
    void SignOut()
  }
  interface IUserRolesRepository
    Octopus.Client.Repositories.IFindByName<UserRoleResource>
    Octopus.Client.Repositories.IPaginate<UserRoleResource>
    Octopus.Client.Repositories.IGet<UserRoleResource>
    Octopus.Client.Repositories.ICreate<UserRoleResource>
    Octopus.Client.Repositories.IModify<UserRoleResource>
    Octopus.Client.Repositories.IDelete<UserRoleResource>
  {
  }
  interface IVariableSetRepository
    Octopus.Client.Repositories.IGet<VariableSetResource>
    Octopus.Client.Repositories.IModify<VariableSetResource>
  {
    String[] GetVariableNames(String, String[])
  }
}
Octopus.Client.Repositories.Async
{
  interface IAccountRepository
    Octopus.Client.Repositories.Async.ICreate<AccountResource>
    Octopus.Client.Repositories.Async.IModify<AccountResource>
    Octopus.Client.Repositories.Async.IDelete<AccountResource>
    Octopus.Client.Repositories.Async.IGet<AccountResource>
    Octopus.Client.Repositories.Async.IFindByName<AccountResource>
    Octopus.Client.Repositories.Async.IPaginate<AccountResource>
  {
  }
  interface IActionTemplateRepository
    Octopus.Client.Repositories.Async.ICreate<ActionTemplateResource>
    Octopus.Client.Repositories.Async.IModify<ActionTemplateResource>
    Octopus.Client.Repositories.Async.IDelete<ActionTemplateResource>
    Octopus.Client.Repositories.Async.IGet<ActionTemplateResource>
    Octopus.Client.Repositories.Async.IFindByName<ActionTemplateResource>
    Octopus.Client.Repositories.Async.IPaginate<ActionTemplateResource>
    Octopus.Client.Repositories.Async.IGetAll<ActionTemplateResource>
  {
    Task<ActionTemplateResource> GetVersion(Octopus.Client.Model.ActionTemplateResource, Int32)
    Task<List<ActionTemplateSearchResource>> Search()
    Task SetLogo(Octopus.Client.Model.ActionTemplateResource, String, Stream)
    Task<ActionUpdateResultResource[]> UpdateActions(Octopus.Client.Model.ActionTemplateResource, Octopus.Client.Model.ActionsUpdateResource)
  }
  interface IArtifactRepository
    Octopus.Client.Repositories.Async.IPaginate<ArtifactResource>
    Octopus.Client.Repositories.Async.IGet<ArtifactResource>
    Octopus.Client.Repositories.Async.ICreate<ArtifactResource>
    Octopus.Client.Repositories.Async.IModify<ArtifactResource>
    Octopus.Client.Repositories.Async.IDelete<ArtifactResource>
  {
    Task<ResourceCollection<ArtifactResource>> FindRegarding(Octopus.Client.Extensibility.IResource)
    Task<Stream> GetContent(Octopus.Client.Model.ArtifactResource)
    Task PutContent(Octopus.Client.Model.ArtifactResource, Stream)
  }
  interface IBackupRepository
  {
    Task<BackupConfigurationResource> GetConfiguration()
    Task<BackupConfigurationResource> ModifyConfiguration(Octopus.Client.Model.BackupConfigurationResource)
  }
  interface IBuiltInPackageRepositoryRepository
  {
    Task DeletePackage(Octopus.Client.Model.PackageResource)
    Task DeletePackages(IReadOnlyList<PackageResource>)
    Task<ResourceCollection<PackageFromBuiltInFeedResource>> LatestPackages(Int32, Int32)
    Task<ResourceCollection<PackageFromBuiltInFeedResource>> ListPackages(String, Int32, Int32)
    Task<PackageFromBuiltInFeedResource> PushPackage(String, Stream, Boolean)
  }
  interface ICertificateConfigurationRepository
    Octopus.Client.Repositories.Async.IGet<CertificateConfigurationResource>
    Octopus.Client.Repositories.Async.IFindByName<CertificateConfigurationResource>
    Octopus.Client.Repositories.Async.IPaginate<CertificateConfigurationResource>
  {
    Task<CertificateConfigurationResource> GetOctopusCertificate()
  }
  interface ICertificateRepository
    Octopus.Client.Repositories.Async.IGet<CertificateResource>
    Octopus.Client.Repositories.Async.IFindByName<CertificateResource>
    Octopus.Client.Repositories.Async.IPaginate<CertificateResource>
    Octopus.Client.Repositories.Async.ICreate<CertificateResource>
    Octopus.Client.Repositories.Async.IModify<CertificateResource>
    Octopus.Client.Repositories.Async.IDelete<CertificateResource>
  {
    Task Archive(Octopus.Client.Model.CertificateResource)
    Task<Stream> Export(Octopus.Client.Model.CertificateResource, Nullable<CertificateFormat>, String, Boolean)
    Task<CertificateConfigurationResource> GetOctopusCertificate()
    Task<CertificateResource> Replace(Octopus.Client.Model.CertificateResource, String, String)
    Task UnArchive(Octopus.Client.Model.CertificateResource)
  }
  interface IChannelRepository
    Octopus.Client.Repositories.Async.ICreate<ChannelResource>
    Octopus.Client.Repositories.Async.IModify<ChannelResource>
    Octopus.Client.Repositories.Async.IGet<ChannelResource>
    Octopus.Client.Repositories.Async.IDelete<ChannelResource>
    Octopus.Client.Repositories.Async.IPaginate<ChannelResource>
  {
    Task<ChannelEditor> CreateOrModify(Octopus.Client.Model.ProjectResource, String)
    Task<ChannelEditor> CreateOrModify(Octopus.Client.Model.ProjectResource, String, String)
    Task<ChannelResource> FindByName(Octopus.Client.Model.ProjectResource, String)
  }
  interface ICommunityActionTemplateRepository
    Octopus.Client.Repositories.Async.IGet<CommunityActionTemplateResource>
  {
    Task<ActionTemplateResource> GetInstalledTemplate(Octopus.Client.Model.CommunityActionTemplateResource)
    Task Install(Octopus.Client.Model.CommunityActionTemplateResource)
    Task UpdateInstallation(Octopus.Client.Model.CommunityActionTemplateResource)
  }
  interface IConfigurationRepository
  {
    Task<T> Get()
    Task<T> Modify(Octopus.Client.Repositories.Async.T)
  }
  interface ICreate`1
  {
    Task<TResource> Create(Octopus.Client.Repositories.Async.TResource, Object)
  }
  interface IDashboardConfigurationRepository
  {
    Task<DashboardConfigurationResource> GetDashboardConfiguration()
    Task<DashboardConfigurationResource> ModifyDashboardConfiguration(Octopus.Client.Model.DashboardConfigurationResource)
  }
  interface IDashboardRepository
  {
    Task<DashboardResource> GetDashboard()
    Task<DashboardResource> GetDynamicDashboard(String[], String[])
  }
  interface IDefectsRepository
  {
    Task<ResourceCollection<DefectResource>> GetDefects(Octopus.Client.Model.ReleaseResource)
    Task RaiseDefect(Octopus.Client.Model.ReleaseResource, String)
    Task ResolveDefect(Octopus.Client.Model.ReleaseResource)
  }
  interface IDelete`1
  {
    Task Delete(Octopus.Client.Repositories.Async.TResource)
  }
  interface IDeploymentProcessRepository
    Octopus.Client.Repositories.Async.IGet<DeploymentProcessResource>
    Octopus.Client.Repositories.Async.IModify<DeploymentProcessResource>
  {
    Task<ReleaseTemplateResource> GetTemplate(Octopus.Client.Model.DeploymentProcessResource, Octopus.Client.Model.ChannelResource)
  }
  interface IDeploymentRepository
    Octopus.Client.Repositories.Async.IGet<DeploymentResource>
    Octopus.Client.Repositories.Async.ICreate<DeploymentResource>
    Octopus.Client.Repositories.Async.IPaginate<DeploymentResource>
  {
    Task<ResourceCollection<DeploymentResource>> FindAll(String[], String[], Int32, Nullable<Int32>)
    Task<ResourceCollection<DeploymentResource>> FindBy(String[], String[], Int32, Nullable<Int32>)
    Task<TaskResource> GetTask(Octopus.Client.Model.DeploymentResource)
    Task Paginate(String[], String[], Func<ResourceCollection<DeploymentResource>, Boolean>)
    Task Paginate(String[], String[], String[], Func<ResourceCollection<DeploymentResource>, Boolean>)
  }
  interface IEnvironmentRepository
    Octopus.Client.Repositories.Async.IFindByName<EnvironmentResource>
    Octopus.Client.Repositories.Async.IPaginate<EnvironmentResource>
    Octopus.Client.Repositories.Async.IGet<EnvironmentResource>
    Octopus.Client.Repositories.Async.ICreate<EnvironmentResource>
    Octopus.Client.Repositories.Async.IModify<EnvironmentResource>
    Octopus.Client.Repositories.Async.IDelete<EnvironmentResource>
    Octopus.Client.Repositories.Async.IGetAll<EnvironmentResource>
  {
    Task<EnvironmentEditor> CreateOrModify(String)
    Task<EnvironmentEditor> CreateOrModify(String, String)
    Task<List<MachineResource>> GetMachines(Octopus.Client.Model.EnvironmentResource, Nullable<Int32>, Nullable<Int32>, String, String, Nullable<Boolean>, String, String, String, String)
    Task Sort(String[])
    Task<EnvironmentsSummaryResource> Summary(String, String, String, String, Nullable<Boolean>, String, String, String, String, Nullable<Boolean>)
  }
  interface IEventRepository
    Octopus.Client.Repositories.Async.IGet<EventResource>
  {
    Task<ResourceCollection<EventResource>> List(Int32, String, String, Boolean)
    Task<ResourceCollection<EventResource>> List(Int32, Nullable<Int32>, String, String, String, String, Boolean, String, String, String, String, String, String, String, String, Nullable<Int64>, Nullable<Int64>, String)
  }
  interface IFeaturesConfigurationRepository
  {
    Task<FeaturesConfigurationResource> GetFeaturesConfiguration()
    Task<FeaturesConfigurationResource> ModifyFeaturesConfiguration(Octopus.Client.Model.FeaturesConfigurationResource)
  }
  interface IFeedRepository
    Octopus.Client.Repositories.Async.ICreate<FeedResource>
    Octopus.Client.Repositories.Async.IModify<FeedResource>
    Octopus.Client.Repositories.Async.IDelete<FeedResource>
    Octopus.Client.Repositories.Async.IGet<FeedResource>
    Octopus.Client.Repositories.Async.IFindByName<FeedResource>
    Octopus.Client.Repositories.Async.IPaginate<FeedResource>
  {
    Task<List<PackageResource>> GetVersions(Octopus.Client.Model.FeedResource, String[])
  }
  interface IFindByName`1
    Octopus.Client.Repositories.Async.IPaginate<TResource>
  {
    Task<TResource> FindByName(String, String, Object)
    Task<List<TResource>> FindByNames(IEnumerable<String>, String, Object)
  }
  interface IGet`1
  {
    Task<TResource> Get(String)
    Task<List<TResource>> Get(String[])
    Task<TResource> Refresh(Octopus.Client.Repositories.Async.TResource)
  }
  interface IGetAll`1
  {
    Task<List<TResource>> GetAll()
  }
  interface IInterruptionRepository
    Octopus.Client.Repositories.Async.IGet<InterruptionResource>
  {
    Task<UserResource> GetResponsibleUser(Octopus.Client.Model.InterruptionResource)
    Task<ResourceCollection<InterruptionResource>> List(Int32, Nullable<Int32>, Boolean, String)
    Task Submit(Octopus.Client.Model.InterruptionResource)
    Task TakeResponsibility(Octopus.Client.Model.InterruptionResource)
  }
  interface ILibraryVariableSetRepository
    Octopus.Client.Repositories.Async.ICreate<LibraryVariableSetResource>
    Octopus.Client.Repositories.Async.IGet<LibraryVariableSetResource>
    Octopus.Client.Repositories.Async.IModify<LibraryVariableSetResource>
    Octopus.Client.Repositories.Async.IDelete<LibraryVariableSetResource>
    Octopus.Client.Repositories.Async.IFindByName<LibraryVariableSetResource>
    Octopus.Client.Repositories.Async.IPaginate<LibraryVariableSetResource>
  {
    Task<LibraryVariableSetEditor> CreateOrModify(String)
    Task<LibraryVariableSetEditor> CreateOrModify(String, String)
  }
  interface ILifecyclesRepository
    Octopus.Client.Repositories.Async.IGet<LifecycleResource>
    Octopus.Client.Repositories.Async.ICreate<LifecycleResource>
    Octopus.Client.Repositories.Async.IModify<LifecycleResource>
    Octopus.Client.Repositories.Async.IDelete<LifecycleResource>
    Octopus.Client.Repositories.Async.IFindByName<LifecycleResource>
    Octopus.Client.Repositories.Async.IPaginate<LifecycleResource>
  {
    Task<LifecycleEditor> CreateOrModify(String)
    Task<LifecycleEditor> CreateOrModify(String, String)
  }
  interface IMachinePolicyRepository
    Octopus.Client.Repositories.Async.IFindByName<MachinePolicyResource>
    Octopus.Client.Repositories.Async.IPaginate<MachinePolicyResource>
    Octopus.Client.Repositories.Async.ICreate<MachinePolicyResource>
    Octopus.Client.Repositories.Async.IModify<MachinePolicyResource>
    Octopus.Client.Repositories.Async.IGet<MachinePolicyResource>
    Octopus.Client.Repositories.Async.IDelete<MachinePolicyResource>
  {
  }
  interface IMachineRepository
    Octopus.Client.Repositories.Async.IFindByName<MachineResource>
    Octopus.Client.Repositories.Async.IPaginate<MachineResource>
    Octopus.Client.Repositories.Async.IGet<MachineResource>
    Octopus.Client.Repositories.Async.ICreate<MachineResource>
    Octopus.Client.Repositories.Async.IModify<MachineResource>
    Octopus.Client.Repositories.Async.IDelete<MachineResource>
  {
    Task<MachineEditor> CreateOrModify(String, Octopus.Client.Model.Endpoints.EndpointResource, Octopus.Client.Model.EnvironmentResource[], String[], Octopus.Client.Model.TenantResource[], Octopus.Client.Model.TagResource[], Nullable<TenantedDeploymentMode>)
    Task<MachineEditor> CreateOrModify(String, Octopus.Client.Model.Endpoints.EndpointResource, Octopus.Client.Model.EnvironmentResource[], String[])
    Task<MachineResource> Discover(String, Int32, Nullable<DiscoverableEndpointType>)
    Task<List<MachineResource>> FindByThumbprint(String)
    Task<MachineConnectionStatus> GetConnectionStatus(Octopus.Client.Model.MachineResource)
    Task<IReadOnlyList<TaskResource>> GetTasks(Octopus.Client.Model.MachineResource)
    Task<IReadOnlyList<TaskResource>> GetTasks(Octopus.Client.Model.MachineResource, Object)
    Task<ResourceCollection<MachineResource>> List(Int32, Nullable<Int32>, String, String, String, String, Nullable<Boolean>, String, String, String, String, String)
  }
  interface IMachineRoleRepository
  {
    Task<List<String>> GetAllRoleNames()
  }
  interface IMigrationRepository
  {
    Task<MigrationImportResource> Import(Octopus.Client.Model.Migrations.MigrationImportResource)
    Task<MigrationPartialExportResource> PartialExport(Octopus.Client.Model.Migrations.MigrationPartialExportResource)
  }
  interface IModify`1
  {
    Task<TResource> Modify(Octopus.Client.Repositories.Async.TResource)
  }
  interface IOctopusServerNodeRepository
    Octopus.Client.Repositories.Async.IModify<OctopusServerNodeResource>
    Octopus.Client.Repositories.Async.IDelete<OctopusServerNodeResource>
    Octopus.Client.Repositories.Async.IGet<OctopusServerNodeResource>
    Octopus.Client.Repositories.Async.IFindByName<OctopusServerNodeResource>
    Octopus.Client.Repositories.Async.IPaginate<OctopusServerNodeResource>
  {
  }
  interface IPaginate`1
  {
    Task<List<TResource>> FindAll(String, Object)
    Task<List<TResource>> FindMany(Func<TResource, Boolean>, String, Object)
    Task<TResource> FindOne(Func<TResource, Boolean>, String, Object)
    Task Paginate(Func<ResourceCollection<TResource>, Boolean>, String, Object)
  }
  interface IProjectGroupRepository
    Octopus.Client.Repositories.Async.IFindByName<ProjectGroupResource>
    Octopus.Client.Repositories.Async.IPaginate<ProjectGroupResource>
    Octopus.Client.Repositories.Async.IGet<ProjectGroupResource>
    Octopus.Client.Repositories.Async.ICreate<ProjectGroupResource>
    Octopus.Client.Repositories.Async.IModify<ProjectGroupResource>
    Octopus.Client.Repositories.Async.IDelete<ProjectGroupResource>
    Octopus.Client.Repositories.Async.IGetAll<ProjectGroupResource>
  {
    Task<ProjectGroupEditor> CreateOrModify(String)
    Task<ProjectGroupEditor> CreateOrModify(String, String)
    Task<List<ProjectResource>> GetProjects(Octopus.Client.Model.ProjectGroupResource)
  }
  interface IProjectRepository
    Octopus.Client.Repositories.Async.IFindByName<ProjectResource>
    Octopus.Client.Repositories.Async.IPaginate<ProjectResource>
    Octopus.Client.Repositories.Async.IGet<ProjectResource>
    Octopus.Client.Repositories.Async.ICreate<ProjectResource>
    Octopus.Client.Repositories.Async.IModify<ProjectResource>
    Octopus.Client.Repositories.Async.IDelete<ProjectResource>
    Octopus.Client.Repositories.Async.IGetAll<ProjectResource>
  {
    Task<ProjectEditor> CreateOrModify(String, Octopus.Client.Model.ProjectGroupResource, Octopus.Client.Model.LifecycleResource)
    Task<ProjectEditor> CreateOrModify(String, Octopus.Client.Model.ProjectGroupResource, Octopus.Client.Model.LifecycleResource, String)
    Task<IReadOnlyList<ReleaseResource>> GetAllReleases(Octopus.Client.Model.ProjectResource)
    Task<ResourceCollection<ChannelResource>> GetChannels(Octopus.Client.Model.ProjectResource)
    Task<ProgressionResource> GetProgression(Octopus.Client.Model.ProjectResource)
    Task<ReleaseResource> GetReleaseByVersion(Octopus.Client.Model.ProjectResource, String)
    Task<ResourceCollection<ReleaseResource>> GetReleases(Octopus.Client.Model.ProjectResource, Int32, Nullable<Int32>, String)
    Task<ResourceCollection<ProjectTriggerResource>> GetTriggers(Octopus.Client.Model.ProjectResource)
    Task SetLogo(Octopus.Client.Model.ProjectResource, String, Stream)
  }
  interface IProjectTriggerRepository
    Octopus.Client.Repositories.Async.ICreate<ProjectTriggerResource>
    Octopus.Client.Repositories.Async.IModify<ProjectTriggerResource>
    Octopus.Client.Repositories.Async.IGet<ProjectTriggerResource>
    Octopus.Client.Repositories.Async.IDelete<ProjectTriggerResource>
  {
    Task<ProjectTriggerEditor> CreateOrModify(Octopus.Client.Model.ProjectResource, String, Octopus.Client.Model.Triggers.TriggerFilterResource, Octopus.Client.Model.Triggers.TriggerActionResource)
    Task<ProjectTriggerResource> FindByName(Octopus.Client.Model.ProjectResource, String)
  }
  interface IProxyRepository
    Octopus.Client.Repositories.Async.IGet<ProxyResource>
    Octopus.Client.Repositories.Async.ICreate<ProxyResource>
    Octopus.Client.Repositories.Async.IModify<ProxyResource>
    Octopus.Client.Repositories.Async.IDelete<ProxyResource>
    Octopus.Client.Repositories.Async.IFindByName<ProxyResource>
    Octopus.Client.Repositories.Async.IPaginate<ProxyResource>
  {
  }
  interface IReleaseRepository
    Octopus.Client.Repositories.Async.IGet<ReleaseResource>
    Octopus.Client.Repositories.Async.ICreate<ReleaseResource>
    Octopus.Client.Repositories.Async.IPaginate<ReleaseResource>
    Octopus.Client.Repositories.Async.IModify<ReleaseResource>
    Octopus.Client.Repositories.Async.IDelete<ReleaseResource>
  {
    Task<ReleaseResource> Create(Octopus.Client.Model.ReleaseResource, Boolean)
    Task<ResourceCollection<ArtifactResource>> GetArtifacts(Octopus.Client.Model.ReleaseResource, Int32, Nullable<Int32>)
    Task<ResourceCollection<DeploymentResource>> GetDeployments(Octopus.Client.Model.ReleaseResource, Int32, Nullable<Int32>)
    Task<DeploymentPreviewResource> GetPreview(Octopus.Client.Model.DeploymentPromotionTarget)
    Task<DeploymentTemplateResource> GetTemplate(Octopus.Client.Model.ReleaseResource)
    Task<ReleaseResource> Modify(Octopus.Client.Model.ReleaseResource, Boolean)
    Task<ReleaseResource> SnapshotVariables(Octopus.Client.Model.ReleaseResource)
  }
  interface IRetentionPolicyRepository
  {
    Task<TaskResource> ApplyNow()
  }
  interface ISchedulerRepository
  {
    Task Start()
    Task Start(String)
    Task Stop()
    Task Stop(String)
    Task Trigger(String)
  }
  interface IServerStatusRepository
  {
    Task<ServerStatusResource> GetServerStatus()
    Task<SystemInfoResource> GetSystemInfo(Octopus.Client.Model.ServerStatusResource)
  }
  interface ISubscriptionRepository
    Octopus.Client.Repositories.Async.IFindByName<SubscriptionResource>
    Octopus.Client.Repositories.Async.IPaginate<SubscriptionResource>
    Octopus.Client.Repositories.Async.ICreate<SubscriptionResource>
    Octopus.Client.Repositories.Async.IModify<SubscriptionResource>
    Octopus.Client.Repositories.Async.IGet<SubscriptionResource>
    Octopus.Client.Repositories.Async.IDelete<SubscriptionResource>
  {
    Task<SubscriptionEditor> CreateOrModify(String, Octopus.Client.Model.EventNotificationSubscription, Boolean)
  }
  interface ITagSetRepository
    Octopus.Client.Repositories.Async.ICreate<TagSetResource>
    Octopus.Client.Repositories.Async.IModify<TagSetResource>
    Octopus.Client.Repositories.Async.IGet<TagSetResource>
    Octopus.Client.Repositories.Async.IDelete<TagSetResource>
    Octopus.Client.Repositories.Async.IFindByName<TagSetResource>
    Octopus.Client.Repositories.Async.IPaginate<TagSetResource>
    Octopus.Client.Repositories.Async.IGetAll<TagSetResource>
  {
    Task<TagSetEditor> CreateOrModify(String)
    Task<TagSetEditor> CreateOrModify(String, String)
    Task Sort(String[])
  }
  interface ITaskRepository
    Octopus.Client.Repositories.Async.IPaginate<TaskResource>
    Octopus.Client.Repositories.Async.IGet<TaskResource>
    Octopus.Client.Repositories.Async.ICreate<TaskResource>
  {
    Task Cancel(Octopus.Client.Model.TaskResource)
    Task<TaskResource> ExecuteActionTemplate(Octopus.Client.Model.ActionTemplateResource, Dictionary<String, PropertyValueResource>, String[], String[], String[], String)
    Task<TaskResource> ExecuteAdHocScript(String, String[], String[], String[], String, String)
    Task<TaskResource> ExecuteBackup(String)
    Task<TaskResource> ExecuteCalamariUpdate(String, String[])
    Task<TaskResource> ExecuteCommunityActionTemplatesSynchronisation(String)
    Task<TaskResource> ExecuteHealthCheck(String, Int32, Int32, String, String[])
    Task<TaskResource> ExecuteTentacleUpgrade(String, String, String[])
    Task<List<TaskResource>> GetAllActive(Int32)
    Task<TaskDetailsResource> GetDetails(Octopus.Client.Model.TaskResource)
    Task<IReadOnlyList<TaskResource>> GetQueuedBehindTasks(Octopus.Client.Model.TaskResource)
    Task<String> GetRawOutputLog(Octopus.Client.Model.TaskResource)
    Task ModifyState(Octopus.Client.Model.TaskResource, Octopus.Client.Model.TaskState, String)
    Task Rerun(Octopus.Client.Model.TaskResource)
    Task WaitForCompletion(Octopus.Client.Model.TaskResource, Int32, Int32, Action<TaskResource[]>)
    Task WaitForCompletion(Octopus.Client.Model.TaskResource[], Int32, Int32, Action<TaskResource[]>)
    Task WaitForCompletion(Octopus.Client.Model.TaskResource[], Int32, Int32, Func<TaskResource[], Task>)
    Task WaitForCompletion(Octopus.Client.Model.TaskResource[], Int32, Nullable<TimeSpan>, Func<TaskResource[], Task>)
  }
  interface ITeamsRepository
    Octopus.Client.Repositories.Async.ICreate<TeamResource>
    Octopus.Client.Repositories.Async.IModify<TeamResource>
    Octopus.Client.Repositories.Async.IDelete<TeamResource>
    Octopus.Client.Repositories.Async.IFindByName<TeamResource>
    Octopus.Client.Repositories.Async.IPaginate<TeamResource>
    Octopus.Client.Repositories.Async.IGet<TeamResource>
  {
  }
  interface ITeamsV2Repository
    Octopus.Client.Repositories.Async.ICreate<TeamV2Resource>
    Octopus.Client.Repositories.Async.IModify<TeamV2Resource>
    Octopus.Client.Repositories.Async.IDelete<TeamV2Resource>
    Octopus.Client.Repositories.Async.IFindByName<TeamV2Resource>
    Octopus.Client.Repositories.Async.IPaginate<TeamV2Resource>
    Octopus.Client.Repositories.Async.IGet<TeamV2Resource>
  {
  }
  interface ITenantRepository
    Octopus.Client.Repositories.Async.ICreate<TenantResource>
    Octopus.Client.Repositories.Async.IModify<TenantResource>
    Octopus.Client.Repositories.Async.IGet<TenantResource>
    Octopus.Client.Repositories.Async.IDelete<TenantResource>
    Octopus.Client.Repositories.Async.IFindByName<TenantResource>
    Octopus.Client.Repositories.Async.IPaginate<TenantResource>
    Octopus.Client.Repositories.Async.IGetAll<TenantResource>
  {
    Task<TenantEditor> CreateOrModify(String)
    Task<List<TenantResource>> FindAll(String, String[], Int32)
    Task<List<TenantsMissingVariablesResource>> GetMissingVariables(String, String, String)
    Task<TenantVariableResource> GetVariables(Octopus.Client.Model.TenantResource)
    Task<TenantVariableResource> ModifyVariables(Octopus.Client.Model.TenantResource, Octopus.Client.Model.TenantVariableResource)
    Task SetLogo(Octopus.Client.Model.TenantResource, String, Stream)
  }
  interface IUserRepository
    Octopus.Client.Repositories.Async.IPaginate<UserResource>
    Octopus.Client.Repositories.Async.IGet<UserResource>
    Octopus.Client.Repositories.Async.IModify<UserResource>
    Octopus.Client.Repositories.Async.IDelete<UserResource>
    Octopus.Client.Repositories.Async.ICreate<UserResource>
  {
    Task<UserResource> Create(String, String, String, String)
    Task<ApiKeyResource> CreateApiKey(Octopus.Client.Model.UserResource, String)
    Task<UserResource> CreateServiceAccount(String, String)
    Task<List<ApiKeyResource>> GetApiKeys(Octopus.Client.Model.UserResource)
    Task<UserResource> GetCurrent()
    Task<UserPermissionSetResource> GetPermissions(Octopus.Client.Model.UserResource)
    Task<InvitationResource> Invite(String)
    Task<InvitationResource> Invite(Octopus.Client.Model.ReferenceCollection)
    Task<UserResource> Register(Octopus.Client.Model.RegisterCommand)
    Task RevokeApiKey(Octopus.Client.Model.ApiKeyResource)
    Task SignIn(Octopus.Client.Model.LoginCommand)
    Task SignIn(String, String, Boolean)
    Task SignOut()
  }
  interface IUserRolesRepository
    Octopus.Client.Repositories.Async.IFindByName<UserRoleResource>
    Octopus.Client.Repositories.Async.IPaginate<UserRoleResource>
    Octopus.Client.Repositories.Async.IGet<UserRoleResource>
    Octopus.Client.Repositories.Async.ICreate<UserRoleResource>
    Octopus.Client.Repositories.Async.IModify<UserRoleResource>
    Octopus.Client.Repositories.Async.IDelete<UserRoleResource>
  {
  }
  interface IVariableSetRepository
    Octopus.Client.Repositories.Async.IGet<VariableSetResource>
    Octopus.Client.Repositories.Async.IModify<VariableSetResource>
  {
    Task<String[]> GetVariableNames(String, String[])
  }
}
Octopus.Client.Serialization
{
  class AccountConverter
    Octopus.Client.Serialization.InheritedClassConverter<AccountResource, AccountType>
  {
    .ctor()
  }
  class EndpointConverter
    Octopus.Client.Serialization.InheritedClassConverter<EndpointResource, CommunicationStyle>
  {
    .ctor()
  }
  class FeedConverter
    Octopus.Client.Serialization.InheritedClassConverter<FeedResource, FeedType>
  {
    .ctor()
  }
  class HrefConverter
    JsonConverter
  {
    .ctor(Func<String>)
    Boolean CanConvert(Type)
    Object ReadJson(JsonReader, Type, Object, JsonSerializer)
    void WriteJson(JsonWriter, Object, JsonSerializer)
  }
  abstract class InheritedClassConverter`2
    JsonConverter
  {
    Boolean CanConvert(Type)
    Object ReadJson(JsonReader, Type, Object, JsonSerializer)
    void WriteJson(JsonWriter, Object, JsonSerializer)
  }
  abstract class JsonSerialization
  {
    static Octopus.Client.Serialization.T DeserializeObject(String)
    static JsonSerializerSettings GetDefaultSerializerSettings()
    static String SerializeObject(Object)
  }
  class TriggerActionConverter
    Octopus.Client.Serialization.InheritedClassConverter<TriggerActionResource, TriggerActionType>
  {
    .ctor()
  }
  class TriggerFilterConverter
    Octopus.Client.Serialization.InheritedClassConverter<TriggerFilterResource, TriggerFilterType>
  {
    .ctor()
  }
}
Octopus.Client.Util
{
  class HashCodeCombiner
  {
    .ctor()
    Int32 CombinedHash { get; }
    Octopus.Client.Util.HashCodeCombiner AddInt32(Int32)
    Octopus.Client.Util.HashCodeCombiner AddObject(Int32)
    Octopus.Client.Util.HashCodeCombiner AddObject(Boolean)
    Octopus.Client.Util.HashCodeCombiner AddObject(Object)
    static Int32 GetHashCode(Object[])
  }
}
Octopus.Client.Validation
{
  class ContainsSomeValidCharactersAttribute
    _Attribute
    Attribute
  {
    .ctor()
  }
  class NonEmptyCollectionAttribute
    _Attribute
    ValidationAttribute
  {
    .ctor()
    Boolean IsValid(Object)
  }
  class NonEmptyCollectionItemAttribute
    _Attribute
    ValidationAttribute
  {
    .ctor()
    Boolean IsValid(Object)
  }
  class PasswordComplexityAttribute
    _Attribute
    ValidationAttribute
  {
    static System.String DefaultMessage
    .ctor()
    static Boolean IsPasswordStrongEnough(String)
    Boolean IsValid(Object)
  }
  class PathSegmentAttribute
    _Attribute
    Attribute
  {
    .ctor()
  }
  class ValidSemanticVersionOrMaskAttribute
    _Attribute
    ValidationAttribute
  {
    .ctor()
    Boolean IsValid(Object)
  }
}